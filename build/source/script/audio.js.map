{"version":3,"sources":["../../../source/script/audio-dev.js"],"names":["APlayer","_classCallCheck","this","el","splash","splashTitle","splashSubtitle","splashAuthor","splashLength","startBtn","resumeBtn","dwnldBtn","dwnldBtnMenu","main","showProfileBtn","closeProfileBtn","profileDisplay","trackTitle","miniDisplay","trackList","expandTracksBtn","ccSpecDisplay","spectrumDisplay","captionDisplay","bodyControls","ccToggle","spectrumToggle","warning","error","errorIcon","errorTitle","errorBody","playerId","copyright","player","manifest","album","url","program","reference","names","_parseUri","window","location","href","params","URLSearchParams","search","getManifest","self","manifestUrl","_selector","getAttribute","_requestFile","xhr","JSON","parse","response","ap_root_directory","length","setUIs","templateUrl","body","res","replace","innerHTML","getAlbum","_checkSupport","_setStartResumeListeners","_CCSpectrumDisplays","_expandTracksToggle","_setShowProfileListener","addEventListener","hideSplash","_marqueeEl","ready","_isEmpty","source","play","xml","responseXML","xmlSettings","_xmlSelector","xmlSetup","xmlTracks","settings","accent","splashFormat","imgFormat","analytics","version","title","textContent","subtitle","author","authorProfile","undefined","name","course","tracks","Array","prototype","forEach","call","obj","img","src","querySelector","push","console","log","setData","_setupAudioPlayer","dwnldMenu","fileName","ap_download_files","link","document","createElement","format","setAttribute","label","appendChild","date","Date","year","getFullYear","ap_copyright","_setProgram","plyrControlsUrl","controls","Plyr","autoplay","volume","clickToPlay","fullscreen","enabled","fallback","iosNative","on","event","detail","plyr","playpauseBtn","muteUnmuteBtn","loopBtn","playbackRateBtn","playing","classList","add","i","options","Number","value","speed","selectedIndex","loop","contains","restart","remove","evt","target","ap_custom_themes","find","ap_logo_default","decorationBar","colors","hex","span","style","backgroundColor","hasCoreFeaturesSupport","showError","hasAppearanceIusses","showWarning","Modernizr","audio","json","svg","csscalc","flexbox","canvas","cssanimations","bgsizecover","objectfit","iconStr","titleStr","bodyStr","icon","ariaHidden","createAttribute","display","setAttributeNode","_fadeIn","str","hideTime","setTimeout","_fadeOut","closeBtn","closeProfile","once","showProfile","minDisplay","_hideCCSpectrum","_slideDown","parentNode","_slideUp","toggles","displays","toggleCC","toggleSpectrum","all","querySelectorAll","callback","request","XMLHttpRequest","open","onload","status","abort","onerror","send","arr","index","splice","test","pop","parts","split","lastIndexOf","_cleanArray","offsetWidth","scrollWidth","runTime","startTime","start","setInterval","width","clearInterval","stop","clearTimeout","animationEvt","_whichAnimationEvent","_event","_callback","_fadeCallback","removeEventListener","_slideCallback","ani","animations","animation","OAnimation","MozAnimation","WebkitAnimation","fn","attachEvent","readyState"],"mappings":"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","file":"audio.js","sourcesContent":["/*\n * Audio Player\n *\n * @author: Ethan Lin\n * @url: https://github.com/oel-mediateam/audioplayer\n * @version: 2.0.0\n *\n * @license: The MIT License (MIT)\n * Copyright (c) 2014 - 2018 Media Serivces\n *\n */\n\n'use strict';\n\nclass APlayer {\n    \n    constructor() {\n        \n        this.el = {\n            splash: '#ap-splash',\n            splashTitle: '#ap-splash .cover-info .title',\n            splashSubtitle: '#ap-splash .cover-info .subtitle',\n            splashAuthor: '#ap-splash .cover-info .author',\n            splashLength: '#ap-splash .cover-info .length',\n            startBtn: '#ap-start-btn',\n            resumeBtn: '#ap-resume-btn',\n            dwnldBtn: '#ap-dwnld-btn',\n            dwnldBtnMenu: '#ap-dwnld-btn .dropdown-content',\n            main: '#ap-main',\n            showProfileBtn: '#show-profile',\n            closeProfileBtn: '#author-close-btn',\n            profileDisplay: '#author-overlay',\n            trackTitle: '.track-info .title-wrapper .title',\n            miniDisplay: '.track-list .minimized-display',\n            trackList: '.track-list .tracks',\n            expandTracksBtn: '.track-list .expand-btn',\n            ccSpecDisplay: '.body .cc-spec-display',\n            spectrumDisplay: '.body .cc-spec-display .spectrum',\n            captionDisplay: '.body .cc-spec-display .caption',\n            bodyControls: '.body .controls',\n            ccToggle: '#cc-toggle',\n            spectrumToggle: '#spectrum-toggle',\n            warning: '.body .warning-msg',\n            error: '#ap-error',\n            errorIcon: '#ap-error .icon',\n            errorTitle: '#ap-error .title',\n            errorBody: '#ap-error .body',\n            playerId: '#player',\n            copyright: '.copyright p',\n            player: null\n        };\n        \n        this.manifest ={};\n        this.album = {\n            url: 'assets/album.xml',\n            program: {}\n        };\n        this.player = null;\n        this.reference = {\n            names: this._parseUri( window.location.href ),\n            params: new URLSearchParams( window.location.search )\n        };\n        \n        this.getManifest();\n        \n    }\n    \n    getManifest() {\n        \n        let self = this;\n        let manifestUrl = self._selector( '#ap-manifest' ).getAttribute( 'href' );\n        \n        self._requestFile( manifestUrl, function( xhr ) {\n            \n            self.manifest = JSON.parse( xhr.response );\n            \n            if ( self.manifest.ap_root_directory.length === 0 ) {\n        \n                self.manifest.ap_root_directory = 'source/';\n                \n            }\n            \n            self.setUIs();\n            \n        } );\n        \n    }\n    \n    setUIs() {\n        \n        let self = this;\n        let templateUrl = self.manifest.ap_root_directory + 'script/templates/apui.tpl';\n        \n        self._requestFile( templateUrl, function( xhr ) {\n            \n            let body = self._selector( 'body' );\n            const res = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n            \n            body.innerHTML += res;\n            \n            self.getAlbum();\n            \n            self._checkSupport();\n            self._setStartResumeListeners();\n            self._CCSpectrumDisplays();\n            self._expandTracksToggle();\n            self._setShowProfileListener();\n            \n        } );\n        \n    }\n    \n    _setStartResumeListeners() {\n        \n        let self = this;\n        \n        let startBtn = self._selector( self.el.startBtn );\n        let resumeBtn = self._selector( self.el.resumeBtn );\n        \n        startBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            \n            self._marqueeEl( self._selector( self.el.trackTitle ) );\n            \n            if ( self.player.ready && !self._isEmpty( self.player.source ) ) {\n                \n                self.player.play();\n                \n            }\n            \n        } );\n        \n        resumeBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            \n        } );\n        \n    }\n    \n    getAlbum() {\n        \n        let self = this;\n        \n        self._requestFile( self.album.url, function( xhr ) {\n            \n            const xml = xhr.responseXML;\n            const xmlSettings = self._xmlSelector( xml, 'album' );\n            const xmlSetup = self._xmlSelector( xml, 'setup' );\n            const xmlTracks = self._xmlSelector( xml, 'track', true );\n            \n            // settings\n            self.album.settings = {};\n            self.album.settings.accent = xmlSettings.getAttribute( 'accent' );\n            self.album.settings.splashFormat = xmlSettings.getAttribute( 'splashImgFormat' );\n            self.album.settings.imgFormat = xmlSettings.getAttribute( 'imgFormat' );\n            self.album.settings.analytics = xmlSettings.getAttribute( 'analytics' );\n            self.album.settings.version = xmlSettings.getAttribute( 'xmlVersion' );\n            \n            // setup\n            self.album.title = self._xmlSelector( xmlSetup, 'title' ).textContent;\n            self.album.subtitle = self._xmlSelector( xmlSetup, 'subtitle' ).textContent;\n            self.album.author = self._xmlSelector( xmlSetup, 'author' ).getAttribute( 'name' );\n            self.album.authorProfile = self._xmlSelector( xmlSetup, 'author' ).textContent;\n            self.album.length = self._xmlSelector( xmlSetup, 'length' ).textContent;\n            \n            // set program\n            if ( self._isEmpty( xmlSetup.getAttribute( 'program' ) ) ) {\n                \n                if ( self.reference.names[3] !== undefined ) {\n                    \n                    self.album.program.name = self.reference.names[3];\n                    \n                }\n                \n            } else {\n                \n                self.album.program.name = xmlSetup.getAttribute( 'program' );\n                \n            }\n            \n            // set course\n            if ( !self._isEmpty( xmlSettings.getAttribute( 'course' ) ) ) {\n                \n                self.album.program.course = xmlSettings.getAttribute( 'course' );\n                \n            }\n            \n            // track(s)\n            self.album.tracks = [];\n            \n            Array.prototype.forEach.call( xmlTracks, function( el) {\n                \n                let obj = {};\n            \n                obj.img = el.getAttribute( 'img' );\n                obj.src = el.getAttribute( 'src' );\n                obj.title = el.querySelector( 'title' ).innerHTML;\n                obj.author = el.querySelector( 'author' ).innerHTML;\n                \n                self.album.tracks.push( obj );\n                \n            } );\n            \n            console.log( self.album );\n            \n            self.setData();\n            self._setupAudioPlayer();\n            \n        } );\n        \n    }\n    \n    setData() {\n        \n        let self = this;\n        \n        // page title\n        let pageTitle = this._selector( 'title' );\n        \n        pageTitle.innerHTML = this.album.title;\n        \n        // splash screen\n        let title = this._selector( this.el.splashTitle );\n        let subtitle = this._selector( this.el.splashSubtitle );\n        let author = this._selector( this.el.splashAuthor );\n        let length = this._selector( this.el.splashLength );\n        \n        title.innerHTML = this.album.title;\n        subtitle.innerHTML = this.album.subtitle;\n        author.innerHTML = this.album.author;\n        length.innerHTML = this.album.length;\n        \n        // splash download menu list\n        let dwnldMenu = this._selector( this.el.dwnldBtnMenu );\n        let fileName = self.reference.names;\n        \n        if ( fileName.length === 0 ) {\n            \n            fileName = 'album';\n            \n        } else {\n            \n            fileName = self.reference.names[self.reference.names.length - 1];\n            \n        }\n        \n        Array.prototype.forEach.call( this.manifest.ap_download_files, function( el ) {\n            \n            let link = document.createElement( 'a' );\n            \n            link.href = fileName + '.' + el.format;\n            link.setAttribute( 'download', true );\n            link.setAttribute( 'role', 'menuitem' );\n            link.innerHTML = el.label;\n            \n            dwnldMenu.appendChild( link );\n            \n        } );\n        \n        // copyright\n        let copyright = this._selector( this.el.copyright );\n        let date = new Date();\n        let year = date.getFullYear();\n        \n        copyright.innerHTML += '&copy; ' + year + '. ' + this.manifest.ap_copyright;\n        \n        this._setProgram();\n        \n    }\n    \n    _setupAudioPlayer() {\n        \n        let self = this;\n        let plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/custom_plyr_controls.tpl';\n        \n        self._requestFile( plyrControlsUrl, function( xhr ) {\n            \n            const controls = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n                \n            self.el.player = new Plyr( self.el.playerId, {\n        \n                controls: controls,\n                autoplay: false,\n                volume: 0.8,\n                clickToPlay: false,\n                fullscreen: {\n                    enabled: false,\n                    fallback: false,\n                    iosNative: false\n                }\n                            \n            } );\n            \n            self.el.player.on( 'ready', event => {\n                \n                self.player = event.detail.plyr;\n                const playpauseBtn = self._selector( '#ap-playpause' );\n                const muteUnmuteBtn = self._selector( '#ap-muteunmute' );\n                const loopBtn = self._selector( '#ap-loop' );\n                const playbackRateBtn = self._selector( '#ap-playbackRate' );\n                \n                if ( self.player.playing === true ) {\n                    \n                    playpauseBtn.classList.add( 'plyr__control--pressed' );\n                    \n                }\n                \n                // check playback rate and update playback rate select element\n                for ( var i = 0; i < playbackRateBtn.options.length; i++ ) {\n    \n                    if ( Number( playbackRateBtn.options[i].value ) === self.player.speed ) {\n                        \n                        playbackRateBtn.selectedIndex = i;\n                        break;\n                        \n                    }\n                    \n                }\n                \n                // on playback end\n                self.player.on( 'ended', function() {\n                    \n                    if ( self.player.loop === false ) {\n                        \n                        if ( playpauseBtn.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                            playpauseBtn.classList.add( 'plyr__control--pressed' );\n                            \n                        }\n                        \n                        self.player.restart();\n                        \n                    }\n                    \n                } );\n                \n                // toogle loop button state\n                loopBtn.addEventListener( 'click', function() {\n    \n                    if ( self.player.loop === false ) {\n                        \n                        self.player.loop = true;\n                        loopBtn.classList.add( 'active' );\n                        \n                    } else {\n                        \n                        self.player.loop = false;\n                        loopBtn.classList.remove( 'active' );\n                        \n                    }\n                    \n                } );\n                \n                // change playback rate\n                playbackRateBtn.addEventListener( 'change', function( evt ) {\n                    \n                    self.player.speed = Number( evt.target.options[evt.target.selectedIndex].value );\n                    \n                } );\n                \n                // toggle play/pause state\n                playpauseBtn.addEventListener( 'click', function( evt ) {\n                \n                    if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                        \n                        evt.target.classList.remove( 'plyr__control--pressed' );\n                        \n                    } else {\n                        \n                        evt.target.classList.add( 'plyr__control--pressed' );\n                        \n                    }\n                    \n                } );\n                \n                // toglle mute/unmute state\n                muteUnmuteBtn.addEventListener( 'click', function( evt ) {\n                    \n                    if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                        \n                        evt.target.classList.remove( 'plyr__control--pressed' );\n                        \n                    } else {\n                        \n                        evt.target.classList.add( 'plyr__control--pressed' );\n                        \n                    }\n                    \n                } );\n                    \n            } ); // end player ready event\n            \n        } );\n        \n    } // end _setupAudioPlayer\n    \n    _setProgram() {\n        \n        let self = this;\n        \n        if ( self.manifest.ap_custom_themes ) {\n            \n            self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                \n                return obj.name === self.album.program.name;\n                \n            } );\n            \n            if ( self.album.program === undefined ) {\n                \n                self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                    \n                    return obj.name === self.manifest.ap_logo_default;\n                    \n                } );\n                \n            }\n            \n        }\n        \n        let decorationBar = self._selector( '.program-theme' );\n    \n        self.album.program.colors.forEach( function( hex ) {\n                        \n            let span = document.createElement( 'span' );\n            span.style.backgroundColor = hex;\n            decorationBar.appendChild( span );\n            \n        } );\n        \n    }\n    \n    _checkSupport() {\n        \n        if ( this.hasCoreFeaturesSupport() ) {\n        \n            this.showError( '🙈', '', 'Your web browser does not support core audio player features.<br><a href=\"http://outdatedbrowser.com/en\" target=\"_blank\">Please update your web browser.</a>' );\n            return;\n            \n        }\n        \n        if ( this.hasAppearanceIusses() ) {\n        \n            this.showWarning( 'For better viewing, try a different web browser.' );\n            \n        }\n        \n    }\n    \n    hasCoreFeaturesSupport() {\n    \n        if ( !Modernizr.audio && Modernizr.json && Modernizr.svg\n             && Modernizr.csscalc && Modernizr.flexbox ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    hasAppearanceIusses() {\n    \n        if ( !Modernizr.canvas ) {\n            return true;\n        }\n        \n        if ( !Modernizr.cssanimations ) {\n            return true;\n        }\n        \n        if ( !Modernizr.bgsizecover ) {\n            return true\n        }\n        \n        if ( !Modernizr.objectfit ) {\n            return true\n        }\n        \n        return false;\n        \n    }\n    \n    showError( iconStr, titleStr, bodyStr ) {\n    \n        let splash = this._selector( this.el.splash );\n        let main = this._selector( this.el.main );\n        let error = this._selector( this.el.error );\n        let icon = this._selector( this.el.errorIcon );\n        let title = this._selector( this.el.errorTitle );\n        let body = this._selector( this.el.errorBody );\n        \n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = false;\n        \n        icon.innerHTML = iconStr;\n        title.innerHTML = titleStr;\n        body.innerHTML = bodyStr;\n        \n        splash.style.display = 'none';\n        main.style.display = 'none';\n        \n        error.style.display = 'flex';\n        error.setAttributeNode( ariaHidden );\n        \n        this._fadeIn( error );\n        \n    }\n    \n    showWarning( str ) {\n    \n        let self = this;\n        let warning = self._selector( self.el.warning );\n        let hideTime = 6000;\n        \n        warning.innerHTML = str;\n        warning.style.display = 'block';\n        \n        self._fadeIn( warning );\n        \n        window.setTimeout( function() {\n            \n            self._fadeOut( warning, function() {\n                \n                warning.innerHTML = '';\n                warning.style.display = 'none';\n                \n            } );\n            \n        }, hideTime );\n        \n    }\n    \n    hideSplash() {\n    \n        let splash = this._selector( this.el.splash );\n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = true;\n        \n        splash.classList.add( 'hide-splash' );\n        splash.setAttributeNode( ariaHidden );\n        \n    }\n    \n    showProfile() {\n        \n        let self = this;\n        let authorProfile = this._selector( this.el.profileDisplay );\n        let closeBtn = this._selector( this.el.closeProfileBtn );\n        \n        authorProfile.style.display = 'block';\n        this._fadeIn( authorProfile );\n        \n        closeBtn.addEventListener( 'click', function() {\n            self.closeProfile();\n        }, {once: true} );\n\n    }\n    \n    closeProfile() {\n        \n        let authorProfile = this._selector( this.el.profileDisplay );\n        \n        this._fadeOut( authorProfile, function() {\n            \n            authorProfile.style.display = '';\n            \n        } );\n\n    }\n    \n    _setShowProfileListener() {\n        \n        let self = this;\n        let showProfileBtn = this._selector( this.el.showProfileBtn );\n        \n        showProfileBtn.addEventListener( 'click', function() {\n            \n            self.showProfile();\n            \n        } );\n        \n    }\n    \n    _expandTracksToggle() {\n        \n        let self = this;\n        let expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        expandTracksBtn.addEventListener( 'click', function() {\n            \n            let trackList = self._selector( self.el.trackList );\n            let minDisplay = self._selector( self.el.miniDisplay );\n            \n            if ( trackList.style.display == 'none' || trackList.style.display == '' ) {\n                \n                trackList.style.display = 'block';\n                minDisplay.style.display = 'none';\n                \n                self._hideCCSpectrum();\n                \n                self._slideDown( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.add( 'rotate' );\n                    \n                } );\n                \n            } else {\n                \n                trackList.style.display = 'none';\n                minDisplay.style.display = 'flex';\n                \n                self._slideUp( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.remove( 'rotate' );\n                    self._CCSpectrumDisplays();\n                    \n                } );\n                \n            }\n            \n        } );\n        \n    }\n    \n    toggleCC() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        ccToggle.classList.add( 'disabled' );\n        spectrumToggle.classList.remove( 'disabled' );\n        \n        captionDisplay.classList.add( 'active' );\n        spectrumDisplay.classList.remove( 'active' );\n        \n    }\n    \n    toggleSpectrum() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        spectrumToggle.classList.add( 'disabled' );\n        ccToggle.classList.remove( 'disabled' );\n        \n        spectrumDisplay.classList.add( 'active' );\n        captionDisplay.classList.remove( 'active' );\n        \n    }\n    \n    _CCSpectrumDisplays() {\n        \n        let self = this;\n        let toggles = this._selector( this.el.bodyControls );\n        let displays = this._selector( this.el.ccSpecDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        if ( toggles.style.display === 'none' ) {\n            \n            toggles.style.display = '';\n            displays.style.display = '';\n            \n        } else {\n\n            self.toggleCC();\n            \n        }\n        \n        ccToggle.addEventListener( 'click', function() {\n            self.toggleCC();\n        } );\n        \n        spectrumToggle.addEventListener( 'click', function() {\n            self.toggleSpectrum();\n        } );\n        \n    }\n    \n    _hideCCSpectrum() {\n        \n        let displays = this._selector( this.el.ccSpecDisplay );\n        let toggles = this._selector( this.el.bodyControls );\n        \n        toggles.style.display = 'none';\n        displays.style.display = 'none';\n        \n    }\n    \n    /*** HELPER METHODS ***/\n    \n    _selector( str ) {\n        return document.querySelector( str );\n    }\n    \n    _xmlSelector( xml, str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return xml.querySelectorAll( str );\n            \n        } else {\n            \n            return xml.querySelector( str );\n            \n        }\n        \n    }\n    \n    _isEmpty( str ) {\n        return str === '' || undefined || null;\n    }\n    \n    _requestFile( url, callback ) {\n        \n        let self = this;\n        let body = self._selector( 'body' );\n        let request = new XMLHttpRequest();\n        \n        request.open( 'GET', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                callback( this );\n                \n            } else {\n                \n                body.innerHTML += '<div class=\"error\">Error ' + this.status + ' while loading <code>' + url + '</code></div>';\n                \n            }\n            \n            request.abort();\n            \n        };\n        \n        request.onerror = function() {\n            \n            body.innerHTML += '<div class=\"error\">Connection Error. Check your network.</div>';\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _cleanArray( arr ) {\n    \n        arr.forEach( function( value, index ) {\n            \n            if ( value === '' ) {\n                arr.splice( index, 1 );\n            }\n            \n        } );\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\.\\w*/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\:/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        return arr;\n        \n    }\n    \n    _parseUri( str ) {\n        \n        let parts =  str.split( '?' );\n        let target = parts[0];\n        \n        if ( target.lastIndexOf( '/' ) !== target.length - 1 ) {\n    \t\ttarget += '/';\n    \t}\n    \t\n    \treturn this._cleanArray( target.split( '/' ) );\n        \n    }\n    \n    /*** ANIMATION METHODS ***/\n    \n    _marqueeEl( el ) {\n        \n        let self = this;\n        \n        if ( el.offsetWidth < el.scrollWidth ) {\n            \n            let runTime = 15500;\n            let startTime = 5000;\n            \n            let start = window.setInterval( function() {\n                \n                el.parentNode.classList.add( 'marquee' );\n                \n                el.style.width = el.scrollWidth + 'px';\n                \n                window.clearInterval( start );\n                \n                let stop = window.setTimeout( function() {\n                    \n                    el.style.width = 'initial';\n                    \n                    self._fadeIn( el );\n                    \n                    el.parentNode.classList.remove( 'marquee' );\n                    window.clearTimeout( stop );\n                    self._marqueeEl( el );\n                    \n                }, runTime );\n                \n            }, startTime );\n            \n        }\n        \n    }\n    \n    _fadeIn( el, callback ) {\n        \n        el.classList.remove( 'fadeOut' );\n        el.classList.add( 'fadeIn' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeOut( el, callback ) {\n\n        el.classList.remove( 'fadeIn' );\n        el.classList.add( 'fadeOut' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.classList.remove( 'fadeIn' );\n        evt.target.classList.remove( 'fadeOut' );\n        evt.target.removeEventListener( evt.target.params._event, this._fadeCallback );\n        \n    }\n    \n    _slideDown( el, callback ) {\n        \n        el.classList.add( 'slideDown' );\n        el.classList.remove( 'slideUp' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideUp( el, callback ) {\n        \n        el.classList.add( 'slideUp' );\n        el.classList.remove( 'slideDown' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.removeEventListener( evt.target.params._event, this._slideCallback );\n        \n    } \n    \n    _whichAnimationEvent() {\n        \n        let ani;\n        let el = document.createElement( 'fakeelement' );\n        let animations = {\n            'animation': 'animationend',\n            'OAnimation': 'oAnimationEnd',\n            'MozAnimation': 'animationend',\n            'WebkitAnimation': 'webkitAnimationEnd'\n        }\n        \n        for ( ani in animations ) {\n            \n            if ( el.style[ani] !== undefined ) {\n                \n                return animations[ani];\n                \n            }\n            \n        }\n        \n    }\n    \n} // end APlayer class\n\n/**** ON DOM READY ****/\n( function ready( fn ) {\n    \n    if ( document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading' ) {\n        \n        fn();\n        \n    } else {\n        \n        document.addEventListener( 'DOMContentLoaded', fn );\n        \n    }\n    \n} )( function() {\n    \n    new APlayer();\n    \n} );\n"]}