{"version":3,"sources":["../../../source/script/audio-dev.js"],"names":["APlayer","_classCallCheck","this","el","splash","splashTitle","splashSubtitle","splashAuthor","splashLength","startBtn","resumeBtn","dwnldBtn","dwnldBtnMenu","main","mainBody","showProfileBtn","closeProfileBtn","profileDisplay","profileDisplayContent","profileDisplaySpinner","currentPic","trackTitle","trackAuthor","currentTrackNum","totalTracks","miniDisplay","upNextTrack","trackList","trackListItem","expandTracksBtn","ccSpecDisplay","spectrumDisplay","captionDisplay","bodyControls","ccToggle","spectrumToggle","next","previous","warning","error","errorIcon","errorTitle","errorBody","playerId","copyright","manifest","album","url","program","downloads","currentTrack","sameAuthor","sameAuthorLoaded","player","reference","names","_parseUri","window","location","href","params","URLSearchParams","search","marquee","start","stop","getManifest","self","manifestUrl","_selector","getAttribute","_requestFile","xhr","JSON","parse","response","ap_root_directory","length","setUIs","templateUrl","body","res","replace","innerHTML","getAlbum","_checkSupport","_setStartResumeListeners","_expandDownloadBtnMenu","_expandTracksToggle","_setShowProfileListener","tracks","Array","prototype","forEach","call","track","addEventListener","evt","target","className","nodeName","setTrack","currentTarget","preventDefault","btn","querySelector","menu","setAttribute","hideSplash","xml","responseXML","xmlSettings","_xmlSelector","xmlSetup","xmlTracks","settings","accent","splashFormat","trackImgFormat","analytics","version","title","textContent","subtitle","author","authorProfile","_isEmpty","undefined","name","course","obj","src","img","_sanitize","push","console","log","setData","_setupAudioPlayer","num","Number","currentTitle","_loadAuthorPic","parentNode","classList","remove","add","upNextTrackTitle","ready","captionUrl","_fileExists","exist","source","type","sources","kind","label","srclang","default","once","togglePlay","_stopMarquee","_marqueeEl","localPicUrl","centralPicUrl","ap_author_directory","authorPic","Image","appendChild","fileName","ap_download_files","file","format","link","document","createElement","style","display","dwnldFile","bgUrl","ap_splash_directory","splashBg","head","bgImg","backgroundImage","accentUrl","accentStyle","trackListDisplay","indx","li","a","numSpan","titleWrprSpan","titleSpan","button","svg","createElementNS","use","setAttributeNS","_trackListItemListener","date","Date","year","getFullYear","ap_copyright","_setProgram","plyrControlsUrl","controls","Plyr","hideControls","autoplay","volume","blankVideo","clickToPlay","fullscreen","enabled","fallback","iosNative","on","event","detail","plyr","_CCSpectrumDisplays","playpauseBtn","muteUnmuteBtn","loopBtn","playbackRateBtn","nextBtn","prevBtn","i","options","value","speed","selectedIndex","loop","contains","restart","ap_custom_themes","find","ap_logo_default","decorationBar","colors","hex","span","backgroundColor","hasCoreFeaturesSupport","showError","hasAppearanceIusses","showWarning","Modernizr","audio","json","csscalc","flexbox","canvas","cssanimations","bgsizecover","objectfit","iconStr","titleStr","bodyStr","icon","ariaHidden","createAttribute","setAttributeNode","_fadeIn","str","hideTime","setTimeout","_fadeOut","authorProfileDisplay","closeBtn","index","currentAuthor","currentProfile","profileUrl","that","spinner","send","callback_name","callbackName","on_success","onSuccess","on_timeout","onTimeout","timeout","timeout_trigger","data","clearTimeout","script","async","getElementsByTagName","_setProfile","profile","closeProfile","bio","authorProfileDisplayContent","showProfile","minDisplay","_hideCCSpectrum","_slideDown","setProperty","_slideUp","toggleCaptions","playing","toggles","displays","toggleCC","toggleSpectrum","all","querySelectorAll","toLowerCase","trim","callback","request","XMLHttpRequest","open","onload","status","abort","onerror","found","arr","splice","test","pop","parts","split","lastIndexOf","_cleanArray","offsetWidth","scrollWidth","runTime","startTime","setInterval","width","clearInterval","animationEvt","_whichAnimationEvent","_event","_callback","_fadeCallback","removeEventListener","_slideCallback","ani","animations","animation","OAnimation","MozAnimation","WebkitAnimation","fn","attachEvent","readyState"],"mappings":"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","file":"audio.js","sourcesContent":["/*\n * Audio Player\n *\n * @author: Ethan Lin\n * @url: https://github.com/oel-mediateam/audioplayer\n * @version: 2.0.0\n *\n * @license: The MIT License (MIT)\n * Copyright (c) 2014 - 2018 Media Serivces\n *\n */\n\n'use strict';\n\nclass APlayer {\n    \n    constructor() {\n        \n        this.el = {\n            splash: '#ap-splash',\n            splashTitle: '#ap-splash .cover-info .title',\n            splashSubtitle: '#ap-splash .cover-info .subtitle',\n            splashAuthor: '#ap-splash .cover-info .author',\n            splashLength: '#ap-splash .cover-info .length',\n            startBtn: '#ap-start-btn',\n            resumeBtn: '#ap-resume-btn',\n            dwnldBtn: '#ap-dwnld-btn',\n            dwnldBtnMenu: '#ap-dwnld-btn .dropdown-content',\n            main: '#ap-main',\n            mainBody: '#ap-main .body',\n            showProfileBtn: '#show-profile',\n            closeProfileBtn: '#author-close-btn',\n            profileDisplay: '#author-overlay',\n            profileDisplayContent: '#author-overlay .content',\n            profileDisplaySpinner: '#author-overlay .spinner',\n            currentPic: '.head .track-img button',\n            trackTitle: '.track-info .title-wrapper .title',\n            trackAuthor: '.track-info .author',\n            currentTrackNum: '.track-info .meta .current',\n            totalTracks: '.track-info .meta .total',\n            miniDisplay: '.track-list .minimized-display',\n            upNextTrack: '.track-list .minimized-display .ap_up_next_title',\n            trackList: '.track-list .tracks',\n            trackListItem: '.track-list .tracks li .ap-track',\n            expandTracksBtn: '.track-list .expand-btn',\n            ccSpecDisplay: '.body .cc-spec-display',\n            spectrumDisplay: '.body .cc-spec-display .spectrum',\n            captionDisplay: '.body .cc-spec-display .caption',\n            bodyControls: '.body .controls',\n            ccToggle: '#cc-toggle',\n            spectrumToggle: '#spectrum-toggle',\n            next: '#ap-next',\n            previous: '#ap-previous',\n            warning: '.body .warning-msg',\n            error: '#ap-error',\n            errorIcon: '#ap-error .icon',\n            errorTitle: '#ap-error .title',\n            errorBody: '#ap-error .body',\n            playerId: '#player',\n            copyright: '.copyright p'\n        };\n        \n        this.manifest ={};\n        this.album = {\n            url: 'assets/album.xml',\n            program: {},\n            downloads: [],\n            currentTrack: 0,\n            sameAuthor: true,\n            sameAuthorLoaded: false\n        };\n        this.player = null;\n        this.reference = {\n            names: this._parseUri( window.location.href ),\n            params: new URLSearchParams( window.location.search )\n        };\n        this.marquee ={\n            start: null,\n            stop: null\n        };\n        \n        this.getManifest();\n        \n    }\n    \n    getManifest() {\n        \n        const self = this;\n        let manifestUrl = self._selector( '#ap-manifest' ).getAttribute( 'href' );\n        \n        self._requestFile( manifestUrl, function( xhr ) {\n            \n            self.manifest = JSON.parse( xhr.response );\n            \n            if ( self.manifest.ap_root_directory.length === 0 ) {\n        \n                self.manifest.ap_root_directory = 'source/';\n                \n            }\n            \n            self.setUIs();\n            \n        } );\n        \n    }\n    \n    setUIs() {\n        \n        const self = this;\n        let templateUrl = self.manifest.ap_root_directory + 'script/templates/apui.tpl';\n        \n        self._requestFile( templateUrl, function( xhr ) {\n            \n            let body = self._selector( 'body' );\n            const res = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n            \n            body.innerHTML += res;\n            \n            self.getAlbum();\n            \n            self._checkSupport();\n            self._setStartResumeListeners();\n            self._expandDownloadBtnMenu();\n            self._expandTracksToggle();\n            self._setShowProfileListener();\n            \n        } );\n        \n    }\n    \n    _trackListItemListener() {\n        \n        const self = this;\n        let tracks = self._selector( self.el.trackListItem, true );\n        \n        Array.prototype.forEach.call( tracks, function( track ) {\n            \n            track.addEventListener( 'click', function( evt ) {\n                \n                if ( evt.target.className !== 'track-download' &&\n                evt.target.nodeName !== 'svg' && evt.target.nodeName !== 'use' ) {\n                    \n                    self.setTrack( evt.currentTarget.getAttribute( 'data-index' ) );\n                    evt.preventDefault();\n                    \n                }\n                \n            } );\n            \n        } );\n        \n    }\n    \n    _expandDownloadBtnMenu() {\n        \n        const self = this;\n        \n        let dwnldBtn = self._selector( self.el.dwnldBtn );\n        let btn = dwnldBtn.querySelector( 'button' );\n        let menu = self._selector( self.el.dwnldBtnMenu );\n        \n        dwnldBtn.addEventListener( 'mouseenter', function() {\n            \n            btn.setAttribute( 'aria-expanded', true );\n            menu.setAttribute( 'aria-expanded', true );\n            \n        } );\n        \n        dwnldBtn.addEventListener( 'mouseleave', function() {\n            \n            btn.setAttribute( 'aria-expanded', false );\n            menu.setAttribute( 'aria-expanded', false );\n            \n        } );\n        \n    }\n    \n    _setStartResumeListeners() {\n        \n        const self = this;\n        \n        let startBtn = self._selector( self.el.startBtn );\n        let resumeBtn = self._selector( self.el.resumeBtn );\n        \n        startBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            self.setTrack( self.album.currentTrack );\n            \n        } );\n        \n        resumeBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            self.setTrack( self.album.currentTrack );\n            \n        } );\n        \n    }\n    \n    getAlbum() {\n        \n        const self = this;\n        \n        self._requestFile( self.album.url, function( xhr ) {\n            \n            const xml = xhr.responseXML;\n            const xmlSettings = self._xmlSelector( xml, 'album' );\n            const xmlSetup = self._xmlSelector( xml, 'setup' );\n            const xmlTracks = self._xmlSelector( xml, 'track', true );\n            \n            // settings\n            self.album.settings = {};\n            self.album.settings.accent = xmlSettings.getAttribute( 'accent' );\n            self.album.settings.splashFormat = '.' + xmlSettings.getAttribute( 'splashImgFormat' );\n            self.album.settings.trackImgFormat = '.' + xmlSettings.getAttribute( 'trackImgFormat' );\n            self.album.settings.analytics = xmlSettings.getAttribute( 'analytics' );\n            self.album.settings.version = xmlSettings.getAttribute( 'xmlVersion' );\n            \n            // setup\n            self.album.title = self._xmlSelector( xmlSetup, 'title' ).textContent;\n            self.album.subtitle = self._xmlSelector( xmlSetup, 'subtitle' ).textContent;\n            self.album.author = self._xmlSelector( xmlSetup, 'author' ).getAttribute( 'name' );\n            self.album.authorProfile = self._xmlSelector( xmlSetup, 'author' ).textContent;\n            self.album.length = self._xmlSelector( xmlSetup, 'length' ).textContent;\n            \n            // set program\n            if ( self._isEmpty( xmlSetup.getAttribute( 'program' ) ) ) {\n                \n                if ( self.reference.names[3] !== undefined ) {\n                    \n                    self.album.program.name = self.reference.names[3];\n                    \n                }\n                \n            } else {\n                \n                self.album.program.name = xmlSetup.getAttribute( 'program' );\n                \n            }\n            \n            // set course\n            if ( !self._isEmpty( xmlSetup.getAttribute( 'course' ) ) ) {\n                \n                self.album.program.course = xmlSetup.getAttribute( 'course' );\n                \n            }\n            \n            // track(s)\n            self.album.tracks = [];\n            \n            Array.prototype.forEach.call( xmlTracks, function( el) {\n                \n                let obj = {};\n            \n                obj.src = el.getAttribute( 'src' );\n                obj.title = el.querySelector( 'title' ).innerHTML;\n                obj.author = el.querySelector( 'author' ).getAttribute( 'name' );\n                obj.authorProfile = el.querySelector( 'author' ).innerHTML;\n                \n                if ( self._isEmpty( obj.author ) ) {\n                    \n                    obj.author = self.album.author;\n                    \n                }\n                \n                if ( obj.author !== self.album.author ) {\n                    self.album.sameAuthor = false;\n                }\n                \n                if ( self._isEmpty( obj.author ) ) {\n                    \n                    obj.img = self._sanitize( self.album.author ) + self.album.settings.trackImgFormat;\n                    \n                } else {\n                    \n                    obj.img = self._sanitize( obj.author ) + self.album.settings.trackImgFormat;\n                    \n                }\n\n                self.album.tracks.push( obj );\n                \n            } );\n            \n            console.log( self.album );\n            \n            self.setData();\n            self._setupAudioPlayer();\n            \n        } );\n        \n    }\n    \n    setTrack( num ) {\n        \n        // hold the class\n        const self = this;\n        \n        num = Number( num );\n        \n        // display title\n        let currentTitle = self._selector( self.el.trackTitle );\n            \n        currentTitle.innerHTML = self.album.tracks[num].title;\n        \n        // display author\n        let currentAuthor = self._selector( self.el.trackAuthor );\n        \n        currentAuthor.innerHTML = self.album.tracks[num].author;\n        \n        // load author picture if the track author is different\n        if ( !self.album.sameAuthor ) {\n\n            self._loadAuthorPic( self.album.tracks[num] );\n            \n        }\n        \n        // load author picture once if same author\n        if ( self.album.sameAuthor && self.album.sameAuthorLoaded === false ) {\n                \n            self._loadAuthorPic( self.album.tracks[num] );\n            self.album.sameAuthorLoaded = true;\n            \n        }\n        \n        // if more than one track\n        if ( self.album.tracks.length > 1 ) {\n            \n            // display and get current track number\n            let currentTrack = self._selector( self.el.currentTrackNum );\n            currentTrack.innerHTML = num + 1;\n            \n            let totalTracks = self._selector( self.el.totalTracks );\n            totalTracks.innerHTML = self.album.tracks.length;\n            \n            // add active class to current track in list\n            const tracks = self._selector( self.el.trackListItem, true );\n            \n            Array.prototype.forEach.call( tracks, function( track ) {\n                track.parentNode.classList.remove( 'active' );\n            } );\n            \n            tracks[num].parentNode.classList.add( 'active' );\n            \n        }\n        \n        // display next track title\n        let upNextTrackTitle = self._selector( self.el.upNextTrack );\n        \n        if ( self.album.tracks.length > 1 && num < self.album.tracks.length - 1 ) {\n            \n            upNextTrackTitle.innerHTML = self.album.tracks[num + 1].title;\n            \n        }\n        \n        // play the audio if the player is ready after setting source\n        if ( self.player.ready ) {\n            \n            const captionUrl = 'assets/audio/' + self.album.tracks[num].src + '.vtt';\n            \n            self._fileExists( captionUrl, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    self.player.source = {\n                \n                        type: 'video',\n                        title: self.album.tracks[num].title,\n                        sources: [\n                            \n                            {\n                                \n                                src: 'assets/audio/' + self.album.tracks[num].src + '.mp3',\n                                type: 'audio/mp3'\n                                \n                            }\n                            \n                        ],\n                        tracks: [\n                            \n                            {\n                                kind: 'captions',\n                                label: 'English',\n                                srclang: 'en',\n                                src: 'assets/audio/' + self.album.tracks[num].src + '.vtt',\n                                default: true\n                            }\n                            \n                        ]\n                        \n                    };\n                    \n                } else {\n                    \n                    self.player.source = {\n                \n                        type: 'video',\n                        title: self.album.tracks[num].title,\n                        sources: [\n                            \n                            {\n                                \n                                src: 'assets/audio/' + self.album.tracks[num].src + '.mp3',\n                                type: 'audio/mp3'\n                                \n                            }\n                            \n                        ]\n                        \n                    };\n                    \n                }\n                \n            } );\n            \n            self.player.once( 'canplay', function() {\n                        \n                self.player.togglePlay();\n                \n            } );\n            \n        }\n        \n        // scroll the track title is applicable\n        self._stopMarquee( currentTitle );\n        self._marqueeEl( currentTitle );\n        \n    }\n    \n    _loadAuthorPic( track ) {\n        \n        const self = this;\n        let currentPic = self._selector( self.el.currentPic );\n        let localPicUrl = 'assets/images/' + track.img;\n        let centralPicUrl = self.manifest.ap_author_directory + self._sanitize( track.author ) + self.album.settings.trackImgFormat;\n        let authorPic = new Image();\n        \n        authorPic.src = self.manifest.ap_root_directory + 'images/pic.png';\n        \n        self._fileExists( localPicUrl, function( exist ) {\n            \n            if ( exist ) {\n                \n                authorPic.src = localPicUrl;\n                \n            } else {\n                \n                self._fileExists( centralPicUrl, function( exist ) {\n    \n                    if ( exist ) {\n                        \n                        authorPic.src = centralPicUrl;\n                        \n                    }\n                    \n                } );\n                \n            }\n            \n        } );\n        \n        currentPic.innerHTML = '';\n        currentPic.appendChild( authorPic );\n        \n    }\n    \n    setData() {\n        \n        const self = this;\n        \n        // DOM head elements\n        let pageTitle = this._selector( 'title' );\n        \n        pageTitle.innerHTML = this.album.title;\n        \n        // splash screen\n        let title = this._selector( this.el.splashTitle );\n        let subtitle = this._selector( this.el.splashSubtitle );\n        let author = this._selector( this.el.splashAuthor );\n        let length = this._selector( this.el.splashLength );\n        \n        title.innerHTML = this.album.title;\n        subtitle.innerHTML = this.album.subtitle;\n        author.innerHTML = this.album.author;\n        length.innerHTML = this.album.length;\n        \n        // splash download menu list\n        let fileName = self.reference.names;\n        \n        if ( fileName.length === 0 ) {\n            \n            fileName = 'album';\n            \n        } else {\n            \n            fileName = self.reference.names[self.reference.names.length - 1];\n            \n        }\n        \n        Array.prototype.forEach.call( this.manifest.ap_download_files, function( el ) {\n            \n            let file = fileName + '.' + el.format;\n            \n            self._fileExists( file, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let link = document.createElement( 'a' );\n            \n                    link.href = file;\n                    link.setAttribute( 'download', file );\n                    link.setAttribute( 'role', 'menuitem' );\n                    link.innerHTML = el.label;\n                    \n                    let dwnldMenu = self._selector( self.el.dwnldBtnMenu );\n                    dwnldMenu.appendChild( link );\n                    \n                    let dwnldBtn = self._selector( self.el.dwnldBtn );\n                    dwnldBtn.setAttribute( 'aria-hidden', false );\n                    dwnldBtn.style.display = 'block';\n                    \n                    let dwnldFile = {\n                        name: el.label,\n                        url: file\n                    };\n                    \n                    self.album.downloads.push( dwnldFile );\n                    \n                }\n                \n            } );\n            \n        } );\n        \n        // splash background image\n        if ( !this._isEmpty( this.album.program.name ) ) {\n            \n            let bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/default' + this.album.settings.splashFormat;\n            \n            if ( !this._isEmpty( self.album.program.course ) ) {\n                \n                bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/' + this.album.program.course + this.album.settings.splashFormat;\n                \n            }\n            \n            this._fileExists( bgUrl, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let splashBg = self._selector( self.el.splash );\n                    let head = self._selector( 'head' );\n                    let bgImg = 'url(\"' + bgUrl + '\")';\n                    \n                    splashBg.style.backgroundImage = bgImg;\n            \n                    // change the bg in the ap-main:before as well\n                    let style = document.createElement( 'style' );\n                    \n                    style.setAttribute( 'type', 'text/css' );\n                    style.innerHTML = '#ap-main:before{background-image: ' + bgImg + ' !important;}';\n                    \n                    head.appendChild( style );\n                    \n                }\n                \n            } );\n            \n        }\n        \n        // load accent\n        if ( !this._isEmpty( self.album.settings.accent ) ) {\n            \n            let accentUrl = this.manifest.ap_root_directory + 'script/templates/accent_css.tpl';\n            this._requestFile( accentUrl, function( xhr ) {\n                \n                const accentStyle = xhr.response.replace( /\\{([accent)]+)\\}/ig, self.album.settings.accent );\n                \n                let head = self._selector( 'head' );\n                let style = document.createElement( 'style' );\n                \n                style.setAttribute( 'type', 'text/css' );\n                style.innerHTML = accentStyle;\n                \n                head.appendChild( style );\n                \n            } );\n            \n        }\n        \n        // set tracks\n        if ( this.album.tracks.length > 1 ) {\n            \n            let trackListDisplay = this._selector( this.el.trackList );\n            \n            Array.prototype.forEach.call( this.album.tracks, function( el, indx ) {\n                \n                let li = document.createElement( 'li' );\n                let a = document.createElement( 'a' );\n                \n                a.classList.add( 'ap-track' );\n                a.href = 'javascript:void(0);';\n                a.setAttribute( 'data-index', indx );\n                \n                let numSpan = document.createElement( 'span' );\n                \n                numSpan.classList.add( 'track-num' );\n                numSpan.innerHTML = indx + 1 + '.';\n                \n                let titleWrprSpan = document.createElement( 'span' );\n                \n                titleWrprSpan.classList.add( 'track-title-wrapper' );\n                \n                let titleSpan = document.createElement( 'span' );\n                \n                titleSpan.classList.add( 'track-title' );\n                titleSpan.setAttribute( 'title', el.title );\n                titleSpan.innerHTML = el.title;\n                \n                titleWrprSpan.appendChild( titleSpan );\n                \n                if ( !self.album.sameAuthor ) {\n                    \n                    let img = document.createElement( 'img' );\n                    let localPicUrl = 'assets/images/' + self.album.tracks[indx].img;\n                    let centralPicUrl = self.manifest.ap_author_directory + self._sanitize( self.album.tracks[indx].author ) + self.album.settings.trackImgFormat;\n                    \n                    img.classList.add( 'track-img' );\n                    img.src = self.manifest.ap_root_directory + 'images/pic.png';\n        \n                    self._fileExists( localPicUrl, function( exist ) {\n                        \n                        if ( exist ) {\n                            \n                            img.src = localPicUrl;\n                            \n                        } else {\n                            \n                            self._fileExists( centralPicUrl, function( exist ) {\n                \n                                if ( exist ) {\n                                    \n                                    img.src = centralPicUrl;\n                                    \n                                }\n                                \n                            } );\n                            \n                        }\n                        \n                    } );\n                    \n                    a.appendChild( img );\n                    \n                }\n                \n                a.appendChild( numSpan );\n                a.appendChild( titleWrprSpan );\n                \n                // download button\n                let button = document.createElement( 'a' );\n                \n                button.classList.add( 'track-download' );\n                button.setAttribute( 'download', el.src + '.mp3' );\n                button.href = 'assets/audio/' + el.src + '.mp3';\n                button.setAttribute( 'role', 'button' );\n                \n                let svg = document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' );\n                \n                svg.classList.add( 'icon' );\n                svg.setAttribute( 'aria-hidden', true );\n                svg.setAttribute( 'viewbox', '0 0 30 30' );\n                \n                let use = document.createElementNS( 'http://www.w3.org/2000/svg', 'use' );\n                \n                use.setAttributeNS( 'http://www.w3.org/1999/xlink', 'href', self.manifest.ap_root_directory + 'images/icons.svg#icon-download' );\n                \n                svg.appendChild( use );\n                button.appendChild( svg );\n                a.appendChild( button );\n                \n                li.appendChild( a );\n                \n                trackListDisplay.appendChild( li );\n                \n            } );\n            \n            self._trackListItemListener();\n            \n        } else {\n            \n            this._selector( this.el.main ).classList.add( 'single' );\n            \n        }\n    \n        // copyright\n        let copyright = this._selector( this.el.copyright );\n        let date = new Date();\n        let year = date.getFullYear();\n        \n        copyright.innerHTML += '&copy; ' + year + '. ' + this.manifest.ap_copyright;\n        \n        // program theme\n        this._setProgram();\n        \n    }\n    \n    _setupAudioPlayer() {\n        \n        const self = this;\n        \n        let plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/single_plyr_controls.tpl';\n        \n        if ( self.album.tracks.length > 1 ) {\n            \n            plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/full_plyr_controls.tpl';\n            \n        }\n        \n        self._requestFile( plyrControlsUrl, function( xhr ) {\n            \n            const controls = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n                \n            self.el.player = new Plyr( self.el.playerId, {\n        \n                controls: controls,\n                hideControls: false,\n                autoplay: false,\n                volume: 0.8,\n                blankVideo: self.manifest.ap_root_directory + 'images/blank.m4v',\n                clickToPlay: false,\n                fullscreen: {\n                    enabled: false,\n                    fallback: false,\n                    iosNative: false\n                }\n                            \n            } );\n            \n            self.el.player.on( 'ready', event => {\n                \n                self.player = event.detail.plyr;\n                \n                self._CCSpectrumDisplays();\n                \n                const playpauseBtn = self._selector( '#ap-playpause' );\n                const muteUnmuteBtn = self._selector( '#ap-muteunmute' );\n                const loopBtn = self._selector( '#ap-loop' );\n                const playbackRateBtn = self._selector( '#ap-playbackRate' );\n                const nextBtn = self._selector( self.el.next );\n                const prevBtn = self._selector( self.el.previous );\n                const totalTracks = self.album.tracks.length - 1;\n                \n                // check playback rate and update playback rate select element\n                for ( var i = 0; i < playbackRateBtn.options.length; i++ ) {\n    \n                    if ( Number( playbackRateBtn.options[i].value ) === self.player.speed ) {\n                        \n                        playbackRateBtn.selectedIndex = i;\n                        break;\n                        \n                    }\n                    \n                }\n                \n                if ( self.album.currentTrack <= 0 ) {\n                    \n                    prevBtn.setAttribute( 'disabled', true );\n                    prevBtn.classList.add( 'disabled' );\n                }\n                \n                if ( self.album.currentTrack >= totalTracks ) {\n                            \n                    nextBtn.setAttribute( 'disabled', true );\n                    nextBtn.classList.add( 'disabled' );\n                    \n                }\n                \n                nextBtn.addEventListener( 'click', function() {\n                    \n                    \n                    if ( self.album.currentTrack < totalTracks ) {\n                        \n                        self.album.currentTrack++;\n                        self.setTrack( self.album.currentTrack );\n                        \n                    }\n                    \n                } );\n                \n                prevBtn.addEventListener( 'click', function() {\n                    \n                    if ( self.album.currentTrack > 0 ) {\n                        \n                        self.album.currentTrack--;\n                        self.setTrack( self.album.currentTrack );\n                        \n                    }\n                    \n                } );\n                \n                self.player.on( 'playing', function() {\n                    \n                    playpauseBtn.classList.add( 'plyr__control--pressed' );\n                    \n                } );\n                \n                self.player.on( 'pause', function() {\n                    \n                    playpauseBtn.classList.remove( 'plyr__control--pressed' );\n                    \n                } );\n                \n                // on playback end\n                self.player.on( 'ended', function() {\n                    \n                    if ( self.player.loop === false ) {\n                        \n                        if ( playpauseBtn.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                            playpauseBtn.classList.add( 'plyr__control--pressed' );\n                            \n                        }\n                        \n                        self.player.restart();\n                        \n                    }\n                    \n                } );\n                \n                // toogle loop button state\n                loopBtn.addEventListener( 'click', function() {\n    \n                    if ( self.player.loop === false ) {\n                        \n                        self.player.loop = true;\n                        loopBtn.classList.add( 'active' );\n                        \n                    } else {\n                        \n                        self.player.loop = false;\n                        loopBtn.classList.remove( 'active' );\n                        \n                    }\n                    \n                } );\n                \n                // change playback rate\n                playbackRateBtn.addEventListener( 'change', function( evt ) {\n                    \n                    self.player.speed = Number( evt.target.options[evt.target.selectedIndex].value );\n                    \n                } );\n                \n                // toglle mute/unmute state\n                muteUnmuteBtn.addEventListener( 'click', function( evt ) {\n                    \n                    if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                        \n                        evt.target.classList.remove( 'plyr__control--pressed' );\n                        \n                    } else {\n                        \n                        evt.target.classList.add( 'plyr__control--pressed' );\n                        \n                    }\n                    \n                } );\n                    \n            } ); // end player ready event\n            \n        } );\n        \n    } // end _setupAudioPlayer\n    \n    _setProgram() {\n        \n        const self = this;\n        \n        if ( self.manifest.ap_custom_themes ) {\n            \n            self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                \n                return obj.name === self.album.program.name;\n                \n            } );\n            \n            if ( self.album.program === undefined ) {\n                \n                self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                    \n                    return obj.name === self.manifest.ap_logo_default;\n                    \n                } );\n                \n            }\n            \n        }\n        \n        let decorationBar = self._selector( '.program-theme' );\n    \n        self.album.program.colors.forEach( function( hex ) {\n                        \n            let span = document.createElement( 'span' );\n            span.style.backgroundColor = hex;\n            decorationBar.appendChild( span );\n            \n        } );\n        \n    }\n    \n    _checkSupport() {\n        \n        if ( this.hasCoreFeaturesSupport() ) {\n        \n            this.showError( '🙈', '', 'Your web browser does not support core audio player features.<br><a href=\"http://outdatedbrowser.com/en\" target=\"_blank\">Please update your web browser.</a>' );\n            return;\n            \n        }\n        \n        if ( this.hasAppearanceIusses() ) {\n        \n            this.showWarning( 'For better viewing, try a different web browser.' );\n            \n        }\n        \n    }\n    \n    hasCoreFeaturesSupport() {\n    \n        if ( !Modernizr.audio && Modernizr.json && Modernizr.svg\n             && Modernizr.csscalc && Modernizr.flexbox ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    hasAppearanceIusses() {\n    \n        if ( !Modernizr.canvas ) {\n            return true;\n        }\n        \n        if ( !Modernizr.cssanimations ) {\n            return true;\n        }\n        \n        if ( !Modernizr.bgsizecover ) {\n            return true\n        }\n        \n        if ( !Modernizr.objectfit ) {\n            return true\n        }\n        \n        return false;\n        \n    }\n    \n    showError( iconStr, titleStr, bodyStr ) {\n    \n        let splash = this._selector( this.el.splash );\n        let main = this._selector( this.el.main );\n        let error = this._selector( this.el.error );\n        let icon = this._selector( this.el.errorIcon );\n        let title = this._selector( this.el.errorTitle );\n        let body = this._selector( this.el.errorBody );\n        \n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = false;\n        \n        icon.innerHTML = iconStr;\n        title.innerHTML = titleStr;\n        body.innerHTML = bodyStr;\n        \n        splash.style.display = 'none';\n        main.style.display = 'none';\n        \n        error.style.display = 'flex';\n        error.setAttributeNode( ariaHidden );\n        \n        this._fadeIn( error );\n        \n    }\n    \n    showWarning( str ) {\n    \n        const self = this;\n        let warning = self._selector( self.el.warning );\n        let hideTime = 6000;\n        \n        warning.innerHTML = str;\n        warning.style.display = 'block';\n        \n        self._fadeIn( warning );\n        \n        window.setTimeout( function() {\n            \n            self._fadeOut( warning, function() {\n                \n                warning.innerHTML = '';\n                warning.style.display = 'none';\n                \n            } );\n            \n        }, hideTime );\n        \n    }\n    \n    hideSplash() {\n    \n        let splash = this._selector( this.el.splash );\n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = true;\n        \n        splash.classList.add( 'hide-splash' );\n        splash.setAttributeNode( ariaHidden );\n        \n    }\n    \n    showProfile() {\n        \n        const self = this;\n        let authorProfileDisplay = this._selector( this.el.profileDisplay );\n        let closeBtn = this._selector( this.el.closeProfileBtn );\n        let index = Number( self._selector( self.el.currentTrackNum ).innerHTML ) - 1;\n        \n        if ( self.album.tracks.length <= 1 ) {\n            index = 0;\n        }\n        \n        let currentAuthor = self.album.tracks[index].author;\n        let currentProfile = self.album.authorProfile;\n        \n        if ( !self._isEmpty( self.album.tracks[index].authorProfile) ) {\n            \n            currentProfile = self.album.tracks[index].authorProfile;\n            \n        }\n        \n        if ( self._isEmpty( currentProfile ) ) {\n            \n            let profileUrl = self.manifest.ap_author_directory + self._sanitize( currentAuthor ) + '.json?callback=author';\n        \n            let $jsonp = ( function() {\n                \n                let that = {};\n                let spinner = self._selector( self.el.profileDisplaySpinner );\n                \n                that.send = function( src, options ) {\n            \n                    spinner.classList.add( 'spin' );\n                    \n                    let callback_name = options.callbackName || 'callback',\n                        on_success = options.onSuccess || function() {},\n                        on_timeout = options.onTimeout || function() {},\n                        timeout = options.timeout || 10; // sec\n                \n                    let timeout_trigger = window.setTimeout( function() {\n                        window[callback_name] = function() {};\n                        spinner.classList.remove( 'spin' );\n                        on_timeout();\n                    }, timeout * 1000);\n                    \n                    window[callback_name] = function( data ) {\n                        window.clearTimeout( timeout_trigger );\n                        spinner.classList.remove( 'spin' );\n                        on_success( data );\n                    }\n                    \n                    let script = document.createElement( 'script' );\n                    script.type = 'text/javascript';\n                    script.async = true;\n                    script.src = src;\n                    \n                    document.getElementsByTagName( 'head' )[0].appendChild( script );\n                \n                }\n                \n                return that;\n                \n            } )();\n            \n            $jsonp.send( profileUrl, {\n                \n                callbackName: 'author',\n                onSuccess: function( json ) {\n                    \n                    self._setProfile( json.name, json.profile );\n                },\n                onTimeout: function() {\n                    \n                    self._setProfile( currentAuthor, currentProfile );\n                    \n                },\n                timeout: 5\n                \n            } );\n            \n        } else {\n            \n            self._setProfile( currentAuthor, currentProfile );\n            \n        }\n        \n        authorProfileDisplay.style.display = 'block';\n        this._fadeIn( authorProfileDisplay );\n        \n        closeBtn.addEventListener( 'click', function() {\n            self.closeProfile();\n        }, {once: true} );\n\n    }\n    \n    _setProfile( author, bio ) {\n        \n        let authorProfileDisplayContent = this._selector( this.el.profileDisplayContent );\n        \n        let name = document.createElement( 'h4' );\n                    \n        name.innerHTML = author;\n                        \n        let profile = document.createElement( 'div' );\n        \n        profile.innerHTML = bio;\n        \n        authorProfileDisplayContent.appendChild( name );\n        authorProfileDisplayContent.appendChild( profile );\n        \n    }\n    \n    closeProfile() {\n        \n        let authorProfileDisplay = this._selector( this.el.profileDisplay );\n        let authorProfileDisplayContent = this._selector( this.el.profileDisplayContent );\n        \n        this._fadeOut( authorProfileDisplay, function() {\n            \n            authorProfileDisplay.style.display = '';\n            \n            authorProfileDisplayContent.innerHTML = '';\n            \n        } );\n\n    }\n    \n    _setShowProfileListener() {\n        \n        const self = this;\n        let showProfileBtn = this._selector( this.el.showProfileBtn );\n        \n        showProfileBtn.addEventListener( 'click', function() {\n            \n            self.showProfile();\n            \n        } );\n        \n    }\n    \n    _expandTracksToggle() {\n        \n        const self = this;\n        let expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        expandTracksBtn.addEventListener( 'click', function() {\n            \n            let trackList = self._selector( self.el.trackList );\n            let minDisplay = self._selector( self.el.miniDisplay );\n            \n            if ( trackList.style.display == 'none' || trackList.style.display == '' ) {\n                \n                trackList.style.display = 'block';\n                minDisplay.style.display = 'none';\n                \n                self._hideCCSpectrum();\n                \n                self._slideDown( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.add( 'rotate' );\n                    trackList.style.setProperty( 'overflow-y', 'auto' );\n                    \n                } );\n                \n            } else {\n                \n                trackList.style.display = 'none';\n                trackList.style.setProperty( 'overflow-y', 'hidden' );\n                minDisplay.style.display = 'flex';\n                \n                self._slideUp( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.remove( 'rotate' );\n                    self._CCSpectrumDisplays();\n                    \n                } );\n                \n            }\n            \n        } );\n        \n    }\n    \n    toggleCC() {\n        \n        const self = this;\n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        ccToggle.classList.add( 'disabled' );\n        spectrumToggle.classList.remove( 'disabled' );\n        \n        captionDisplay.classList.add( 'active' );\n        spectrumDisplay.classList.remove( 'active' );\n        \n        self.player.on( 'canplay', function() {\n            \n            if ( self.player.currentTrack !== -1 ) {\n                self.player.toggleCaptions( true );\n            }\n            \n        } );\n        \n        if ( self.player.playing && self.player.currentTrack !== -1 ) {\n            self.player.toggleCaptions( true );\n        }\n\n    }\n    \n    toggleSpectrum() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        spectrumToggle.classList.add( 'disabled' );\n        ccToggle.classList.remove( 'disabled' );\n        \n        spectrumDisplay.classList.add( 'active' );\n        captionDisplay.classList.remove( 'active' );\n        \n        if ( this.player !== null && this.player.currentTrack > -1 ) {\n            this.player.toggleCaptions( false );\n        }\n        \n    }\n    \n    _CCSpectrumDisplays() {\n        \n        const self = this;\n        let toggles = this._selector( this.el.bodyControls );\n        let displays = this._selector( this.el.ccSpecDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        if ( toggles.style.display === 'none' ) {\n            \n            toggles.style.display = '';\n            displays.style.display = '';\n            \n        } else {\n\n            self.toggleCC();\n            \n        }\n        \n        ccToggle.addEventListener( 'click', function() {\n            self.toggleCC();\n        } );\n        \n        spectrumToggle.addEventListener( 'click', function() {\n            self.toggleSpectrum();\n        } );\n        \n    }\n    \n    _hideCCSpectrum() {\n        \n        let displays = this._selector( this.el.ccSpecDisplay );\n        let toggles = this._selector( this.el.bodyControls );\n        \n        toggles.style.display = 'none';\n        displays.style.display = 'none';\n        \n    }\n    \n    /*** HELPER METHODS ***/\n    \n    _selector( str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return document.querySelectorAll( str );\n            \n        } else {\n            \n            return document.querySelector( str );\n            \n        }\n        \n    }\n    \n    _xmlSelector( xml, str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return xml.querySelectorAll( str );\n            \n        } else {\n            \n            return xml.querySelector( str );\n            \n        }\n        \n    }\n    \n    _sanitize( str ) {\n        \n        return str.replace(/[^\\w]/gi, '').toLowerCase();\n    \n    }\n    \n    _isEmpty( str ) {\n        \n        if ( typeof str === 'string' && str.trim() === '' ) {\n            return true;\n        }\n        \n        if ( str === undefined ) {\n            return true;\n        }\n        \n        if ( str ===  null ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    _requestFile( url, callback ) {\n        \n        const self = this;\n        let body = self._selector( 'body' );\n        let request = new XMLHttpRequest();\n        \n        request.open( 'GET', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                callback( this );\n                \n            } else {\n                \n                body.innerHTML += '<div class=\"error\">Error ' + this.status + ' while loading <code>' + url + '</code></div>';\n                \n            }\n            \n            request.abort();\n            \n        };\n        \n        request.onerror = function() {\n            \n            body.innerHTML += '<div class=\"error\">Connection Error. Check your network.</div>';\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _fileExists( url, callback ) {\n        \n        let request = new XMLHttpRequest();\n        let found = false;\n        \n        request.open( 'HEAD', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                found = true;\n                \n            } else {\n                \n                found = false;\n                \n            }\n            \n            callback( found );\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _cleanArray( arr ) {\n    \n        arr.forEach( function( value, index ) {\n            \n            if ( value === '' ) {\n                arr.splice( index, 1 );\n            }\n            \n        } );\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\.\\w*/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\:/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        return arr;\n        \n    }\n    \n    _parseUri( str ) {\n        \n        let parts =  str.split( '?' );\n        let target = parts[0];\n        \n        if ( target.lastIndexOf( '/' ) !== target.length - 1 ) {\n    \t\ttarget += '/';\n    \t}\n    \t\n    \treturn this._cleanArray( target.split( '/' ) );\n        \n    }\n    \n    /*** ANIMATION METHODS ***/\n    \n    _marqueeEl( el ) {\n        \n        const self = this;\n        \n        if ( el.offsetWidth < el.scrollWidth ) {\n            \n            let runTime = 15500;\n            let startTime = 5000;\n            \n            self.marquee.start = window.setInterval( function() {\n                \n                el.parentNode.classList.remove( 'stop-marquee' );\n                el.parentNode.classList.add( 'marquee' );\n                \n                el.style.width = el.scrollWidth + 'px';\n                \n                window.clearInterval( self.marquee.start );\n                \n                self.marquee.stop = window.setTimeout( function() {\n                     \n                    el.style.width = 'initial';\n                    el.parentNode.classList.remove( 'marquee' );\n                    window.clearTimeout( self.marquee.stop );\n                    \n                    self._fadeIn( el );\n                    self._marqueeEl( el );\n                    \n                }, runTime );\n                \n            }, startTime );\n            \n        }\n        \n    }\n    \n    _stopMarquee( el ) {\n        \n        el.style.width = '';\n        el.parentNode.classList.remove( 'marquee' );\n        el.parentNode.classList.add( 'stop-marquee' );\n        \n        if ( this.marquee.stop !== null ) {\n            window.clearTimeout( this.marquee.stop );\n        }\n        \n        if ( this.marquee.start !== null ) {\n            window.clearInterval( this.marquee.start );\n        }\n        \n    }\n    \n    _fadeIn( el, callback ) {\n        \n        el.classList.remove( 'fadeOut' );\n        el.classList.add( 'fadeIn' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeOut( el, callback ) {\n\n        el.classList.remove( 'fadeIn' );\n        el.classList.add( 'fadeOut' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.classList.remove( 'fadeIn' );\n        evt.target.classList.remove( 'fadeOut' );\n        evt.target.removeEventListener( evt.target.params._event, this._fadeCallback );\n        \n    }\n    \n    _slideDown( el, callback ) {\n        \n        el.classList.add( 'slideDown' );\n        el.classList.remove( 'slideUp' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideUp( el, callback ) {\n        \n        const self = this;\n        el.classList.add( 'slideUp' );\n        el.classList.remove( 'slideDown' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, self._slideCallback );\n        \n    }\n    \n    _slideCallback( evt ) {\n        \n        const self = this;\n        \n        if ( evt.target.params !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n            evt.target.removeEventListener( evt.target.params._event, self._slideCallback );\n            \n        }\n        \n    } \n    \n    _whichAnimationEvent() {\n        \n        let ani;\n        let el = document.createElement( 'fakeelement' );\n        let animations = {\n            'animation': 'animationend',\n            'OAnimation': 'oAnimationEnd',\n            'MozAnimation': 'animationend',\n            'WebkitAnimation': 'webkitAnimationEnd'\n        }\n        \n        for ( ani in animations ) {\n            \n            if ( el.style[ani] !== undefined ) {\n                \n                return animations[ani];\n                \n            }\n            \n        }\n        \n    }\n    \n} // end APlayer class\n\n/**** ON DOM READY ****/\n( function ready( fn ) {\n    \n    if ( document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading' ) {\n        \n        fn();\n        \n    } else {\n        \n        document.addEventListener( 'DOMContentLoaded', fn );\n        \n    }\n    \n} )( function() {\n    \n    new APlayer();\n    \n} );\n"]}