{"version":3,"sources":["../../../source/script/audio-dev.js"],"names":["APlayer","_classCallCheck","this","el","splash","main","showProfileBtn","closeProfileBtn","profileDisplay","trackTitle","miniDisplay","trackList","expandTracksBtn","ccSpecDisplay","spectrumDisplay","captionDisplay","bodyControls","ccToggle","spectrumToggle","warning","error","errorIcon","errorTitle","errorBody","playerId","copyright","player","manifest","album","self","hasCoreFeaturesSupport","showError","hasAppearanceIusses","showWarning","getManifest","Modernizr","audio","json","svg","csscalc","flexbox","canvas","cssanimations","bgsizecover","objectfit","iconStr","titleStr","bodyStr","_selector","icon","title","body","ariaHidden","document","createAttribute","value","innerHTML","style","display","setAttributeNode","_fadeIn","str","hideTime","window","setTimeout","_fadeOut","manifestUrl","getAttribute","request","XMLHttpRequest","open","onload","status","JSON","parse","response","getAlbum","onerror","send","setUIs","date","Date","year","getFullYear","ap_copyright","ap_root_directory","length","_marqueeEl","_CCSpectrumDisplays","_expandTracksToggle","_setShowProfileListener","_setupAudioPlayer","classList","add","authorProfile","closeBtn","addEventListener","closeProfile","once","showProfile","minDisplay","_hideCCSpectrum","_slideDown","parentNode","_slideUp","remove","controls","Plyr","autoplay","volume","clickToPlay","fullscreen","enabled","fallback","iosNative","on","event","instance","detail","plyr","playpauseBtn","muteUnmuteBtn","loopBtn","playbackRateBtn","playing","i","options","Number","speed","selectedIndex","loop","contains","restart","evt","target","toggles","displays","toggleCC","toggleSpectrum","querySelector","offsetWidth","scrollWidth","runTime","startTime","start","setInterval","width","clearInterval","stop","clearTimeout","callback","animationEvt","_whichAnimationEvent","params","_event","_callback","_fadeCallback","undefined","removeEventListener","_slideCallback","ani","createElement","animations","animation","OAnimation","MozAnimation","WebkitAnimation","AP","ready","fn","attachEvent","readyState","go"],"mappings":"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","file":"audio.js","sourcesContent":["/*\n * Audio Player\n *\n * @author: Ethan Lin\n * @url: https://github.com/oel-mediateam/audioplayer\n * @version: 2.0.0\n *\n * @license: The MIT License (MIT)\n * Copyright (c) 2014 - 2018 Media Serivces\n *\n */\n\n'use strict';\n\nclass APlayer {\n    \n    constructor() {\n        \n        this.el = {\n            splash: '#ap-splash',\n            main: '#ap-main',\n            showProfileBtn: '#show-profile',\n            closeProfileBtn: '#author-close-btn',\n            profileDisplay: '#author-overlay',\n            trackTitle: '.track-info .title-wrapper .title',\n            miniDisplay: '.track-list .minimized-display',\n            trackList: '.track-list .tracks',\n            expandTracksBtn: '.track-list .expand-btn',\n            ccSpecDisplay: '.body .cc-spec-display',\n            spectrumDisplay: '.body .cc-spec-display .spectrum',\n            captionDisplay: '.body .cc-spec-display .caption',\n            bodyControls: '.body .controls',\n            ccToggle: '#cc-toggle',\n            spectrumToggle: '#spectrum-toggle',\n            warning: '.body .warning-msg',\n            error: '#ap-error',\n            errorIcon: '#ap-error .icon',\n            errorTitle: '#ap-error .title',\n            errorBody: '#ap-error .body',\n            playerId: '#player',\n            copyright: '.copyright p',\n            player: null\n        };\n        \n        this.manifest ={};\n        this.album = {};\n        \n    }\n         \n    go() {\n        \n        let self = this;\n        \n        if ( self.hasCoreFeaturesSupport() ) {\n        \n            self.showError( '🙈', '', 'Your web browser does not support core audio player features.<br><a href=\"http://outdatedbrowser.com/en\" target=\"_blank\">Please update your web browser.</a>' );\n            return;\n            \n        }\n        \n        if ( self.hasAppearanceIusses() ) {\n        \n            self.showWarning( 'For better viewing, try a different web browser.' );\n            \n        }\n        \n        self.getManifest();\n        \n    }\n    \n    hasCoreFeaturesSupport() {\n    \n        if ( !Modernizr.audio && Modernizr.json && Modernizr.svg\n             && Modernizr.csscalc && Modernizr.flexbox ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    hasAppearanceIusses() {\n    \n        if ( !Modernizr.canvas ) {\n            return true;\n        }\n        \n        if ( !Modernizr.cssanimations ) {\n            return true;\n        }\n        \n        if ( !Modernizr.bgsizecover ) {\n            return true\n        }\n        \n        if ( !Modernizr.objectfit ) {\n            return true\n        }\n        \n        return false;\n        \n    }\n    \n    showError( iconStr, titleStr, bodyStr ) {\n    \n        let splash = this._selector( this.el.splash );\n        let main = this._selector( this.el.main );\n        let error = this._selector( this.el.error );\n        let icon = this._selector( this.el.errorIcon );\n        let title = this._selector( this.el.errorTitle );\n        let body = this._selector( this.el.errorBody );\n        \n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = false;\n        \n        icon.innerHTML = iconStr;\n        title.innerHTML = titleStr;\n        body.innerHTML = bodyStr;\n        \n        splash.style.display = 'none';\n        main.style.display = 'none';\n        \n        error.style.display = 'flex';\n        error.setAttributeNode( ariaHidden );\n        \n        this._fadeIn( error );\n        \n    }\n    \n    showWarning( str ) {\n    \n        let self = this;\n        let warning = self._selector( self.el.warning );\n        let hideTime = 6000;\n        \n        warning.innerHTML = str;\n        warning.style.display = 'block';\n        \n        self._fadeIn( warning );\n        \n        window.setTimeout( function() {\n            \n            self._fadeOut( warning, function() {\n                \n                warning.innerHTML = '';\n                warning.style.display = 'none';\n                \n            } );\n            \n        }, hideTime );\n        \n    }\n    \n    getManifest() {\n        \n        let self = this;\n        let manifestUrl = self._selector( '#ap-manifest' ).getAttribute( 'href' );\n        let request = new XMLHttpRequest();\n        \n        request.open( 'GET', manifestUrl, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                self.manifest = JSON.parse( this.response );\n                self.getAlbum();\n                \n            } else {\n                \n                self.showError( '🤔', this.status, 'Something went wrong while loading manifest.' );\n                \n            }\n            \n        };\n        \n        request.onerror = function() {\n            \n            self.showError( '', 'Connection Error', 'Check your network.' );\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    getAlbum() {\n        \n        this.setUIs();\n        \n    }\n    \n    setUIs() {\n        \n        let self = this;\n        let trackTitle = self._selector( self.el.trackTitle );\n        let copyright = self._selector( self.el.copyright );\n        let date = new Date();\n        let year = date.getFullYear();\n        \n        copyright.innerHTML += '&copy; ' + year + '. ' + self.manifest.ap_copyright;\n        \n        if ( self.manifest.ap_root_directory.length === 0 ) {\n            \n            self.manifest.ap_root_directory = 'source/';\n            \n        }\n        \n        this._marqueeEl( trackTitle );\n        this._CCSpectrumDisplays();\n        this._expandTracksToggle();\n        this._setShowProfileListener();\n        this._setupAudioPlayer();\n        \n    }\n    \n    hideSplash() {\n    \n        let splash = this._selector( this.el.splash );\n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = true;\n        \n        splash.classList.add( 'hide-splash' );\n        splash.setAttributeNode( ariaHidden );\n        \n    }\n    \n    showProfile() {\n        \n        let self = this;\n        let authorProfile = this._selector( this.el.profileDisplay );\n        let closeBtn = this._selector( this.el.closeProfileBtn );\n        \n        authorProfile.style.display = 'block';\n        this._fadeIn( authorProfile );\n        \n        closeBtn.addEventListener( 'click', function() {\n            self.closeProfile();\n        }, {once: true} );\n\n    }\n    \n    closeProfile() {\n        \n        let authorProfile = this._selector( this.el.profileDisplay );\n        \n        this._fadeOut( authorProfile, function() {\n            \n            authorProfile.style.display = '';\n            \n        } );\n\n    }\n    \n    _setShowProfileListener() {\n        \n        let self = this;\n        let showProfileBtn = this._selector( this.el.showProfileBtn );\n        \n        showProfileBtn.addEventListener( 'click', function() {\n            \n            self.showProfile();\n            \n        } );\n        \n    }\n    \n    _expandTracksToggle() {\n        \n        let self = this;\n        let expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        expandTracksBtn.addEventListener( 'click', function() {\n            \n            let trackList = self._selector( self.el.trackList );\n            let minDisplay = self._selector( self.el.miniDisplay );\n            \n            if ( trackList.style.display == 'none' || trackList.style.display == '' ) {\n                \n                trackList.style.display = 'block';\n                minDisplay.style.display = 'none';\n                \n                self._hideCCSpectrum();\n                \n                self._slideDown( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.add( 'rotate' );\n                    \n                } );\n                \n            } else {\n                \n                trackList.style.display = 'none';\n                minDisplay.style.display = 'flex';\n                \n                self._slideUp( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.remove( 'rotate' );\n                    self._CCSpectrumDisplays();\n                    \n                } );\n                \n            }\n            \n        } );\n        \n    }\n    \n    _setupAudioPlayer() {\n        \n        var self = this;\n        \n        const controls = `\n        <div class=\"plyr__controls\">\n            \n            <div class=\"top-controls\">\n            \n                <div class=\"plyr__time plyr__time--current\" aria-label=\"Current time\">00:00</div>\n                \n                <div class=\"plyr__progress\">\n                    <input id=\"plyr-seek-{id}\" data-plyr=\"seek\" type=\"range\" min=\"0\" max=\"100\" step=\"0.01\" value=\"0\" aria-label=\"Seek\">\n                    <progress class=\"plyr__progress__buffer\" min=\"0\" max=\"100\" value=\"0\" role=\"presentation\" aria-hidden=\"true\">% buffered</progress>\n                    <span role=\"tooltip\" class=\"plyr__tooltip\">00:00</span>\n                </div>\n                \n                <div class=\"plyr__time plyr__time--duration\" aria-label=\"Duration\">00:00</div>\n            \n            </div>\n            \n            <div class=\"middle-controls\">\n                \n                <button type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-previous\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Previous</span>\n                </button>\n                \n                <button type=\"button\" class=\"plyr__control\" data-plyr=\"rewind\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-backward\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Rewind {seektime} secs</span>\n                </button>\n                \n                <button type=\"button\" id=\"ap-playpause\" class=\"plyr__control\" aria-label=\"Play, {title}\" data-plyr=\"play\">\n                    <svg class=\"icon--pressed\" role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-pause\"></use></svg>\n                    <svg class=\"icon--not-pressed\" role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-play\"></use></svg>\n                    <span class=\"label--pressed plyr__tooltip\" role=\"tooltip\">Pause</span>\n                    <span class=\"label--not-pressed plyr__tooltip\" role=\"tooltip\">Play</span>\n                </button>\n                \n                <button type=\"button\" class=\"plyr__control\" data-plyr=\"fast-forward\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-forward\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Forward {seektime} secs</span>\n                </button>\n                \n                <button type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-next\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Next</span>\n                </button>\n            \n            </div>\n            \n            <div class=\"bottom-controls\">\n                \n                <button id=\"ap-loop\" type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-loop\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Loop</span>\n                </button>\n                \n                 <select id=\"ap-playbackRate\" name=\"playback\">\n                  <option value=\"1\">1x</option>\n                  <option value=\"1.5\">1.5x</option>\n                  <option value=\"2\">2x</option>\n                  <option value=\"2.5\">2.5x</option>\n                </select> \n                \n                <div class=\"ap-volcontrols\">\n                \n                    <button type=\"button\" id=\"ap-muteunmute\" class=\"plyr__control\" aria-label=\"Mute\" data-plyr=\"mute\">\n                        <svg class=\"icon--pressed\" role=\"presentation\"><use xlink:href=\"#plyr-muted\"></use></svg>\n                        <svg class=\"icon--not-pressed\" role=\"presentation\"><use xlink:href=\"#plyr-volume\"></use></svg>\n                        <span class=\"label--pressed plyr__tooltip\" role=\"tooltip\">Unmute</span>\n                        <span class=\"label--not-pressed plyr__tooltip\" role=\"tooltip\">Mute</span>\n                    </button>\n                    \n                    <div class=\"plyr__volume\">\n                        <input data-plyr=\"volume\" type=\"range\" min=\"0\" max=\"1\" step=\"0.05\" value=\"1\" autocomplete=\"off\" aria-label=\"Volume\">\n                    </div>\n                \n                </div>\n                \n                <button type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-download\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Download</span>\n                </button>\n            \n            </div>\n            \n        </div>\n        `;\n        \n        self.el.player = new Plyr( this.el.playerId, {\n            \n            controls: controls,\n            autoplay: false,\n            volume: 0.8,\n            clickToPlay: false,\n            fullscreen: {\n                enabled: false,\n                fallback: false,\n                iosNative: false\n            }\n                        \n        } );\n        \n        self.el.player.on( 'ready', event => {\n            \n            const instance = event.detail.plyr;\n            const playpauseBtn = self._selector( '#ap-playpause' );\n            const muteUnmuteBtn = self._selector( '#ap-muteunmute' );\n            const loopBtn = self._selector( '#ap-loop' );\n            const playbackRateBtn = self._selector( '#ap-playbackRate' );\n            \n            // play the audio\n            // instance.play();\n            \n            if ( instance.playing === true ) {\n                \n                playpauseBtn.classList.add( 'plyr__control--pressed' );\n                \n            }\n            \n            // check playback rate and update playback rate select element\n            for ( var i = 0; i < playbackRateBtn.options.length; i++ ) {\n\n                if ( Number( playbackRateBtn.options[i].value ) === instance.speed ) {\n                    \n                    playbackRateBtn.selectedIndex = i;\n                    break;\n                    \n                }\n                \n            }\n            \n            // on playback end\n            instance.on( 'ended', function() {\n                \n                if ( instance.loop === false ) {\n                    \n                    if ( playpauseBtn.classList.contains( 'plyr__control--pressed' ) ) {\n                \n                        playpauseBtn.classList.add( 'plyr__control--pressed' );\n                        \n                    }\n                    \n                    instance.restart();\n                    \n                }\n                \n            } );\n            \n            // toogle loop button state\n            loopBtn.addEventListener( 'click', function() {\n\n                if ( instance.loop === false ) {\n                    \n                    instance.loop = true;\n                    loopBtn.classList.add( 'active' );\n                    \n                } else {\n                    \n                    instance.loop = false;\n                    loopBtn.classList.remove( 'active' );\n                    \n                }\n                \n            } );\n            \n            // change playback rate\n            playbackRateBtn.addEventListener( 'change', function( evt ) {\n                \n                instance.speed = Number( evt.target.options[evt.target.selectedIndex].value );\n                \n            } );\n            \n            // toggle play/pause state\n            playpauseBtn.addEventListener( 'click', function( evt ) {\n            \n                if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                    evt.target.classList.remove( 'plyr__control--pressed' );\n                    \n                } else {\n                    \n                    evt.target.classList.add( 'plyr__control--pressed' );\n                    \n                }\n                \n            } );\n            \n            // toglle mute/unmute state\n            muteUnmuteBtn.addEventListener( 'click', function( evt ) {\n                \n                if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                    evt.target.classList.remove( 'plyr__control--pressed' );\n                    \n                } else {\n                    \n                    evt.target.classList.add( 'plyr__control--pressed' );\n                    \n                }\n                \n            } );\n                \n        } ); // end player ready event\n        \n    } // end _setupAudioPlayer\n    \n    toggleCC() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        ccToggle.classList.add( 'disabled' );\n        spectrumToggle.classList.remove( 'disabled' );\n        \n        captionDisplay.classList.add( 'active' );\n        spectrumDisplay.classList.remove( 'active' );\n        \n    }\n    \n    toggleSpectrum() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        spectrumToggle.classList.add( 'disabled' );\n        ccToggle.classList.remove( 'disabled' );\n        \n        spectrumDisplay.classList.add( 'active' );\n        captionDisplay.classList.remove( 'active' );\n        \n    }\n    \n    _CCSpectrumDisplays() {\n        \n        let self = this;\n        let toggles = this._selector( this.el.bodyControls );\n        let displays = this._selector( this.el.ccSpecDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        if ( toggles.style.display === 'none' ) {\n            \n            toggles.style.display = '';\n            displays.style.display = '';\n            \n        } else {\n\n            self.toggleCC();\n            \n        }\n        \n        ccToggle.addEventListener( 'click', function() {\n            self.toggleCC();\n        } );\n        \n        spectrumToggle.addEventListener( 'click', function() {\n            self.toggleSpectrum();\n        } );\n        \n    }\n    \n    _hideCCSpectrum() {\n        \n        let displays = this._selector( this.el.ccSpecDisplay );\n        let toggles = this._selector( this.el.bodyControls );\n        \n        toggles.style.display = 'none';\n        displays.style.display = 'none';\n        \n    }\n    \n    /*** HELPER METHODS ***/\n    \n    _selector( str ) {\n        return document.querySelector( str );\n    }\n    \n    /*** ANIMATION METHODS ***/\n    \n    _marqueeEl( el ) {\n        \n        let self = this;\n        \n        if ( el.offsetWidth < el.scrollWidth ) {\n            \n            let runTime = 15500;\n            let startTime = 5000;\n            \n            let start = window.setInterval( function() {\n                \n                el.parentNode.classList.add( 'marquee' );\n                \n                el.style.width = el.scrollWidth + 'px';\n                \n                window.clearInterval( start );\n                \n                let stop = window.setTimeout( function() {\n                    \n                    el.style.width = 'initial';\n                    \n                    self._fadeIn( el );\n                    \n                    el.parentNode.classList.remove( 'marquee' );\n                    window.clearTimeout( stop );\n                    self._marqueeEl( el );\n                    \n                }, runTime );\n                \n            }, startTime );\n            \n        }\n        \n    }\n    \n    _fadeIn( el, callback ) {\n        \n        el.classList.remove( 'fadeOut' );\n        el.classList.add( 'fadeIn' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeOut( el, callback ) {\n\n        el.classList.remove( 'fadeIn' );\n        el.classList.add( 'fadeOut' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.classList.remove( 'fadeIn' );\n        evt.target.classList.remove( 'fadeOut' );\n        evt.target.removeEventListener( evt.target.params._event, this._fadeCallback );\n        \n    }\n    \n    _slideDown( el, callback ) {\n        \n        el.classList.add( 'slideDown' );\n        el.classList.remove( 'slideUp' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideUp( el, callback ) {\n        \n        el.classList.add( 'slideUp' );\n        el.classList.remove( 'slideDown' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.removeEventListener( evt.target.params._event, this._slideCallback );\n        \n    } \n    \n    _whichAnimationEvent() {\n        \n        let ani;\n        let el = document.createElement( 'fakeelement' );\n        let animations = {\n            'animation': 'animationend',\n            'OAnimation': 'oAnimationEnd',\n            'MozAnimation': 'animationend',\n            'WebkitAnimation': 'webkitAnimationEnd'\n        }\n        \n        for ( ani in animations ) {\n            \n            if ( el.style[ani] !== undefined ) {\n                \n                return animations[ani];\n                \n            }\n            \n        }\n        \n    }\n    \n} // end APlayer class\n\nlet AP = null;\n\n/**** ON DOM READY ****/\n( function ready( fn ) {\n    \n    if ( document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading' ) {\n        \n        fn();\n        \n    } else {\n        \n        document.addEventListener( 'DOMContentLoaded', fn );\n        \n    }\n    \n} )( function() {\n    \n    AP = new APlayer();\n    AP.go();\n    \n} );\n"]}