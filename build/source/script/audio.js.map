{"version":3,"sources":["../../../source/script/audio-dev.js"],"names":["APlayer","_classCallCheck","this","el","splash","splashTitle","splashSubtitle","splashAuthor","splashLength","startBtn","resumeBtn","dwnldBtn","dwnldBtnMenu","mainDwnldBtn","main","mainBody","showProfileBtn","closeOverlayBtn","overlayDisplay","overlayDisplayContent","overlayDisplaySpinner","currentPic","trackTitle","trackAuthor","currentTrackNum","totalTracks","miniDisplay","upNextTrack","trackList","trackListItem","expandTracksBtn","bodyControls","next","previous","warning","error","errorIcon","errorTitle","errorBody","playerId","copyright","manifest","album","url","program","downloads","currentTrack","sameAuthor","sameAuthorLoaded","player","reference","names","_parseUri","window","location","href","params","URLSearchParams","search","marquee","start","stop","getManifest","self","manifestUrl","_selector","getAttribute","_requestFile","xhr","JSON","parse","response","ap_root_directory","length","setUIs","templateUrl","body","res","replace","innerHTML","getAlbum","_checkSupport","_setStartResumeListeners","_expandDownloadBtnMenu","_expandTracksToggle","_setShowProfileListener","tracks","Array","prototype","forEach","call","track","addEventListener","evt","target","className","nodeName","setTrack","currentTarget","preventDefault","btn","querySelector","menu","setAttribute","hideSplash","xml","responseXML","xmlSettings","_xmlSelector","xmlSetup","xmlTracks","settings","accent","splashFormat","trackImgFormat","analytics","version","title","textContent","subtitle","author","authorProfile","_isEmpty","undefined","name","course","obj","src","img","_sanitize","push","setData","_setupAudioPlayer","num","Number","currentTitle","_loadAuthorPic","parentNode","classList","remove","add","upNextTrackTitle","ready","captionUrl","_fileExists","exist","source","type","sources","kind","label","srclang","default","once","togglePlay","toggleCaptions","_stopMarquee","_marqueeEl","localPicUrl","centralPicUrl","ap_author_directory","authorPic","Image","appendChild","fileName","ap_download_files","file","format","link","document","createElement","style","display","dwnldFile","bgUrl","ap_splash_directory","splashBg","head","bgImg","backgroundImage","accentUrl","accentStyle","trackListDisplay","indx","li","a","numSpan","titleWrprSpan","titleSpan","button","svg","createElementNS","use","setAttributeNS","_trackListItemListener","date","Date","year","getFullYear","ap_copyright","_setProgram","plyrControlsUrl","controls","Plyr","hideControls","captions","active","autoplay","volume","blankVideo","clickToPlay","fullscreen","enabled","fallback","iosNative","on","event","detail","plyr","playpauseBtn","muteUnmuteBtn","loopBtn","playbackRateBtn","nextBtn","prevBtn","downloadBtn","i","options","value","speed","selectedIndex","closeBtn","h4","ul","_fadeIn","closeOverlay","loop","contains","restart","ap_custom_themes","find","ap_logo_default","decorationBar","colors","hex","span","backgroundColor","hasCoreFeaturesSupport","showError","hasAppearanceIusses","showWarning","Modernizr","audio","json","csscalc","flexbox","canvas","cssanimations","bgsizecover","objectfit","iconStr","titleStr","bodyStr","icon","ariaHidden","createAttribute","setAttributeNode","str","hideTime","setTimeout","_fadeOut","authorOverlayDisplay","index","currentAuthor","currentProfile","profileUrl","that","spinner","send","callback_name","callbackName","on_success","onSuccess","on_timeout","onTimeout","timeout","timeout_trigger","data","clearTimeout","script","async","getElementsByTagName","_setProfile","profile","bio","authoroverlayDisplayContent","showProfile","minDisplay","_slideDown","setProperty","_slideUp","captionDisplay","spectrumDisplay","ccToggle","spectrumToggle","playing","toggles","displays","ccSpecDisplay","toggleCC","toggleSpectrum","all","querySelectorAll","toLowerCase","trim","callback","request","XMLHttpRequest","open","onload","status","abort","onerror","found","arr","splice","test","pop","parts","split","lastIndexOf","_cleanArray","offsetWidth","scrollWidth","runTime","startTime","setInterval","width","clearInterval","animationEvt","_whichAnimationEvent","_event","_callback","_fadeCallback","removeEventListener","_slideCallback","ani","animations","animation","OAnimation","MozAnimation","WebkitAnimation","fn","attachEvent","readyState"],"mappings":"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","file":"audio.js","sourcesContent":["/*\n * Audio Player\n *\n * @author: Ethan Lin\n * @url: https://github.com/oel-mediateam/audioplayer\n * @version: 2.0.0\n *\n * @license: The MIT License (MIT)\n * Copyright (c) 2014 - 2018 Media Serivces\n *\n */\n\n'use strict';\n\nclass APlayer {\n    \n    constructor() {\n        \n        this.el = {\n            splash: '#ap-splash',\n            splashTitle: '#ap-splash .cover-info .title',\n            splashSubtitle: '#ap-splash .cover-info .subtitle',\n            splashAuthor: '#ap-splash .cover-info .author',\n            splashLength: '#ap-splash .cover-info .length',\n            startBtn: '#ap-start-btn',\n            resumeBtn: '#ap-resume-btn',\n            dwnldBtn: '#ap-dwnld-btn',\n            dwnldBtnMenu: '#ap-dwnld-btn .dropdown-content',\n            mainDwnldBtn: '#ap-download-cntrl',\n            main: '#ap-main',\n            mainBody: '#ap-main .body',\n            showProfileBtn: '#show-profile',\n            closeOverlayBtn: '#overlay-close-btn',\n            overlayDisplay: '#overlay-content',\n            overlayDisplayContent: '#overlay-content .content',\n            overlayDisplaySpinner: '#overlay-content .spinner',\n            currentPic: '.head .track-img button',\n            trackTitle: '.track-info .title-wrapper .title',\n            trackAuthor: '.track-info .author',\n            currentTrackNum: '.track-info .meta .current',\n            totalTracks: '.track-info .meta .total',\n            miniDisplay: '.track-list .minimized-display',\n            upNextTrack: '.track-list .minimized-display .ap_up_next_title',\n            trackList: '.track-list .tracks',\n            trackListItem: '.track-list .tracks li .ap-track',\n            expandTracksBtn: '.track-list .expand-btn',\n            //ccSpecDisplay: '.body .cc-spec-display',\n            //spectrumDisplay: '.body .cc-spec-display .spectrum',\n            //captionDisplay: '.body .cc-spec-display .caption',\n            bodyControls: '.body .controls',\n            //ccToggle: '#cc-toggle',\n            //spectrumToggle: '#spectrum-toggle',\n            next: '#ap-next',\n            previous: '#ap-previous',\n            warning: '.body .warning-msg',\n            error: '#ap-error',\n            errorIcon: '#ap-error .icon',\n            errorTitle: '#ap-error .title',\n            errorBody: '#ap-error .body',\n            playerId: '#player',\n            copyright: '.copyright p'\n        };\n        \n        this.manifest ={};\n        this.album = {\n            url: 'assets/album.xml',\n            program: {},\n            downloads: [],\n            currentTrack: 0,\n            sameAuthor: true,\n            sameAuthorLoaded: false\n        };\n        this.player = null;\n        this.reference = {\n            names: this._parseUri( window.location.href ),\n            params: new URLSearchParams( window.location.search )\n        };\n        this.marquee ={\n            start: null,\n            stop: null\n        };\n        \n        this.getManifest();\n        \n    }\n    \n    getManifest() {\n        \n        const self = this;\n        let manifestUrl = self._selector( '#ap-manifest' ).getAttribute( 'href' );\n        \n        self._requestFile( manifestUrl, function( xhr ) {\n            \n            self.manifest = JSON.parse( xhr.response );\n            \n            if ( self.manifest.ap_root_directory.length === 0 ) {\n        \n                self.manifest.ap_root_directory = 'source/';\n                \n            }\n            \n            self.setUIs();\n            \n        } );\n        \n    }\n    \n    setUIs() {\n        \n        const self = this;\n        let templateUrl = self.manifest.ap_root_directory + 'script/templates/apui.tpl';\n        \n        self._requestFile( templateUrl, function( xhr ) {\n            \n            let body = self._selector( 'body' );\n            const res = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n            \n            body.innerHTML += res;\n            \n            self.getAlbum();\n            \n            self._checkSupport();\n            self._setStartResumeListeners();\n            self._expandDownloadBtnMenu();\n            self._expandTracksToggle();\n            self._setShowProfileListener();\n            \n        } );\n        \n    }\n    \n    _trackListItemListener() {\n        \n        const self = this;\n        let tracks = self._selector( self.el.trackListItem, true );\n        \n        Array.prototype.forEach.call( tracks, function( track ) {\n            \n            track.addEventListener( 'click', function( evt ) {\n                \n                if ( evt.target.className !== 'track-download' &&\n                evt.target.nodeName !== 'svg' && evt.target.nodeName !== 'use' ) {\n                    \n                    self.setTrack( evt.currentTarget.getAttribute( 'data-index' ) );\n                    evt.preventDefault();\n                    \n                }\n                \n            } );\n            \n        } );\n        \n    }\n    \n    _expandDownloadBtnMenu() {\n        \n        const self = this;\n        \n        let dwnldBtn = self._selector( self.el.dwnldBtn );\n        let btn = dwnldBtn.querySelector( 'button' );\n        let menu = self._selector( self.el.dwnldBtnMenu );\n        \n        dwnldBtn.addEventListener( 'mouseenter', function() {\n            \n            btn.setAttribute( 'aria-expanded', true );\n            menu.setAttribute( 'aria-expanded', true );\n            \n        } );\n        \n        dwnldBtn.addEventListener( 'mouseleave', function() {\n            \n            btn.setAttribute( 'aria-expanded', false );\n            menu.setAttribute( 'aria-expanded', false );\n            \n        } );\n        \n    }\n    \n    _setStartResumeListeners() {\n        \n        const self = this;\n        \n        let startBtn = self._selector( self.el.startBtn );\n        let resumeBtn = self._selector( self.el.resumeBtn );\n        \n        startBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            self.setTrack( self.album.currentTrack );\n            \n        } );\n        \n        resumeBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            self.setTrack( self.album.currentTrack );\n            \n        } );\n        \n    }\n    \n    getAlbum() {\n        \n        const self = this;\n        \n        self._requestFile( self.album.url, function( xhr ) {\n            \n            const xml = xhr.responseXML;\n            const xmlSettings = self._xmlSelector( xml, 'album' );\n            const xmlSetup = self._xmlSelector( xml, 'setup' );\n            const xmlTracks = self._xmlSelector( xml, 'track', true );\n            \n            // settings\n            self.album.settings = {};\n            self.album.settings.accent = xmlSettings.getAttribute( 'accent' );\n            self.album.settings.splashFormat = '.' + xmlSettings.getAttribute( 'splashImgFormat' );\n            self.album.settings.trackImgFormat = '.' + xmlSettings.getAttribute( 'trackImgFormat' );\n            self.album.settings.analytics = xmlSettings.getAttribute( 'analytics' );\n            self.album.settings.version = xmlSettings.getAttribute( 'xmlVersion' );\n            \n            // setup\n            self.album.title = self._xmlSelector( xmlSetup, 'title' ).textContent;\n            self.album.subtitle = self._xmlSelector( xmlSetup, 'subtitle' ).textContent;\n            self.album.author = self._xmlSelector( xmlSetup, 'author' ).getAttribute( 'name' );\n            self.album.authorProfile = self._xmlSelector( xmlSetup, 'author' ).textContent;\n            self.album.length = self._xmlSelector( xmlSetup, 'length' ).textContent;\n            \n            // set program\n            if ( self._isEmpty( xmlSetup.getAttribute( 'program' ) ) ) {\n                \n                if ( self.reference.names[3] !== undefined ) {\n                    \n                    self.album.program.name = self.reference.names[3];\n                    \n                }\n                \n            } else {\n                \n                self.album.program.name = xmlSetup.getAttribute( 'program' );\n                \n            }\n            \n            // set course\n            if ( !self._isEmpty( xmlSetup.getAttribute( 'course' ) ) ) {\n                \n                self.album.program.course = xmlSetup.getAttribute( 'course' );\n                \n            }\n            \n            // track(s)\n            self.album.tracks = [];\n            \n            Array.prototype.forEach.call( xmlTracks, function( el) {\n                \n                let obj = {};\n            \n                obj.src = el.getAttribute( 'src' );\n                obj.title = el.querySelector( 'title' ).innerHTML;\n                obj.author = el.querySelector( 'author' ).getAttribute( 'name' );\n                obj.authorProfile = el.querySelector( 'author' ).innerHTML;\n                \n                if ( self._isEmpty( obj.author ) ) {\n                    \n                    obj.author = self.album.author;\n                    \n                }\n                \n                if ( obj.author !== self.album.author ) {\n                    self.album.sameAuthor = false;\n                }\n                \n                if ( self._isEmpty( obj.author ) ) {\n                    \n                    obj.img = self._sanitize( self.album.author ) + self.album.settings.trackImgFormat;\n                    \n                } else {\n                    \n                    obj.img = self._sanitize( obj.author ) + self.album.settings.trackImgFormat;\n                    \n                }\n\n                self.album.tracks.push( obj );\n                \n            } );\n            \n//            console.log( self.album );\n            \n            self.setData();\n            self._setupAudioPlayer();\n            \n        } );\n        \n    }\n    \n    setTrack( num ) {\n        \n        // hold the class\n        const self = this;\n        \n        num = Number( num );\n        \n        // display title\n        let currentTitle = self._selector( self.el.trackTitle );\n            \n        currentTitle.innerHTML = self.album.tracks[num].title;\n        \n        // display author\n        let currentAuthor = self._selector( self.el.trackAuthor );\n        \n        currentAuthor.innerHTML = self.album.tracks[num].author;\n        \n        // load author picture if the track author is different\n        if ( !self.album.sameAuthor ) {\n\n            self._loadAuthorPic( self.album.tracks[num] );\n            \n        }\n        \n        // load author picture once if same author\n        if ( self.album.sameAuthor && self.album.sameAuthorLoaded === false ) {\n                \n            self._loadAuthorPic( self.album.tracks[num] );\n            self.album.sameAuthorLoaded = true;\n            \n        }\n        \n        // if more than one track\n        if ( self.album.tracks.length > 1 ) {\n            \n            // display and get current track number\n            let currentTrack = self._selector( self.el.currentTrackNum );\n            currentTrack.innerHTML = num + 1;\n            \n            let totalTracks = self._selector( self.el.totalTracks );\n            totalTracks.innerHTML = self.album.tracks.length;\n            \n            // add active class to current track in list\n            const tracks = self._selector( self.el.trackListItem, true );\n            \n            Array.prototype.forEach.call( tracks, function( track ) {\n                track.parentNode.classList.remove( 'active' );\n            } );\n            \n            tracks[num].parentNode.classList.add( 'active' );\n            \n        }\n        \n        // display next track title\n        let upNextTrackTitle = self._selector( self.el.upNextTrack );\n        \n        if ( self.album.tracks.length > 1 && num < self.album.tracks.length - 1 ) {\n            \n            upNextTrackTitle.innerHTML = self.album.tracks[num + 1].title;\n            \n        }\n        \n        // play the audio if the player is ready after setting source\n        if ( self.player.ready ) {\n            \n            const captionUrl = 'assets/audio/' + self.album.tracks[num].src + '.vtt';\n            \n            self._fileExists( captionUrl, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    self.player.source = {\n                \n                        type: 'video',\n                        title: self.album.tracks[num].title,\n                        sources: [\n                            \n                            {\n                                \n                                src: 'assets/audio/' + self.album.tracks[num].src + '.mp3',\n                                type: 'audio/mp3'\n                                \n                            }\n                            \n                        ],\n                        tracks: [\n                            \n                            {\n                                kind: 'captions',\n                                label: 'English',\n                                srclang: 'en',\n                                src: 'assets/audio/' + self.album.tracks[num].src + '.vtt',\n                                default: true\n                            }\n                            \n                        ]\n                        \n                    };\n                    \n                } else {\n                    \n                    self.player.source = {\n                \n                        type: 'video',\n                        title: self.album.tracks[num].title,\n                        sources: [\n                            \n                            {\n                                \n                                src: 'assets/audio/' + self.album.tracks[num].src + '.mp3',\n                                type: 'audio/mp3'\n                                \n                            }\n                            \n                        ]\n                        \n                    };\n                    \n                }\n                \n            } );\n            \n            self.player.once( 'canplay', function() {\n                        \n                self.player.togglePlay();\n                \n                if ( self.player.currentTrack === -1 ) {\n                    \n                   self.player.toggleCaptions( false );\n                   \n                } else {\n                    \n                    self.player.toggleCaptions( true );\n                    \n                }\n                \n            } );\n            \n        }\n        \n        // scroll the track title is applicable\n        self._stopMarquee( currentTitle );\n        self._marqueeEl( currentTitle );\n        \n    }\n    \n    _loadAuthorPic( track ) {\n        \n        const self = this;\n        let currentPic = self._selector( self.el.currentPic );\n        let localPicUrl = 'assets/images/' + track.img;\n        let centralPicUrl = self.manifest.ap_author_directory + self._sanitize( track.author ) + self.album.settings.trackImgFormat;\n        let authorPic = new Image();\n        \n        authorPic.src = self.manifest.ap_root_directory + 'images/pic.png';\n        \n        self._fileExists( localPicUrl, function( exist ) {\n            \n            if ( exist ) {\n                \n                authorPic.src = localPicUrl;\n                \n            } else {\n                \n                self._fileExists( centralPicUrl, function( exist ) {\n    \n                    if ( exist ) {\n                        \n                        authorPic.src = centralPicUrl;\n                        \n                    }\n                    \n                } );\n                \n            }\n            \n        } );\n        \n        currentPic.innerHTML = '';\n        currentPic.appendChild( authorPic );\n        \n    }\n    \n    setData() {\n        \n        const self = this;\n        \n        // DOM head elements\n        let pageTitle = this._selector( 'title' );\n        \n        pageTitle.innerHTML = this.album.title;\n        \n        // splash screen\n        let title = this._selector( this.el.splashTitle );\n        let subtitle = this._selector( this.el.splashSubtitle );\n        let author = this._selector( this.el.splashAuthor );\n        let length = this._selector( this.el.splashLength );\n        \n        title.innerHTML = this.album.title;\n        subtitle.innerHTML = this.album.subtitle;\n        author.innerHTML = this.album.author;\n        length.innerHTML = this.album.length;\n        \n        // splash download menu list\n        let fileName = self.reference.names;\n        \n        if ( fileName.length === 0 ) {\n            \n            fileName = 'album';\n            \n        } else {\n            \n            fileName = self.reference.names[self.reference.names.length - 1];\n            \n        }\n        \n        Array.prototype.forEach.call( this.manifest.ap_download_files, function( el ) {\n            \n            let file = fileName + '.' + el.format;\n            \n            self._fileExists( file, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let link = document.createElement( 'a' );\n            \n                    link.href = file;\n                    link.setAttribute( 'download', file );\n                    link.setAttribute( 'role', 'menuitem' );\n                    link.innerHTML = el.label;\n                    \n                    let dwnldMenu = self._selector( self.el.dwnldBtnMenu );\n                    dwnldMenu.appendChild( link );\n                    \n                    let dwnldBtn = self._selector( self.el.dwnldBtn );\n                    dwnldBtn.setAttribute( 'aria-hidden', false );\n                    dwnldBtn.style.display = 'block';\n                    \n                    let dwnldFile = {\n                        name: el.label,\n                        url: file\n                    };\n                    \n                    self.album.downloads.push( dwnldFile );\n                    \n                }\n                \n            } );\n            \n        } );\n        \n        // splash background image\n        if ( !this._isEmpty( this.album.program.name ) ) {\n            \n            let bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/default' + this.album.settings.splashFormat;\n            \n            if ( !this._isEmpty( self.album.program.course ) ) {\n                \n                bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/' + this.album.program.course + this.album.settings.splashFormat;\n                \n            }\n            \n            this._fileExists( bgUrl, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let splashBg = self._selector( self.el.splash );\n                    let head = self._selector( 'head' );\n                    let bgImg = 'url(\"' + bgUrl + '\")';\n                    \n                    splashBg.style.backgroundImage = bgImg;\n            \n                    // change the bg in the ap-main:before as well\n                    let style = document.createElement( 'style' );\n                    \n                    style.setAttribute( 'type', 'text/css' );\n                    style.innerHTML = '#ap-main:before{background-image: ' + bgImg + ' !important;}';\n                    \n                    head.appendChild( style );\n                    \n                }\n                \n            } );\n            \n        }\n        \n        // load accent\n        if ( !this._isEmpty( self.album.settings.accent ) ) {\n            \n            let accentUrl = this.manifest.ap_root_directory + 'script/templates/accent_css.tpl';\n            this._requestFile( accentUrl, function( xhr ) {\n                \n                const accentStyle = xhr.response.replace( /\\{([accent)]+)\\}/ig, self.album.settings.accent );\n                \n                let head = self._selector( 'head' );\n                let style = document.createElement( 'style' );\n                \n                style.setAttribute( 'type', 'text/css' );\n                style.innerHTML = accentStyle;\n                \n                head.appendChild( style );\n                \n            } );\n            \n        }\n        \n        // set tracks\n        if ( this.album.tracks.length > 1 ) {\n            \n            let trackListDisplay = this._selector( this.el.trackList );\n            \n            Array.prototype.forEach.call( this.album.tracks, function( el, indx ) {\n                \n                let li = document.createElement( 'li' );\n                let a = document.createElement( 'a' );\n                \n                a.classList.add( 'ap-track' );\n                a.href = 'javascript:void(0);';\n                a.setAttribute( 'data-index', indx );\n                \n                let numSpan = document.createElement( 'span' );\n                \n                numSpan.classList.add( 'track-num' );\n                numSpan.innerHTML = indx + 1 + '.';\n                \n                let titleWrprSpan = document.createElement( 'span' );\n                \n                titleWrprSpan.classList.add( 'track-title-wrapper' );\n                \n                let titleSpan = document.createElement( 'span' );\n                \n                titleSpan.classList.add( 'track-title' );\n                titleSpan.setAttribute( 'title', el.title );\n                titleSpan.innerHTML = el.title;\n                \n                titleWrprSpan.appendChild( titleSpan );\n                \n                if ( !self.album.sameAuthor ) {\n                    \n                    let img = document.createElement( 'img' );\n                    let localPicUrl = 'assets/images/' + self.album.tracks[indx].img;\n                    let centralPicUrl = self.manifest.ap_author_directory + self._sanitize( self.album.tracks[indx].author ) + self.album.settings.trackImgFormat;\n                    \n                    img.classList.add( 'track-img' );\n                    img.src = self.manifest.ap_root_directory + 'images/pic.png';\n        \n                    self._fileExists( localPicUrl, function( exist ) {\n                        \n                        if ( exist ) {\n                            \n                            img.src = localPicUrl;\n                            \n                        } else {\n                            \n                            self._fileExists( centralPicUrl, function( exist ) {\n                \n                                if ( exist ) {\n                                    \n                                    img.src = centralPicUrl;\n                                    \n                                }\n                                \n                            } );\n                            \n                        }\n                        \n                    } );\n                    \n                    a.appendChild( img );\n                    \n                }\n                \n                a.appendChild( numSpan );\n                a.appendChild( titleWrprSpan );\n                \n                // download button\n                let button = document.createElement( 'a' );\n                \n                button.classList.add( 'track-download' );\n                button.setAttribute( 'download', el.src + '.mp3' );\n                button.href = 'assets/audio/' + el.src + '.mp3';\n                button.setAttribute( 'role', 'button' );\n                \n                let svg = document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' );\n                \n                svg.classList.add( 'icon' );\n                svg.setAttribute( 'aria-hidden', true );\n                svg.setAttribute( 'viewbox', '0 0 30 30' );\n                \n                let use = document.createElementNS( 'http://www.w3.org/2000/svg', 'use' );\n                \n                use.setAttributeNS( 'http://www.w3.org/1999/xlink', 'href', self.manifest.ap_root_directory + 'images/icons.svg#icon-download' );\n                \n                svg.appendChild( use );\n                button.appendChild( svg );\n                a.appendChild( button );\n                \n                li.appendChild( a );\n                \n                trackListDisplay.appendChild( li );\n                \n            } );\n            \n            self._trackListItemListener();\n            \n        } else {\n            \n            this._selector( this.el.main ).classList.add( 'single' );\n            \n        }\n    \n        // copyright\n        let copyright = this._selector( this.el.copyright );\n        let date = new Date();\n        let year = date.getFullYear();\n        \n        copyright.innerHTML += '&copy; ' + year + '. ' + this.manifest.ap_copyright;\n        \n        // program theme\n        this._setProgram();\n        \n    }\n    \n    _setupAudioPlayer() {\n        \n        const self = this;\n        \n        let plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/single_plyr_controls.tpl';\n        \n        if ( self.album.tracks.length > 1 ) {\n            \n            plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/full_plyr_controls.tpl';\n            \n        }\n        \n        self._requestFile( plyrControlsUrl, function( xhr ) {\n            \n            const controls = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n                \n            self.el.player = new Plyr( self.el.playerId, {\n        \n                controls: controls,\n                hideControls: false,\n                captions: {\n                    active: true\n                },\n                autoplay: false,\n                volume: 0.8,\n                blankVideo: self.manifest.ap_root_directory + 'images/blank.m4v',\n                clickToPlay: false,\n                fullscreen: {\n                    enabled: false,\n                    fallback: false,\n                    iosNative: false\n                }\n                            \n            } );\n            \n            self.el.player.on( 'ready', event => {\n                \n                self.player = event.detail.plyr;\n                \n                //self._CCSpectrumDisplays();\n                \n                const playpauseBtn = self._selector( '#ap-playpause' );\n                const muteUnmuteBtn = self._selector( '#ap-muteunmute' );\n                const loopBtn = self._selector( '#ap-loop' );\n                const playbackRateBtn = self._selector( '#ap-playbackRate' );\n                const nextBtn = self._selector( self.el.next );\n                const prevBtn = self._selector( self.el.previous );\n                const totalTracks = self.album.tracks.length - 1;\n                const downloadBtn = self._selector( self.el.mainDwnldBtn );\n                \n                // check playback rate and update playback rate select element\n                for ( var i = 0; i < playbackRateBtn.options.length; i++ ) {\n    \n                    if ( Number( playbackRateBtn.options[i].value ) === self.player.speed ) {\n                        \n                        playbackRateBtn.selectedIndex = i;\n                        break;\n                        \n                    }\n                    \n                }\n                \n                if ( self.album.currentTrack <= 0 ) {\n                    \n                    prevBtn.setAttribute( 'disabled', true );\n                    prevBtn.classList.add( 'disabled' );\n                }\n                \n                if ( self.album.currentTrack >= totalTracks ) {\n                            \n                    nextBtn.setAttribute( 'disabled', true );\n                    nextBtn.classList.add( 'disabled' );\n                    \n                }\n                \n                nextBtn.addEventListener( 'click', function() {\n                    \n                    \n                    if ( self.album.currentTrack < totalTracks ) {\n                        \n                        self.album.currentTrack++;\n                        self.setTrack( self.album.currentTrack );\n                        \n                    }\n                    \n                } );\n                \n                prevBtn.addEventListener( 'click', function() {\n                    \n                    if ( self.album.currentTrack > 0 ) {\n                        \n                        self.album.currentTrack--;\n                        self.setTrack( self.album.currentTrack );\n                        \n                    }\n                    \n                } );\n                \n                downloadBtn.addEventListener( 'click', function() {\n                    \n                    let overlayDisplay = self._selector( self.el.overlayDisplay );\n                    let overlayDisplayContent = self._selector( self.el.overlayDisplayContent );\n                    let closeBtn = self._selector( self.el.closeOverlayBtn );\n                    \n                    let h4 = document.createElement( 'h4' );\n                    \n                    h4.innerHTML = \"Downloads\";\n                    \n                    overlayDisplayContent.appendChild( h4 );\n                    \n                    let ul = document.createElement( 'ul' );\n                    \n                    ul.classList.add( 'dwnld-list' );\n                    \n                    Array.prototype.forEach.call( self.album.downloads, function( obj ) {\n                        \n                        let li = document.createElement( 'li' );\n                        let a = document.createElement( 'a' );\n                        \n                        a.href = obj.url;\n                        a.innerHTML = obj.name;\n                        a.setAttribute( 'download', obj.url );\n                        \n                        li.appendChild( a );\n                        ul.appendChild( li );\n                        \n                    } );\n                    \n                    overlayDisplayContent.appendChild( ul );\n                    \n                    overlayDisplay.classList.add( 'small-overlay' );\n                    overlayDisplay.style.display = 'block';\n                    self._fadeIn( overlayDisplay );\n                    \n                    closeBtn.addEventListener( 'click', function() {\n                        self.closeOverlay();\n                    }, {once: true} );\n                    \n                } );\n                \n                self.player.on( 'playing', function() {\n                    \n                    playpauseBtn.classList.add( 'plyr__control--pressed' );\n                    \n                } );\n                \n                self.player.on( 'pause', function() {\n                    \n                    playpauseBtn.classList.remove( 'plyr__control--pressed' );\n                    \n                } );\n                \n                // on playback end\n                self.player.on( 'ended', function() {\n                    \n                    if ( self.player.loop === false ) {\n                        \n                        if ( playpauseBtn.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                            playpauseBtn.classList.add( 'plyr__control--pressed' );\n                            \n                        }\n                        \n                        self.player.restart();\n                        \n                    }\n                    \n                } );\n                \n                // toogle loop button state\n                loopBtn.addEventListener( 'click', function() {\n    \n                    if ( self.player.loop === false ) {\n                        \n                        self.player.loop = true;\n                        loopBtn.classList.add( 'active' );\n                        \n                    } else {\n                        \n                        self.player.loop = false;\n                        loopBtn.classList.remove( 'active' );\n                        \n                    }\n                    \n                } );\n                \n                // change playback rate\n                playbackRateBtn.addEventListener( 'change', function( evt ) {\n                    \n                    self.player.speed = Number( evt.target.options[evt.target.selectedIndex].value );\n                    \n                } );\n                \n                // toglle mute/unmute state\n                muteUnmuteBtn.addEventListener( 'click', function( evt ) {\n                    \n                    if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                        \n                        evt.target.classList.remove( 'plyr__control--pressed' );\n                        \n                    } else {\n                        \n                        evt.target.classList.add( 'plyr__control--pressed' );\n                        \n                    }\n                    \n                } );\n                    \n            } ); // end player ready event\n            \n        } );\n        \n    } // end _setupAudioPlayer\n    \n    _setProgram() {\n        \n        const self = this;\n        \n        if ( self.manifest.ap_custom_themes ) {\n            \n            self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                \n                return obj.name === self.album.program.name;\n                \n            } );\n            \n            if ( self.album.program === undefined ) {\n                \n                self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                    \n                    return obj.name === self.manifest.ap_logo_default;\n                    \n                } );\n                \n            }\n            \n        }\n        \n        let decorationBar = self._selector( '.program-theme' );\n    \n        self.album.program.colors.forEach( function( hex ) {\n                        \n            let span = document.createElement( 'span' );\n            span.style.backgroundColor = hex;\n            decorationBar.appendChild( span );\n            \n        } );\n        \n    }\n    \n    _checkSupport() {\n        \n        if ( this.hasCoreFeaturesSupport() ) {\n        \n            this.showError( '🙈', '', 'Your web browser does not support core audio player features.<br><a href=\"http://outdatedbrowser.com/en\" target=\"_blank\">Please update your web browser.</a>' );\n            return;\n            \n        }\n        \n        if ( this.hasAppearanceIusses() ) {\n        \n            this.showWarning( 'For better viewing, try a different web browser.' );\n            \n        }\n        \n    }\n    \n    hasCoreFeaturesSupport() {\n    \n        if ( !Modernizr.audio && Modernizr.json && Modernizr.svg\n             && Modernizr.csscalc && Modernizr.flexbox ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    hasAppearanceIusses() {\n    \n        if ( !Modernizr.canvas ) {\n            return true;\n        }\n        \n        if ( !Modernizr.cssanimations ) {\n            return true;\n        }\n        \n        if ( !Modernizr.bgsizecover ) {\n            return true\n        }\n        \n        if ( !Modernizr.objectfit ) {\n            return true\n        }\n        \n        return false;\n        \n    }\n    \n    showError( iconStr, titleStr, bodyStr ) {\n    \n        let splash = this._selector( this.el.splash );\n        let main = this._selector( this.el.main );\n        let error = this._selector( this.el.error );\n        let icon = this._selector( this.el.errorIcon );\n        let title = this._selector( this.el.errorTitle );\n        let body = this._selector( this.el.errorBody );\n        \n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = false;\n        \n        icon.innerHTML = iconStr;\n        title.innerHTML = titleStr;\n        body.innerHTML = bodyStr;\n        \n        splash.style.display = 'none';\n        main.style.display = 'none';\n        \n        error.style.display = 'flex';\n        error.setAttributeNode( ariaHidden );\n        \n        this._fadeIn( error );\n        \n    }\n    \n    showWarning( str ) {\n    \n        const self = this;\n        let warning = self._selector( self.el.warning );\n        let hideTime = 6000;\n        \n        warning.innerHTML = str;\n        warning.style.display = 'block';\n        \n        self._fadeIn( warning );\n        \n        window.setTimeout( function() {\n            \n            self._fadeOut( warning, function() {\n                \n                warning.innerHTML = '';\n                warning.style.display = 'none';\n                \n            } );\n            \n        }, hideTime );\n        \n    }\n    \n    hideSplash() {\n    \n        let splash = this._selector( this.el.splash );\n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = true;\n        \n        splash.classList.add( 'hide-splash' );\n        splash.setAttributeNode( ariaHidden );\n        \n    }\n    \n    showProfile() {\n        \n        const self = this;\n        let authorOverlayDisplay = this._selector( this.el.overlayDisplay );\n        let closeBtn = this._selector( this.el.closeOverlayBtn );\n        let index = Number( self._selector( self.el.currentTrackNum ).innerHTML ) - 1;\n        \n        if ( self.album.tracks.length <= 1 ) {\n            index = 0;\n        }\n        \n        let currentAuthor = self.album.tracks[index].author;\n        let currentProfile = self.album.authorProfile;\n        \n        if ( !self._isEmpty( self.album.tracks[index].authorProfile) ) {\n            \n            currentProfile = self.album.tracks[index].authorProfile;\n            \n        }\n        \n        if ( self._isEmpty( currentProfile ) ) {\n            \n            let profileUrl = self.manifest.ap_author_directory + self._sanitize( currentAuthor ) + '.json?callback=author';\n        \n            let $jsonp = ( function() {\n                \n                let that = {};\n                let spinner = self._selector( self.el.overlayDisplaySpinner );\n                \n                that.send = function( src, options ) {\n            \n                    spinner.classList.add( 'spin' );\n                    \n                    let callback_name = options.callbackName || 'callback',\n                        on_success = options.onSuccess || function() {},\n                        on_timeout = options.onTimeout || function() {},\n                        timeout = options.timeout || 10; // sec\n                \n                    let timeout_trigger = window.setTimeout( function() {\n                        window[callback_name] = function() {};\n                        spinner.classList.remove( 'spin' );\n                        on_timeout();\n                    }, timeout * 1000);\n                    \n                    window[callback_name] = function( data ) {\n                        window.clearTimeout( timeout_trigger );\n                        spinner.classList.remove( 'spin' );\n                        on_success( data );\n                    }\n                    \n                    let script = document.createElement( 'script' );\n                    script.type = 'text/javascript';\n                    script.async = true;\n                    script.src = src;\n                    \n                    document.getElementsByTagName( 'head' )[0].appendChild( script );\n                \n                }\n                \n                return that;\n                \n            } )();\n            \n            $jsonp.send( profileUrl, {\n                \n                callbackName: 'author',\n                onSuccess: function( json ) {\n                    \n                    self._setProfile( json.name, json.profile );\n                },\n                onTimeout: function() {\n                    \n                    self._setProfile( currentAuthor, currentProfile );\n                    \n                },\n                timeout: 5\n                \n            } );\n            \n        } else {\n            \n            self._setProfile( currentAuthor, currentProfile );\n            \n        }\n        \n        authorOverlayDisplay.style.display = 'block';\n        this._fadeIn( authorOverlayDisplay );\n        \n        closeBtn.addEventListener( 'click', function() {\n            self.closeOverlay();\n        }, {once: true} );\n\n    }\n    \n    _setProfile( author, bio ) {\n        \n        let authoroverlayDisplayContent = this._selector( this.el.overlayDisplayContent );\n        \n        let name = document.createElement( 'h4' );\n                    \n        name.innerHTML = author;\n                        \n        let profile = document.createElement( 'div' );\n        \n        profile.innerHTML = bio;\n        \n        authoroverlayDisplayContent.appendChild( name );\n        authoroverlayDisplayContent.appendChild( profile );\n        \n    }\n    \n    closeOverlay() {\n        \n        let overlayDisplay = this._selector( this.el.overlayDisplay );\n        let overlayDisplayContent = this._selector( this.el.overlayDisplayContent );\n        \n        this._fadeOut( overlayDisplay, function() {\n            \n            overlayDisplay.style.display = '';\n            \n            overlayDisplayContent.innerHTML = '';\n            overlayDisplay.classList.remove( 'small-overlay' );\n            \n        } );\n\n    }\n    \n    _setShowProfileListener() {\n        \n        const self = this;\n        let showProfileBtn = this._selector( this.el.showProfileBtn );\n        \n        showProfileBtn.addEventListener( 'click', function() {\n            \n            self.showProfile();\n            \n        } );\n        \n    }\n    \n    _expandTracksToggle() {\n        \n        const self = this;\n        let expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        expandTracksBtn.addEventListener( 'click', function() {\n            \n            let trackList = self._selector( self.el.trackList );\n            let minDisplay = self._selector( self.el.miniDisplay );\n            \n            if ( trackList.style.display == 'none' || trackList.style.display == '' ) {\n                \n                trackList.style.display = 'block';\n                minDisplay.style.display = 'none';\n                \n                //self._hideCCSpectrum();\n                \n                self._slideDown( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.add( 'rotate' );\n                    trackList.style.setProperty( 'overflow-y', 'auto' );\n                    \n                } );\n                \n            } else {\n                \n                trackList.style.display = 'none';\n                trackList.style.setProperty( 'overflow-y', 'hidden' );\n                minDisplay.style.display = 'flex';\n                \n                self._slideUp( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.remove( 'rotate' );\n                    //self._CCSpectrumDisplays();\n                    \n                } );\n                \n            }\n            \n        } );\n        \n    }\n    \n    toggleCC() {\n        \n        const self = this;\n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        ccToggle.classList.add( 'disabled' );\n        spectrumToggle.classList.remove( 'disabled' );\n        \n        captionDisplay.classList.add( 'active' );\n        spectrumDisplay.classList.remove( 'active' );\n        \n        self.player.on( 'canplay', function() {\n            \n            if ( self.player.currentTrack !== -1 ) {\n                self.player.toggleCaptions( true );\n            }\n            \n        } );\n        \n        if ( self.player.playing && self.player.currentTrack !== -1 ) {\n            self.player.toggleCaptions( true );\n        }\n\n    }\n    \n    toggleSpectrum() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        spectrumToggle.classList.add( 'disabled' );\n        ccToggle.classList.remove( 'disabled' );\n        \n        spectrumDisplay.classList.add( 'active' );\n        captionDisplay.classList.remove( 'active' );\n        \n        if ( this.player !== null && this.player.currentTrack > -1 ) {\n            this.player.toggleCaptions( false );\n        }\n        \n    }\n    \n    _CCSpectrumDisplays() {\n        \n        const self = this;\n        let toggles = this._selector( this.el.bodyControls );\n        let displays = this._selector( this.el.ccSpecDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        if ( toggles.style.display === 'none' ) {\n            \n            toggles.style.display = '';\n            displays.style.display = '';\n            \n        } else {\n\n            self.toggleCC();\n            \n        }\n        \n        ccToggle.addEventListener( 'click', function() {\n            self.toggleCC();\n        } );\n        \n        spectrumToggle.addEventListener( 'click', function() {\n            self.toggleSpectrum();\n        } );\n        \n    }\n    \n    _hideCCSpectrum() {\n        \n        let displays = this._selector( this.el.ccSpecDisplay );\n        let toggles = this._selector( this.el.bodyControls );\n        \n        toggles.style.display = 'none';\n        displays.style.display = 'none';\n        \n    }\n    \n    /*** HELPER METHODS ***/\n    \n    _selector( str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return document.querySelectorAll( str );\n            \n        } else {\n            \n            return document.querySelector( str );\n            \n        }\n        \n    }\n    \n    _xmlSelector( xml, str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return xml.querySelectorAll( str );\n            \n        } else {\n            \n            return xml.querySelector( str );\n            \n        }\n        \n    }\n    \n    _sanitize( str ) {\n        \n        return str.replace(/[^\\w]/gi, '').toLowerCase();\n    \n    }\n    \n    _isEmpty( str ) {\n        \n        if ( typeof str === 'string' && str.trim() === '' ) {\n            return true;\n        }\n        \n        if ( str === undefined ) {\n            return true;\n        }\n        \n        if ( str ===  null ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    _requestFile( url, callback ) {\n        \n        const self = this;\n        let body = self._selector( 'body' );\n        let request = new XMLHttpRequest();\n        \n        request.open( 'GET', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                callback( this );\n                \n            } else {\n                \n                body.innerHTML += '<div class=\"error\">Error ' + this.status + ' while loading <code>' + url + '</code></div>';\n                \n            }\n            \n            request.abort();\n            \n        };\n        \n        request.onerror = function() {\n            \n            body.innerHTML += '<div class=\"error\">Connection Error. Check your network.</div>';\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _fileExists( url, callback ) {\n        \n        let request = new XMLHttpRequest();\n        let found = false;\n        \n        request.open( 'HEAD', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                found = true;\n                \n            } else {\n                \n                found = false;\n                \n            }\n            \n            callback( found );\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _cleanArray( arr ) {\n    \n        arr.forEach( function( value, index ) {\n            \n            if ( value === '' ) {\n                arr.splice( index, 1 );\n            }\n            \n        } );\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\.\\w*/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\:/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        return arr;\n        \n    }\n    \n    _parseUri( str ) {\n        \n        let parts =  str.split( '?' );\n        let target = parts[0];\n        \n        if ( target.lastIndexOf( '/' ) !== target.length - 1 ) {\n    \t\ttarget += '/';\n    \t}\n    \t\n    \treturn this._cleanArray( target.split( '/' ) );\n        \n    }\n    \n    /*** ANIMATION METHODS ***/\n    \n    _marqueeEl( el ) {\n        \n        const self = this;\n        \n        if ( el.offsetWidth < el.scrollWidth ) {\n            \n            let runTime = 15500;\n            let startTime = 5000;\n            \n            self.marquee.start = window.setInterval( function() {\n                \n                el.parentNode.classList.remove( 'stop-marquee' );\n                el.parentNode.classList.add( 'marquee' );\n                \n                el.style.width = el.scrollWidth + 'px';\n                \n                window.clearInterval( self.marquee.start );\n                \n                self.marquee.stop = window.setTimeout( function() {\n                     \n                    el.style.width = 'initial';\n                    el.parentNode.classList.remove( 'marquee' );\n                    window.clearTimeout( self.marquee.stop );\n                    \n                    self._fadeIn( el );\n                    self._marqueeEl( el );\n                    \n                }, runTime );\n                \n            }, startTime );\n            \n        }\n        \n    }\n    \n    _stopMarquee( el ) {\n        \n        el.style.width = '';\n        el.parentNode.classList.remove( 'marquee' );\n        el.parentNode.classList.add( 'stop-marquee' );\n        \n        if ( this.marquee.stop !== null ) {\n            window.clearTimeout( this.marquee.stop );\n        }\n        \n        if ( this.marquee.start !== null ) {\n            window.clearInterval( this.marquee.start );\n        }\n        \n    }\n    \n    _fadeIn( el, callback ) {\n        \n        el.classList.remove( 'fadeOut' );\n        el.classList.add( 'fadeIn' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeOut( el, callback ) {\n\n        el.classList.remove( 'fadeIn' );\n        el.classList.add( 'fadeOut' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.classList.remove( 'fadeIn' );\n        evt.target.classList.remove( 'fadeOut' );\n        evt.target.removeEventListener( evt.target.params._event, this._fadeCallback );\n        \n    }\n    \n    _slideDown( el, callback ) {\n        \n        el.classList.add( 'slideDown' );\n        el.classList.remove( 'slideUp' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideUp( el, callback ) {\n        \n        const self = this;\n        el.classList.add( 'slideUp' );\n        el.classList.remove( 'slideDown' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, self._slideCallback );\n        \n    }\n    \n    _slideCallback( evt ) {\n        \n        const self = this;\n        \n        if ( evt.target.params !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n            evt.target.removeEventListener( evt.target.params._event, self._slideCallback );\n            \n        }\n        \n    } \n    \n    _whichAnimationEvent() {\n        \n        let ani;\n        let el = document.createElement( 'fakeelement' );\n        let animations = {\n            'animation': 'animationend',\n            'OAnimation': 'oAnimationEnd',\n            'MozAnimation': 'animationend',\n            'WebkitAnimation': 'webkitAnimationEnd'\n        }\n        \n        for ( ani in animations ) {\n            \n            if ( el.style[ani] !== undefined ) {\n                \n                return animations[ani];\n                \n            }\n            \n        }\n        \n    }\n    \n} // end APlayer class\n\n/**** ON DOM READY ****/\n( function ready( fn ) {\n    \n    if ( document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading' ) {\n        \n        fn();\n        \n    } else {\n        \n        document.addEventListener( 'DOMContentLoaded', fn );\n        \n    }\n    \n} )( function() {\n    \n    new APlayer();\n    \n} );\n"]}