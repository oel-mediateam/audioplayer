{"version":3,"sources":["../../../source/script/audio-dev.js"],"names":["APlayer","_classCallCheck","this","el","splash","main","showProfileBtn","closeProfileBtn","profileDisplay","trackTitle","miniDisplay","trackList","expandTracksBtn","ccSpecDisplay","spectrumDisplay","captionDisplay","bodyControls","ccToggle","spectrumToggle","warning","error","errorIcon","errorTitle","errorBody","playerId","copyright","player","manifest","album","program","reference","names","window","location","href","params","URLSearchParams","search","self","hasCoreFeaturesSupport","showError","hasAppearanceIusses","showWarning","setUIs","getManifest","manifestUrl","_selector","getAttribute","request","XMLHttpRequest","open","onload","status","JSON","parse","response","getAlbum","onerror","send","setData","_setupAudioPlayer","_CCSpectrumDisplays","_expandTracksToggle","_setShowProfileListener","date","Date","year","getFullYear","innerHTML","ap_copyright","ap_root_directory","length","setProgram","_marqueeEl","controls","Plyr","autoplay","volume","clickToPlay","fullscreen","enabled","fallback","iosNative","on","event","instance","detail","plyr","playpauseBtn","muteUnmuteBtn","loopBtn","playbackRateBtn","playing","classList","add","i","options","Number","value","speed","selectedIndex","loop","contains","restart","addEventListener","remove","evt","target","ap_custom_themes","find","obj","name","undefined","ap_logo_default","decorationBar","colors","forEach","hex","span","document","createElement","style","backgroundColor","appendChild","Modernizr","audio","json","svg","csscalc","flexbox","canvas","cssanimations","bgsizecover","objectfit","iconStr","titleStr","bodyStr","icon","title","body","ariaHidden","createAttribute","display","setAttributeNode","_fadeIn","str","hideTime","setTimeout","_fadeOut","authorProfile","closeBtn","closeProfile","once","showProfile","minDisplay","_hideCCSpectrum","_slideDown","parentNode","_slideUp","toggles","displays","toggleCC","toggleSpectrum","querySelector","offsetWidth","scrollWidth","runTime","startTime","start","setInterval","width","clearInterval","stop","clearTimeout","callback","animationEvt","_whichAnimationEvent","_event","_callback","_fadeCallback","removeEventListener","_slideCallback","ani","animations","animation","OAnimation","MozAnimation","WebkitAnimation","AP","ready","fn","attachEvent","readyState","go"],"mappings":"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","file":"audio.js","sourcesContent":["/*\n * Audio Player\n *\n * @author: Ethan Lin\n * @url: https://github.com/oel-mediateam/audioplayer\n * @version: 2.0.0\n *\n * @license: The MIT License (MIT)\n * Copyright (c) 2014 - 2018 Media Serivces\n *\n */\n\n'use strict';\n\nclass APlayer {\n    \n    constructor() {\n        \n        this.el = {\n            splash: '#ap-splash',\n            main: '#ap-main',\n            showProfileBtn: '#show-profile',\n            closeProfileBtn: '#author-close-btn',\n            profileDisplay: '#author-overlay',\n            trackTitle: '.track-info .title-wrapper .title',\n            miniDisplay: '.track-list .minimized-display',\n            trackList: '.track-list .tracks',\n            expandTracksBtn: '.track-list .expand-btn',\n            ccSpecDisplay: '.body .cc-spec-display',\n            spectrumDisplay: '.body .cc-spec-display .spectrum',\n            captionDisplay: '.body .cc-spec-display .caption',\n            bodyControls: '.body .controls',\n            ccToggle: '#cc-toggle',\n            spectrumToggle: '#spectrum-toggle',\n            warning: '.body .warning-msg',\n            error: '#ap-error',\n            errorIcon: '#ap-error .icon',\n            errorTitle: '#ap-error .title',\n            errorBody: '#ap-error .body',\n            playerId: '#player',\n            copyright: '.copyright p',\n            player: null\n        };\n        \n        this.manifest ={};\n        this.album = {};\n        this.program = {};\n        this.reference = {\n            names: window.location.href,\n            params: new URLSearchParams( window.location.search )\n        };\n        \n    }\n         \n    go() {\n        \n        let self = this;\n        \n        if ( self.hasCoreFeaturesSupport() ) {\n        \n            self.showError( '🙈', '', 'Your web browser does not support core audio player features.<br><a href=\"http://outdatedbrowser.com/en\" target=\"_blank\">Please update your web browser.</a>' );\n            return;\n            \n        }\n        \n        if ( self.hasAppearanceIusses() ) {\n        \n            self.showWarning( 'For better viewing, try a different web browser.' );\n            \n        }\n        \n        self.setUIs();\n        self.getManifest();\n        \n    }\n    \n    getManifest() {\n        \n        let self = this;\n        let manifestUrl = self._selector( '#ap-manifest' ).getAttribute( 'href' );\n        let request = new XMLHttpRequest();\n        \n        request.open( 'GET', manifestUrl, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                self.manifest = JSON.parse( this.response );\n                self.getAlbum();\n                \n            } else {\n                \n                self.showError( '🤔', this.status, 'Something went wrong while loading manifest.' );\n                \n            }\n            \n        };\n        \n        request.onerror = function() {\n            \n            self.showError( '', 'Connection Error', 'Check your network.' );\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    getAlbum() {\n        \n        this.setData();\n        this._setupAudioPlayer();\n        \n    }\n    \n    setUIs() {\n        \n        this._CCSpectrumDisplays();\n        this._expandTracksToggle();\n        this._setShowProfileListener();\n        \n    }\n    \n    setData() {\n        \n        let self = this;\n        let trackTitle = self._selector( self.el.trackTitle );\n        let copyright = self._selector( self.el.copyright );\n        let date = new Date();\n        let year = date.getFullYear();\n        \n        copyright.innerHTML += '&copy; ' + year + '. ' + self.manifest.ap_copyright;\n        \n        if ( self.manifest.ap_root_directory.length === 0 ) {\n            \n            self.manifest.ap_root_directory = 'source/';\n            \n        }\n        \n        this.setProgram();\n        this._marqueeEl( trackTitle );\n        \n    }\n    \n    _setupAudioPlayer() {\n        \n        var self = this;\n        \n        const controls = `\n        <div class=\"plyr__controls\">\n            \n            <div class=\"top-controls\">\n            \n                <div class=\"plyr__time plyr__time--current\" aria-label=\"Current time\">00:00</div>\n                \n                <div class=\"plyr__progress\">\n                    <input id=\"plyr-seek-{id}\" data-plyr=\"seek\" type=\"range\" min=\"0\" max=\"100\" step=\"0.01\" value=\"0\" aria-label=\"Seek\">\n                    <progress class=\"plyr__progress__buffer\" min=\"0\" max=\"100\" value=\"0\" role=\"presentation\" aria-hidden=\"true\">% buffered</progress>\n                    <span role=\"tooltip\" class=\"plyr__tooltip\">00:00</span>\n                </div>\n                \n                <div class=\"plyr__time plyr__time--duration\" aria-label=\"Duration\">00:00</div>\n            \n            </div>\n            \n            <div class=\"middle-controls\">\n                \n                <button type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-previous\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Previous</span>\n                </button>\n                \n                <button type=\"button\" class=\"plyr__control\" data-plyr=\"rewind\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-backward\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Rewind {seektime} secs</span>\n                </button>\n                \n                <button type=\"button\" id=\"ap-playpause\" class=\"plyr__control\" aria-label=\"Play, {title}\" data-plyr=\"play\">\n                    <svg class=\"icon--pressed\" role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-pause\"></use></svg>\n                    <svg class=\"icon--not-pressed\" role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-play\"></use></svg>\n                    <span class=\"label--pressed plyr__tooltip\" role=\"tooltip\">Pause</span>\n                    <span class=\"label--not-pressed plyr__tooltip\" role=\"tooltip\">Play</span>\n                </button>\n                \n                <button type=\"button\" class=\"plyr__control\" data-plyr=\"fast-forward\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-forward\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Forward {seektime} secs</span>\n                </button>\n                \n                <button type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-next\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Next</span>\n                </button>\n            \n            </div>\n            \n            <div class=\"bottom-controls\">\n                \n                <button id=\"ap-loop\" type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-loop\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Loop</span>\n                </button>\n                \n                 <select id=\"ap-playbackRate\" name=\"playback\">\n                  <option value=\"1\">1x</option>\n                  <option value=\"1.5\">1.5x</option>\n                  <option value=\"2\">2x</option>\n                  <option value=\"2.5\">2.5x</option>\n                </select> \n                \n                <div class=\"ap-volcontrols\">\n                \n                    <button type=\"button\" id=\"ap-muteunmute\" class=\"plyr__control\" aria-label=\"Mute\" data-plyr=\"mute\">\n                        <svg class=\"icon--pressed\" role=\"presentation\"><use xlink:href=\"#plyr-muted\"></use></svg>\n                        <svg class=\"icon--not-pressed\" role=\"presentation\"><use xlink:href=\"#plyr-volume\"></use></svg>\n                        <span class=\"label--pressed plyr__tooltip\" role=\"tooltip\">Unmute</span>\n                        <span class=\"label--not-pressed plyr__tooltip\" role=\"tooltip\">Mute</span>\n                    </button>\n                    \n                    <div class=\"plyr__volume\">\n                        <input data-plyr=\"volume\" type=\"range\" min=\"0\" max=\"1\" step=\"0.05\" value=\"1\" autocomplete=\"off\" aria-label=\"Volume\">\n                    </div>\n                \n                </div>\n                \n                <button type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"` + self.manifest.ap_root_directory + `images/icons.svg#icon-download\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Download</span>\n                </button>\n            \n            </div>\n            \n        </div>\n        `;\n        \n        self.el.player = new Plyr( this.el.playerId, {\n            \n            controls: controls,\n            autoplay: false,\n            volume: 0.8,\n            clickToPlay: false,\n            fullscreen: {\n                enabled: false,\n                fallback: false,\n                iosNative: false\n            }\n                        \n        } );\n        \n        self.el.player.on( 'ready', event => {\n            \n            const instance = event.detail.plyr;\n            const playpauseBtn = self._selector( '#ap-playpause' );\n            const muteUnmuteBtn = self._selector( '#ap-muteunmute' );\n            const loopBtn = self._selector( '#ap-loop' );\n            const playbackRateBtn = self._selector( '#ap-playbackRate' );\n            \n            // play the audio\n            // instance.play();\n            \n            if ( instance.playing === true ) {\n                \n                playpauseBtn.classList.add( 'plyr__control--pressed' );\n                \n            }\n            \n            // check playback rate and update playback rate select element\n            for ( var i = 0; i < playbackRateBtn.options.length; i++ ) {\n\n                if ( Number( playbackRateBtn.options[i].value ) === instance.speed ) {\n                    \n                    playbackRateBtn.selectedIndex = i;\n                    break;\n                    \n                }\n                \n            }\n            \n            // on playback end\n            instance.on( 'ended', function() {\n                \n                if ( instance.loop === false ) {\n                    \n                    if ( playpauseBtn.classList.contains( 'plyr__control--pressed' ) ) {\n                \n                        playpauseBtn.classList.add( 'plyr__control--pressed' );\n                        \n                    }\n                    \n                    instance.restart();\n                    \n                }\n                \n            } );\n            \n            // toogle loop button state\n            loopBtn.addEventListener( 'click', function() {\n\n                if ( instance.loop === false ) {\n                    \n                    instance.loop = true;\n                    loopBtn.classList.add( 'active' );\n                    \n                } else {\n                    \n                    instance.loop = false;\n                    loopBtn.classList.remove( 'active' );\n                    \n                }\n                \n            } );\n            \n            // change playback rate\n            playbackRateBtn.addEventListener( 'change', function( evt ) {\n                \n                instance.speed = Number( evt.target.options[evt.target.selectedIndex].value );\n                \n            } );\n            \n            // toggle play/pause state\n            playpauseBtn.addEventListener( 'click', function( evt ) {\n            \n                if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                    evt.target.classList.remove( 'plyr__control--pressed' );\n                    \n                } else {\n                    \n                    evt.target.classList.add( 'plyr__control--pressed' );\n                    \n                }\n                \n            } );\n            \n            // toglle mute/unmute state\n            muteUnmuteBtn.addEventListener( 'click', function( evt ) {\n                \n                if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                    evt.target.classList.remove( 'plyr__control--pressed' );\n                    \n                } else {\n                    \n                    evt.target.classList.add( 'plyr__control--pressed' );\n                    \n                }\n                \n            } );\n                \n        } ); // end player ready event\n        \n    } // end _setupAudioPlayer\n    \n    setProgram() {\n        \n        let self = this;\n        \n        if ( self.manifest.ap_custom_themes ) {\n    \n            self.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                \n                return obj.name === self.reference.names[3];\n                \n            } );\n            \n            if ( self.program === undefined ) {\n                \n                self.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                    \n                    return obj.name === self.manifest.ap_logo_default;\n                    \n                } );\n                \n            }\n            \n        }\n        \n        let decorationBar = self._selector( '.program-theme' );\n    \n        self.program.colors.forEach( function( hex ) {\n                        \n            let span = document.createElement( 'span' );\n            span.style.backgroundColor = hex;\n            decorationBar.appendChild( span );\n            \n        } );\n        \n    }\n    \n    hasCoreFeaturesSupport() {\n    \n        if ( !Modernizr.audio && Modernizr.json && Modernizr.svg\n             && Modernizr.csscalc && Modernizr.flexbox ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    hasAppearanceIusses() {\n    \n        if ( !Modernizr.canvas ) {\n            return true;\n        }\n        \n        if ( !Modernizr.cssanimations ) {\n            return true;\n        }\n        \n        if ( !Modernizr.bgsizecover ) {\n            return true\n        }\n        \n        if ( !Modernizr.objectfit ) {\n            return true\n        }\n        \n        return false;\n        \n    }\n    \n    showError( iconStr, titleStr, bodyStr ) {\n    \n        let splash = this._selector( this.el.splash );\n        let main = this._selector( this.el.main );\n        let error = this._selector( this.el.error );\n        let icon = this._selector( this.el.errorIcon );\n        let title = this._selector( this.el.errorTitle );\n        let body = this._selector( this.el.errorBody );\n        \n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = false;\n        \n        icon.innerHTML = iconStr;\n        title.innerHTML = titleStr;\n        body.innerHTML = bodyStr;\n        \n        splash.style.display = 'none';\n        main.style.display = 'none';\n        \n        error.style.display = 'flex';\n        error.setAttributeNode( ariaHidden );\n        \n        this._fadeIn( error );\n        \n    }\n    \n    showWarning( str ) {\n    \n        let self = this;\n        let warning = self._selector( self.el.warning );\n        let hideTime = 6000;\n        \n        warning.innerHTML = str;\n        warning.style.display = 'block';\n        \n        self._fadeIn( warning );\n        \n        window.setTimeout( function() {\n            \n            self._fadeOut( warning, function() {\n                \n                warning.innerHTML = '';\n                warning.style.display = 'none';\n                \n            } );\n            \n        }, hideTime );\n        \n    }\n    \n    hideSplash() {\n    \n        let splash = this._selector( this.el.splash );\n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = true;\n        \n        splash.classList.add( 'hide-splash' );\n        splash.setAttributeNode( ariaHidden );\n        \n    }\n    \n    showProfile() {\n        \n        let self = this;\n        let authorProfile = this._selector( this.el.profileDisplay );\n        let closeBtn = this._selector( this.el.closeProfileBtn );\n        \n        authorProfile.style.display = 'block';\n        this._fadeIn( authorProfile );\n        \n        closeBtn.addEventListener( 'click', function() {\n            self.closeProfile();\n        }, {once: true} );\n\n    }\n    \n    closeProfile() {\n        \n        let authorProfile = this._selector( this.el.profileDisplay );\n        \n        this._fadeOut( authorProfile, function() {\n            \n            authorProfile.style.display = '';\n            \n        } );\n\n    }\n    \n    _setShowProfileListener() {\n        \n        let self = this;\n        let showProfileBtn = this._selector( this.el.showProfileBtn );\n        \n        showProfileBtn.addEventListener( 'click', function() {\n            \n            self.showProfile();\n            \n        } );\n        \n    }\n    \n    _expandTracksToggle() {\n        \n        let self = this;\n        let expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        expandTracksBtn.addEventListener( 'click', function() {\n            \n            let trackList = self._selector( self.el.trackList );\n            let minDisplay = self._selector( self.el.miniDisplay );\n            \n            if ( trackList.style.display == 'none' || trackList.style.display == '' ) {\n                \n                trackList.style.display = 'block';\n                minDisplay.style.display = 'none';\n                \n                self._hideCCSpectrum();\n                \n                self._slideDown( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.add( 'rotate' );\n                    \n                } );\n                \n            } else {\n                \n                trackList.style.display = 'none';\n                minDisplay.style.display = 'flex';\n                \n                self._slideUp( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.remove( 'rotate' );\n                    self._CCSpectrumDisplays();\n                    \n                } );\n                \n            }\n            \n        } );\n        \n    }\n    \n    toggleCC() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        ccToggle.classList.add( 'disabled' );\n        spectrumToggle.classList.remove( 'disabled' );\n        \n        captionDisplay.classList.add( 'active' );\n        spectrumDisplay.classList.remove( 'active' );\n        \n    }\n    \n    toggleSpectrum() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        spectrumToggle.classList.add( 'disabled' );\n        ccToggle.classList.remove( 'disabled' );\n        \n        spectrumDisplay.classList.add( 'active' );\n        captionDisplay.classList.remove( 'active' );\n        \n    }\n    \n    _CCSpectrumDisplays() {\n        \n        let self = this;\n        let toggles = this._selector( this.el.bodyControls );\n        let displays = this._selector( this.el.ccSpecDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        if ( toggles.style.display === 'none' ) {\n            \n            toggles.style.display = '';\n            displays.style.display = '';\n            \n        } else {\n\n            self.toggleCC();\n            \n        }\n        \n        ccToggle.addEventListener( 'click', function() {\n            self.toggleCC();\n        } );\n        \n        spectrumToggle.addEventListener( 'click', function() {\n            self.toggleSpectrum();\n        } );\n        \n    }\n    \n    _hideCCSpectrum() {\n        \n        let displays = this._selector( this.el.ccSpecDisplay );\n        let toggles = this._selector( this.el.bodyControls );\n        \n        toggles.style.display = 'none';\n        displays.style.display = 'none';\n        \n    }\n    \n    /*** HELPER METHODS ***/\n    \n    _selector( str ) {\n        return document.querySelector( str );\n    }\n    \n    /*** ANIMATION METHODS ***/\n    \n    _marqueeEl( el ) {\n        \n        let self = this;\n        \n        if ( el.offsetWidth < el.scrollWidth ) {\n            \n            let runTime = 15500;\n            let startTime = 5000;\n            \n            let start = window.setInterval( function() {\n                \n                el.parentNode.classList.add( 'marquee' );\n                \n                el.style.width = el.scrollWidth + 'px';\n                \n                window.clearInterval( start );\n                \n                let stop = window.setTimeout( function() {\n                    \n                    el.style.width = 'initial';\n                    \n                    self._fadeIn( el );\n                    \n                    el.parentNode.classList.remove( 'marquee' );\n                    window.clearTimeout( stop );\n                    self._marqueeEl( el );\n                    \n                }, runTime );\n                \n            }, startTime );\n            \n        }\n        \n    }\n    \n    _fadeIn( el, callback ) {\n        \n        el.classList.remove( 'fadeOut' );\n        el.classList.add( 'fadeIn' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeOut( el, callback ) {\n\n        el.classList.remove( 'fadeIn' );\n        el.classList.add( 'fadeOut' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.classList.remove( 'fadeIn' );\n        evt.target.classList.remove( 'fadeOut' );\n        evt.target.removeEventListener( evt.target.params._event, this._fadeCallback );\n        \n    }\n    \n    _slideDown( el, callback ) {\n        \n        el.classList.add( 'slideDown' );\n        el.classList.remove( 'slideUp' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideUp( el, callback ) {\n        \n        el.classList.add( 'slideUp' );\n        el.classList.remove( 'slideDown' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.removeEventListener( evt.target.params._event, this._slideCallback );\n        \n    } \n    \n    _whichAnimationEvent() {\n        \n        let ani;\n        let el = document.createElement( 'fakeelement' );\n        let animations = {\n            'animation': 'animationend',\n            'OAnimation': 'oAnimationEnd',\n            'MozAnimation': 'animationend',\n            'WebkitAnimation': 'webkitAnimationEnd'\n        }\n        \n        for ( ani in animations ) {\n            \n            if ( el.style[ani] !== undefined ) {\n                \n                return animations[ani];\n                \n            }\n            \n        }\n        \n    }\n    \n} // end APlayer class\n\nlet AP = null;\n\n/**** ON DOM READY ****/\n( function ready( fn ) {\n    \n    if ( document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading' ) {\n        \n        fn();\n        \n    } else {\n        \n        document.addEventListener( 'DOMContentLoaded', fn );\n        \n    }\n    \n} )( function() {\n    \n    AP = new APlayer();\n    AP.go();\n    \n} );\n"]}