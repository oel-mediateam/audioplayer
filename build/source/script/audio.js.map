{"version":3,"sources":["../../../source/script/audio-dev.js"],"names":["APlayer","_classCallCheck","this","el","splash","splashTitle","splashSubtitle","splashAuthor","splashLength","startBtn","resumeBtn","dwnldBtn","dwnldBtnMenu","main","mainBody","showProfileBtn","closeProfileBtn","profileDisplay","profileDisplayContent","profileDisplaySpinner","currentPic","trackTitle","trackAuthor","currentTrackNum","totalTracks","miniDisplay","upNextTrack","trackList","expandTracksBtn","ccSpecDisplay","spectrumDisplay","captionDisplay","bodyControls","ccToggle","spectrumToggle","next","previous","warning","error","errorIcon","errorTitle","errorBody","playerId","copyright","player","manifest","album","url","program","downloads","currentTrack","sameAuthor","sameAuthorLoaded","reference","names","_parseUri","window","location","href","params","URLSearchParams","search","marquee","start","stop","getManifest","self","manifestUrl","_selector","getAttribute","_requestFile","xhr","JSON","parse","response","ap_root_directory","length","setUIs","templateUrl","body","res","replace","innerHTML","getAlbum","_checkSupport","_setStartResumeListeners","_expandDownloadBtnMenu","_expandTracksToggle","_setShowProfileListener","btn","querySelector","menu","addEventListener","setAttribute","hideSplash","setTrack","xml","responseXML","xmlSettings","_xmlSelector","xmlSetup","xmlTracks","settings","accent","splashFormat","trackImgFormat","analytics","version","title","textContent","subtitle","author","authorProfile","_isEmpty","undefined","name","course","tracks","Array","prototype","forEach","call","obj","src","img","_sanitize","push","console","log","setData","_setupAudioPlayer","num","currentTitle","_loadAuthorPic","upNextTrackTitle","ready","captionUrl","_fileExists","exist","source","type","sources","kind","label","srclang","default","once","togglePlay","_stopMarquee","_marqueeEl","track","localPicUrl","centralPicUrl","ap_author_directory","authorPic","Image","appendChild","fileName","ap_download_files","file","format","link","document","createElement","style","display","dwnldFile","bgUrl","ap_splash_directory","splashBg","head","bgImg","backgroundImage","accentUrl","accentStyle","trackListDisplay","indx","li","a","numSpan","classList","add","titleWrprSpan","titleSpan","date","Date","year","getFullYear","ap_copyright","_setProgram","plyrControlsUrl","controls","Plyr","hideControls","autoplay","volume","blankVideo","clickToPlay","fullscreen","enabled","fallback","iosNative","on","event","detail","plyr","_CCSpectrumDisplays","playpauseBtn","muteUnmuteBtn","loopBtn","playbackRateBtn","nextBtn","prevBtn","i","options","Number","value","speed","selectedIndex","remove","loop","contains","restart","evt","target","ap_custom_themes","find","ap_logo_default","decorationBar","colors","hex","span","backgroundColor","hasCoreFeaturesSupport","showError","hasAppearanceIusses","showWarning","Modernizr","audio","json","svg","csscalc","flexbox","canvas","cssanimations","bgsizecover","objectfit","iconStr","titleStr","bodyStr","icon","ariaHidden","createAttribute","setAttributeNode","_fadeIn","str","hideTime","setTimeout","_fadeOut","authorProfileDisplay","closeBtn","index","currentAuthor","currentProfile","profileUrl","that","spinner","send","callback_name","callbackName","on_success","onSuccess","on_timeout","onTimeout","timeout","timeout_trigger","data","clearTimeout","script","async","getElementsByTagName","_setProfile","profile","closeProfile","bio","authorProfileDisplayContent","showProfile","minDisplay","_hideCCSpectrum","_slideDown","parentNode","setProperty","querySelectorAll","_slideUp","toggleCaptions","playing","toggles","displays","toggleCC","toggleSpectrum","all","toLowerCase","trim","callback","request","XMLHttpRequest","open","onload","status","abort","onerror","found","arr","splice","test","pop","parts","split","lastIndexOf","_cleanArray","offsetWidth","scrollWidth","runTime","startTime","setInterval","width","clearInterval","animationEvt","_whichAnimationEvent","_event","_callback","_fadeCallback","removeEventListener","_slideCallback","ani","animations","animation","OAnimation","MozAnimation","WebkitAnimation","fn","attachEvent","readyState"],"mappings":"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","file":"audio.js","sourcesContent":["/*\n * Audio Player\n *\n * @author: Ethan Lin\n * @url: https://github.com/oel-mediateam/audioplayer\n * @version: 2.0.0\n *\n * @license: The MIT License (MIT)\n * Copyright (c) 2014 - 2018 Media Serivces\n *\n */\n\n'use strict';\n\nclass APlayer {\n    \n    constructor() {\n        \n        this.el = {\n            splash: '#ap-splash',\n            splashTitle: '#ap-splash .cover-info .title',\n            splashSubtitle: '#ap-splash .cover-info .subtitle',\n            splashAuthor: '#ap-splash .cover-info .author',\n            splashLength: '#ap-splash .cover-info .length',\n            startBtn: '#ap-start-btn',\n            resumeBtn: '#ap-resume-btn',\n            dwnldBtn: '#ap-dwnld-btn',\n            dwnldBtnMenu: '#ap-dwnld-btn .dropdown-content',\n            main: '#ap-main',\n            mainBody: '#ap-main .body',\n            showProfileBtn: '#show-profile',\n            closeProfileBtn: '#author-close-btn',\n            profileDisplay: '#author-overlay',\n            profileDisplayContent: '#author-overlay .content',\n            profileDisplaySpinner: '#author-overlay .spinner',\n            currentPic: '.head .track-img button',\n            trackTitle: '.track-info .title-wrapper .title',\n            trackAuthor: '.track-info .author',\n            currentTrackNum: '.track-info .meta .current',\n            totalTracks: '.track-info .meta .total',\n            miniDisplay: '.track-list .minimized-display',\n            upNextTrack: '.track-list .minimized-display .ap_up_next_title',\n            trackList: '.track-list .tracks',\n            expandTracksBtn: '.track-list .expand-btn',\n            ccSpecDisplay: '.body .cc-spec-display',\n            spectrumDisplay: '.body .cc-spec-display .spectrum',\n            captionDisplay: '.body .cc-spec-display .caption',\n            bodyControls: '.body .controls',\n            ccToggle: '#cc-toggle',\n            spectrumToggle: '#spectrum-toggle',\n            next: '#ap-next',\n            previous: '#ap-previous',\n            warning: '.body .warning-msg',\n            error: '#ap-error',\n            errorIcon: '#ap-error .icon',\n            errorTitle: '#ap-error .title',\n            errorBody: '#ap-error .body',\n            playerId: '#player',\n            copyright: '.copyright p',\n            player: null\n        };\n        \n        this.manifest ={};\n        this.album = {\n            url: 'assets/album.xml',\n            program: {},\n            downloads: [],\n            currentTrack: 0,\n            sameAuthor: true,\n            sameAuthorLoaded: false\n        };\n        this.player = null;\n        this.reference = {\n            names: this._parseUri( window.location.href ),\n            params: new URLSearchParams( window.location.search )\n        };\n        this.marquee ={\n            start: null,\n            stop: null\n        };\n        \n        this.getManifest();\n        \n    }\n    \n    getManifest() {\n        \n        let self = this;\n        let manifestUrl = self._selector( '#ap-manifest' ).getAttribute( 'href' );\n        \n        self._requestFile( manifestUrl, function( xhr ) {\n            \n            self.manifest = JSON.parse( xhr.response );\n            \n            if ( self.manifest.ap_root_directory.length === 0 ) {\n        \n                self.manifest.ap_root_directory = 'source/';\n                \n            }\n            \n            self.setUIs();\n            \n        } );\n        \n    }\n    \n    setUIs() {\n        \n        let self = this;\n        let templateUrl = self.manifest.ap_root_directory + 'script/templates/apui.tpl';\n        \n        self._requestFile( templateUrl, function( xhr ) {\n            \n            let body = self._selector( 'body' );\n            const res = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n            \n            body.innerHTML += res;\n            \n            self.getAlbum();\n            \n            self._checkSupport();\n            self._setStartResumeListeners();\n            self._expandDownloadBtnMenu();\n            self._expandTracksToggle();\n            self._setShowProfileListener();\n            \n        } );\n        \n    }\n    \n    _expandDownloadBtnMenu() {\n        \n        let self = this;\n        \n        let dwnldBtn = self._selector( self.el.dwnldBtn );\n        let btn = dwnldBtn.querySelector( 'button' );\n        let menu = self._selector( self.el.dwnldBtnMenu );\n        \n        dwnldBtn.addEventListener( 'mouseenter', function() {\n            \n            btn.setAttribute( 'aria-expanded', true );\n            menu.setAttribute( 'aria-expanded', true );\n            \n        } );\n        \n        dwnldBtn.addEventListener( 'mouseleave', function() {\n            \n            btn.setAttribute( 'aria-expanded', false );\n            menu.setAttribute( 'aria-expanded', false );\n            \n        } );\n        \n    }\n    \n    _setStartResumeListeners() {\n        \n        let self = this;\n        \n        let startBtn = self._selector( self.el.startBtn );\n        let resumeBtn = self._selector( self.el.resumeBtn );\n        \n        startBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            self.setTrack( self.album.currentTrack );\n            \n        } );\n        \n        resumeBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            self.setTrack( self.album.currentTrack );\n            \n        } );\n        \n    }\n    \n    getAlbum() {\n        \n        let self = this;\n        \n        self._requestFile( self.album.url, function( xhr ) {\n            \n            const xml = xhr.responseXML;\n            const xmlSettings = self._xmlSelector( xml, 'album' );\n            const xmlSetup = self._xmlSelector( xml, 'setup' );\n            const xmlTracks = self._xmlSelector( xml, 'track', true );\n            \n            // settings\n            self.album.settings = {};\n            self.album.settings.accent = xmlSettings.getAttribute( 'accent' );\n            self.album.settings.splashFormat = '.' + xmlSettings.getAttribute( 'splashImgFormat' );\n            self.album.settings.trackImgFormat = '.' + xmlSettings.getAttribute( 'trackImgFormat' );\n            self.album.settings.analytics = xmlSettings.getAttribute( 'analytics' );\n            self.album.settings.version = xmlSettings.getAttribute( 'xmlVersion' );\n            \n            // setup\n            self.album.title = self._xmlSelector( xmlSetup, 'title' ).textContent;\n            self.album.subtitle = self._xmlSelector( xmlSetup, 'subtitle' ).textContent;\n            self.album.author = self._xmlSelector( xmlSetup, 'author' ).getAttribute( 'name' );\n            self.album.authorProfile = self._xmlSelector( xmlSetup, 'author' ).textContent;\n            self.album.length = self._xmlSelector( xmlSetup, 'length' ).textContent;\n            \n            // set program\n            if ( self._isEmpty( xmlSetup.getAttribute( 'program' ) ) ) {\n                \n                if ( self.reference.names[3] !== undefined ) {\n                    \n                    self.album.program.name = self.reference.names[3];\n                    \n                }\n                \n            } else {\n                \n                self.album.program.name = xmlSetup.getAttribute( 'program' );\n                \n            }\n            \n            // set course\n            if ( !self._isEmpty( xmlSetup.getAttribute( 'course' ) ) ) {\n                \n                self.album.program.course = xmlSetup.getAttribute( 'course' );\n                \n            }\n            \n            // track(s)\n            self.album.tracks = [];\n            \n            Array.prototype.forEach.call( xmlTracks, function( el) {\n                \n                let obj = {};\n            \n                obj.src = el.getAttribute( 'src' );\n                obj.title = el.querySelector( 'title' ).innerHTML;\n                obj.author = el.querySelector( 'author' ).getAttribute( 'name' );\n                obj.authorProfile = el.querySelector( 'author' ).innerHTML;\n                \n                if ( self._isEmpty( obj.author ) ) {\n                    \n                    obj.author = self.album.author;\n                    \n                }\n                \n                if ( obj.author !== self.album.author ) {\n                    self.album.sameAuthor = false;\n                }\n                \n                if ( self._isEmpty( obj.author ) ) {\n                    \n                    obj.img = self._sanitize( self.album.author ) + self.album.settings.trackImgFormat;\n                    \n                } else {\n                    \n                    obj.img = self._sanitize( obj.author ) + self.album.settings.trackImgFormat;\n                    \n                }\n\n                self.album.tracks.push( obj );\n                \n            } );\n            \n            console.log( self.album );\n            \n            self.setData();\n            self._setupAudioPlayer();\n            \n        } );\n        \n    }\n    \n    setTrack( num ) {\n        \n        // hold the class\n        let self = this;\n        \n        \n        // display title\n        let currentTitle = self._selector( self.el.trackTitle );\n            \n        currentTitle.innerHTML = self.album.tracks[num].title;\n        \n        // display author\n        let currentAuthor = self._selector( self.el.trackAuthor );\n        \n        currentAuthor.innerHTML = self.album.tracks[num].author;\n        \n        // load author picture if the track author is different\n        if ( !self.album.sameAuthor ) {\n\n            self._loadAuthorPic( self.album.tracks[num] );\n            \n        }\n        \n        // load author picture once if same author\n        if ( self.album.sameAuthor && self.album.sameAuthorLoaded === false ) {\n                \n            self._loadAuthorPic( self.album.tracks[num] );\n            self.album.sameAuthorLoaded = true;\n            \n        }\n        \n        // display and get current track number\n        if ( self.album.tracks.length > 1 ) {\n            \n            let currentTrack = self._selector( self.el.currentTrackNum );\n            currentTrack.innerHTML = num + 1;\n            \n            let totalTracks = self._selector( self.el.totalTracks );\n            totalTracks.innerHTML = self.album.tracks.length;\n            \n        }\n        \n        // display next track title\n        let upNextTrackTitle = self._selector( self.el.upNextTrack );\n        \n        if ( self.album.tracks.length > 1 && num < self.album.tracks.length - 1 ) {\n            \n            upNextTrackTitle.innerHTML = self.album.tracks[num + 1].title;\n            \n        }\n        \n        // play the audio if the player is ready after setting source\n        if ( self.player.ready ) {\n            \n            const captionUrl = 'assets/audio/' + self.album.tracks[num].src + '.vtt';\n            \n            self._fileExists( captionUrl, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    self.player.source = {\n                \n                        type: 'video',\n                        title: self.album.tracks[num].title,\n                        sources: [\n                            \n                            {\n                                \n                                src: 'assets/audio/' + self.album.tracks[num].src + '.mp3',\n                                type: 'audio/mp3'\n                                \n                            }\n                            \n                        ],\n                        tracks: [\n                            \n                            {\n                                kind: 'captions',\n                                label: 'English',\n                                srclang: 'en',\n                                src: 'assets/audio/' + self.album.tracks[num].src + '.vtt',\n                                default: true\n                            }\n                            \n                        ]\n                        \n                    };\n                    \n                } else {\n                    \n                    self.player.source = {\n                \n                        type: 'video',\n                        title: self.album.tracks[num].title,\n                        sources: [\n                            \n                            {\n                                \n                                src: 'assets/audio/' + self.album.tracks[num].src + '.mp3',\n                                type: 'audio/mp3'\n                                \n                            }\n                            \n                        ]\n                        \n                    };\n                    \n                }\n                \n            } );\n            \n            self.player.once( 'canplay', function() {\n                        \n                self.player.togglePlay();\n                \n            } );\n            \n        }\n        \n        // scroll the track title is applicable\n        self._stopMarquee( currentTitle );\n        self._marqueeEl( currentTitle );\n        \n    }\n    \n    _loadAuthorPic( track ) {\n        \n        let self = this;\n        let currentPic = self._selector( self.el.currentPic );\n        let localPicUrl = 'assets/images/' + track.img;\n        let centralPicUrl = self.manifest.ap_author_directory + self._sanitize( track.author ) + self.album.settings.trackImgFormat;\n        let authorPic = new Image();\n        \n        authorPic.src = self.manifest.ap_root_directory + 'images/pic.png';\n        \n        self._fileExists( localPicUrl, function( exist ) {\n            \n            if ( exist ) {\n                \n                authorPic.src = localPicUrl;\n                \n            } else {\n                \n                self._fileExists( centralPicUrl, function( exist ) {\n    \n                    if ( exist ) {\n                        \n                        authorPic.src = centralPicUrl;\n                        \n                    }\n                    \n                } );\n                \n            }\n            \n        } );\n        \n        currentPic.innerHTML = '';\n        currentPic.appendChild( authorPic );\n        \n    }\n    \n    setData() {\n        \n        let self = this;\n        \n        // DOM head elements\n        let pageTitle = this._selector( 'title' );\n        \n        pageTitle.innerHTML = this.album.title;\n        \n        // splash screen\n        let title = this._selector( this.el.splashTitle );\n        let subtitle = this._selector( this.el.splashSubtitle );\n        let author = this._selector( this.el.splashAuthor );\n        let length = this._selector( this.el.splashLength );\n        \n        title.innerHTML = this.album.title;\n        subtitle.innerHTML = this.album.subtitle;\n        author.innerHTML = this.album.author;\n        length.innerHTML = this.album.length;\n        \n        // splash download menu list\n        let fileName = self.reference.names;\n        \n        if ( fileName.length === 0 ) {\n            \n            fileName = 'album';\n            \n        } else {\n            \n            fileName = self.reference.names[self.reference.names.length - 1];\n            \n        }\n        \n        Array.prototype.forEach.call( this.manifest.ap_download_files, function( el ) {\n            \n            let file = fileName + '.' + el.format;\n            \n            self._fileExists( file, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let link = document.createElement( 'a' );\n            \n                    link.href = file;\n                    link.setAttribute( 'download', file );\n                    link.setAttribute( 'role', 'menuitem' );\n                    link.innerHTML = el.label;\n                    \n                    let dwnldMenu = self._selector( self.el.dwnldBtnMenu );\n                    dwnldMenu.appendChild( link );\n                    \n                    let dwnldBtn = self._selector( self.el.dwnldBtn );\n                    dwnldBtn.setAttribute( 'aria-hidden', false );\n                    dwnldBtn.style.display = 'block';\n                    \n                    let dwnldFile = {\n                        name: el.label,\n                        url: file\n                    };\n                    \n                    self.album.downloads.push( dwnldFile );\n                    \n                }\n                \n            } );\n            \n        } );\n        \n        // splash background image\n        if ( !this._isEmpty( this.album.program.name ) ) {\n            \n            let bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/default' + this.album.settings.splashFormat;\n            \n            if ( !this._isEmpty( self.album.program.course ) ) {\n                \n                bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/' + this.album.program.course + this.album.settings.splashFormat;\n                \n            }\n            \n            this._fileExists( bgUrl, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let splashBg = self._selector( self.el.splash );\n                    let head = self._selector( 'head' );\n                    let bgImg = 'url(\"' + bgUrl + '\")';\n                    \n                    splashBg.style.backgroundImage = bgImg;\n            \n                    // change the bg in the ap-main:before as well\n                    let style = document.createElement( 'style' );\n                    \n                    style.setAttribute( 'type', 'text/css' );\n                    style.innerHTML = '#ap-main:before{background-image: ' + bgImg + ' !important;}';\n                    \n                    head.appendChild( style );\n                    \n                }\n                \n            } );\n            \n        }\n        \n        // load accent\n        if ( !this._isEmpty( self.album.settings.accent ) ) {\n            \n            let accentUrl = this.manifest.ap_root_directory + 'script/templates/accent_css.tpl';\n            this._requestFile( accentUrl, function( xhr ) {\n                \n                const accentStyle = xhr.response.replace( /\\{([accent)]+)\\}/ig, self.album.settings.accent );\n                \n                let head = self._selector( 'head' );\n                let style = document.createElement( 'style' );\n                \n                style.setAttribute( 'type', 'text/css' );\n                style.innerHTML = accentStyle;\n                \n                head.appendChild( style );\n                \n            } );\n            \n        }\n        \n        // set tracks\n        if ( this.album.tracks.length > 1 ) {\n            \n            let trackListDisplay = this._selector( this.el.trackList );\n            \n            Array.prototype.forEach.call( this.album.tracks, function( el, indx ) {\n                \n                let li = document.createElement( 'li' );\n                let a = document.createElement( 'a' );\n                \n                a.href = 'javascript:void(0);';\n                \n                let numSpan = document.createElement( 'span' );\n                \n                numSpan.classList.add( 'track-num' );\n                numSpan.innerHTML = indx + 1 + '.';\n                \n                let titleWrprSpan = document.createElement( 'span' );\n                \n                titleWrprSpan.classList.add( 'track-title-wrapper' );\n                \n                let titleSpan = document.createElement( 'span' );\n                \n                titleSpan.classList.add( 'track-title' );\n                titleSpan.setAttribute( 'title', el.title );\n                titleSpan.innerHTML = el.title;\n                \n                titleWrprSpan.appendChild( titleSpan );\n                \n                if ( !self.album.sameAuthor ) {\n                    \n                    let img = document.createElement( 'img' );\n                    let localPicUrl = 'assets/images/' + self.album.tracks[indx].img;\n                    let centralPicUrl = self.manifest.ap_author_directory + self._sanitize( self.album.tracks[indx].author ) + self.album.settings.trackImgFormat;\n                    \n                    img.classList.add( 'track-img' );\n                    img.src = self.manifest.ap_root_directory + 'images/pic.png';\n        \n                    self._fileExists( localPicUrl, function( exist ) {\n                        \n                        if ( exist ) {\n                            \n                            img.src = localPicUrl;\n                            \n                        } else {\n                            \n                            self._fileExists( centralPicUrl, function( exist ) {\n                \n                                if ( exist ) {\n                                    \n                                    img.src = centralPicUrl;\n                                    \n                                }\n                                \n                            } );\n                            \n                        }\n                        \n                    } );\n                    \n                    a.appendChild( img );\n                    \n                }\n                \n                a.appendChild( numSpan );\n                a.appendChild( titleWrprSpan );\n                \n                li.appendChild( a );\n                \n                trackListDisplay.appendChild( li );\n                \n            } );\n            \n        } else {\n            \n            this._selector( this.el.main ).classList.add( 'single' );\n            \n        }\n    \n        // copyright\n        let copyright = this._selector( this.el.copyright );\n        let date = new Date();\n        let year = date.getFullYear();\n        \n        copyright.innerHTML += '&copy; ' + year + '. ' + this.manifest.ap_copyright;\n        \n        // program theme\n        this._setProgram();\n        \n    }\n    \n    _setupAudioPlayer() {\n        \n        let self = this;\n        \n        let plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/single_plyr_controls.tpl';\n        \n        if ( self.album.tracks.length > 1 ) {\n            \n            plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/full_plyr_controls.tpl';\n            \n        }\n        \n        self._requestFile( plyrControlsUrl, function( xhr ) {\n            \n            const controls = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n                \n            self.el.player = new Plyr( self.el.playerId, {\n        \n                controls: controls,\n                hideControls: false,\n                autoplay: false,\n                volume: 0.8,\n                blankVideo: self.manifest.ap_root_directory + 'images/blank.m4v',\n                clickToPlay: false,\n                fullscreen: {\n                    enabled: false,\n                    fallback: false,\n                    iosNative: false\n                }\n                            \n            } );\n            \n            self.el.player.on( 'ready', event => {\n                \n                self.player = event.detail.plyr;\n                \n                self._CCSpectrumDisplays();\n                \n                const playpauseBtn = self._selector( '#ap-playpause' );\n                const muteUnmuteBtn = self._selector( '#ap-muteunmute' );\n                const loopBtn = self._selector( '#ap-loop' );\n                const playbackRateBtn = self._selector( '#ap-playbackRate' );\n                const nextBtn = self._selector( self.el.next );\n                const prevBtn = self._selector( self.el.previous );\n                const totalTracks = self.album.tracks.length - 1;\n                \n                // check playback rate and update playback rate select element\n                for ( var i = 0; i < playbackRateBtn.options.length; i++ ) {\n    \n                    if ( Number( playbackRateBtn.options[i].value ) === self.player.speed ) {\n                        \n                        playbackRateBtn.selectedIndex = i;\n                        break;\n                        \n                    }\n                    \n                }\n                \n                if ( self.album.currentTrack <= 0 ) {\n                    \n                    prevBtn.setAttribute( 'disabled', true );\n                    prevBtn.classList.add( 'disabled' );\n                }\n                \n                if ( self.album.currentTrack >= totalTracks ) {\n                            \n                    nextBtn.setAttribute( 'disabled', true );\n                    nextBtn.classList.add( 'disabled' );\n                    \n                }\n                \n                nextBtn.addEventListener( 'click', function() {\n                    \n                    \n                    if ( self.album.currentTrack < totalTracks ) {\n                        \n                        self.album.currentTrack++;\n                        self.setTrack( self.album.currentTrack );\n                        \n                    }\n                    \n                } );\n                \n                prevBtn.addEventListener( 'click', function() {\n                    \n                    if ( self.album.currentTrack > 0 ) {\n                        \n                        self.album.currentTrack--;\n                        self.setTrack( self.album.currentTrack );\n                        \n                    }\n                    \n                } );\n                \n                self.player.on( 'playing', function() {\n                    \n                    playpauseBtn.classList.add( 'plyr__control--pressed' );\n                    \n                } );\n                \n                self.player.on( 'pause', function() {\n                    \n                    playpauseBtn.classList.remove( 'plyr__control--pressed' );\n                    \n                } );\n                \n                // on playback end\n                self.player.on( 'ended', function() {\n                    \n                    if ( self.player.loop === false ) {\n                        \n                        if ( playpauseBtn.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                            playpauseBtn.classList.add( 'plyr__control--pressed' );\n                            \n                        }\n                        \n                        self.player.restart();\n                        \n                    }\n                    \n                } );\n                \n                // toogle loop button state\n                loopBtn.addEventListener( 'click', function() {\n    \n                    if ( self.player.loop === false ) {\n                        \n                        self.player.loop = true;\n                        loopBtn.classList.add( 'active' );\n                        \n                    } else {\n                        \n                        self.player.loop = false;\n                        loopBtn.classList.remove( 'active' );\n                        \n                    }\n                    \n                } );\n                \n                // change playback rate\n                playbackRateBtn.addEventListener( 'change', function( evt ) {\n                    \n                    self.player.speed = Number( evt.target.options[evt.target.selectedIndex].value );\n                    \n                } );\n                \n                // toglle mute/unmute state\n                muteUnmuteBtn.addEventListener( 'click', function( evt ) {\n                    \n                    if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                        \n                        evt.target.classList.remove( 'plyr__control--pressed' );\n                        \n                    } else {\n                        \n                        evt.target.classList.add( 'plyr__control--pressed' );\n                        \n                    }\n                    \n                } );\n                    \n            } ); // end player ready event\n            \n        } );\n        \n    } // end _setupAudioPlayer\n    \n    _setProgram() {\n        \n        let self = this;\n        \n        if ( self.manifest.ap_custom_themes ) {\n            \n            self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                \n                return obj.name === self.album.program.name;\n                \n            } );\n            \n            if ( self.album.program === undefined ) {\n                \n                self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                    \n                    return obj.name === self.manifest.ap_logo_default;\n                    \n                } );\n                \n            }\n            \n        }\n        \n        let decorationBar = self._selector( '.program-theme' );\n    \n        self.album.program.colors.forEach( function( hex ) {\n                        \n            let span = document.createElement( 'span' );\n            span.style.backgroundColor = hex;\n            decorationBar.appendChild( span );\n            \n        } );\n        \n    }\n    \n    _checkSupport() {\n        \n        if ( this.hasCoreFeaturesSupport() ) {\n        \n            this.showError( '🙈', '', 'Your web browser does not support core audio player features.<br><a href=\"http://outdatedbrowser.com/en\" target=\"_blank\">Please update your web browser.</a>' );\n            return;\n            \n        }\n        \n        if ( this.hasAppearanceIusses() ) {\n        \n            this.showWarning( 'For better viewing, try a different web browser.' );\n            \n        }\n        \n    }\n    \n    hasCoreFeaturesSupport() {\n    \n        if ( !Modernizr.audio && Modernizr.json && Modernizr.svg\n             && Modernizr.csscalc && Modernizr.flexbox ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    hasAppearanceIusses() {\n    \n        if ( !Modernizr.canvas ) {\n            return true;\n        }\n        \n        if ( !Modernizr.cssanimations ) {\n            return true;\n        }\n        \n        if ( !Modernizr.bgsizecover ) {\n            return true\n        }\n        \n        if ( !Modernizr.objectfit ) {\n            return true\n        }\n        \n        return false;\n        \n    }\n    \n    showError( iconStr, titleStr, bodyStr ) {\n    \n        let splash = this._selector( this.el.splash );\n        let main = this._selector( this.el.main );\n        let error = this._selector( this.el.error );\n        let icon = this._selector( this.el.errorIcon );\n        let title = this._selector( this.el.errorTitle );\n        let body = this._selector( this.el.errorBody );\n        \n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = false;\n        \n        icon.innerHTML = iconStr;\n        title.innerHTML = titleStr;\n        body.innerHTML = bodyStr;\n        \n        splash.style.display = 'none';\n        main.style.display = 'none';\n        \n        error.style.display = 'flex';\n        error.setAttributeNode( ariaHidden );\n        \n        this._fadeIn( error );\n        \n    }\n    \n    showWarning( str ) {\n    \n        let self = this;\n        let warning = self._selector( self.el.warning );\n        let hideTime = 6000;\n        \n        warning.innerHTML = str;\n        warning.style.display = 'block';\n        \n        self._fadeIn( warning );\n        \n        window.setTimeout( function() {\n            \n            self._fadeOut( warning, function() {\n                \n                warning.innerHTML = '';\n                warning.style.display = 'none';\n                \n            } );\n            \n        }, hideTime );\n        \n    }\n    \n    hideSplash() {\n    \n        let splash = this._selector( this.el.splash );\n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = true;\n        \n        splash.classList.add( 'hide-splash' );\n        splash.setAttributeNode( ariaHidden );\n        \n    }\n    \n    showProfile() {\n        \n        let self = this;\n        let authorProfileDisplay = this._selector( this.el.profileDisplay );\n        let closeBtn = this._selector( this.el.closeProfileBtn );\n        let index = Number( self._selector( self.el.currentTrackNum ).innerHTML ) - 1;\n        \n        if ( self.album.tracks.length <= 1 ) {\n            index = 0;\n        }\n        \n        let currentAuthor = self.album.tracks[index].author;\n        let currentProfile = self.album.authorProfile;\n        \n        if ( !self._isEmpty( self.album.tracks[index].authorProfile) ) {\n            \n            currentProfile = self.album.tracks[index].authorProfile;\n            \n        }\n        \n        if ( self._isEmpty( currentProfile ) ) {\n            \n            let profileUrl = self.manifest.ap_author_directory + self._sanitize( currentAuthor ) + '.json?callback=author';\n        \n            let $jsonp = ( function() {\n                \n                let that = {};\n                let spinner = self._selector( self.el.profileDisplaySpinner );\n                \n                that.send = function( src, options ) {\n            \n                    spinner.classList.add( 'spin' );\n                    \n                    let callback_name = options.callbackName || 'callback',\n                        on_success = options.onSuccess || function() {},\n                        on_timeout = options.onTimeout || function() {},\n                        timeout = options.timeout || 10; // sec\n                \n                    let timeout_trigger = window.setTimeout( function() {\n                        window[callback_name] = function() {};\n                        spinner.classList.remove( 'spin' );\n                        on_timeout();\n                    }, timeout * 1000);\n                    \n                    window[callback_name] = function( data ) {\n                        window.clearTimeout( timeout_trigger );\n                        spinner.classList.remove( 'spin' );\n                        on_success( data );\n                    }\n                    \n                    let script = document.createElement( 'script' );\n                    script.type = 'text/javascript';\n                    script.async = true;\n                    script.src = src;\n                    \n                    document.getElementsByTagName( 'head' )[0].appendChild( script );\n                \n                }\n                \n                return that;\n                \n            } )();\n            \n            $jsonp.send( profileUrl, {\n                \n                callbackName: 'author',\n                onSuccess: function( json ) {\n                    \n                    self._setProfile( json.name, json.profile );\n                },\n                onTimeout: function() {\n                    \n                    self._setProfile( currentAuthor, currentProfile );\n                    \n                },\n                timeout: 5\n                \n            } );\n            \n        } else {\n            \n            self._setProfile( currentAuthor, currentProfile );\n            \n        }\n        \n        authorProfileDisplay.style.display = 'block';\n        this._fadeIn( authorProfileDisplay );\n        \n        closeBtn.addEventListener( 'click', function() {\n            self.closeProfile();\n        }, {once: true} );\n\n    }\n    \n    _setProfile( author, bio ) {\n        \n        let authorProfileDisplayContent = this._selector( this.el.profileDisplayContent );\n        \n        let name = document.createElement( 'h4' );\n                    \n        name.innerHTML = author;\n                        \n        let profile = document.createElement( 'div' );\n        \n        profile.innerHTML = bio;\n        \n        authorProfileDisplayContent.appendChild( name );\n        authorProfileDisplayContent.appendChild( profile );\n        \n    }\n    \n    closeProfile() {\n        \n        let authorProfileDisplay = this._selector( this.el.profileDisplay );\n        let authorProfileDisplayContent = this._selector( this.el.profileDisplayContent );\n        \n        this._fadeOut( authorProfileDisplay, function() {\n            \n            authorProfileDisplay.style.display = '';\n            \n            authorProfileDisplayContent.innerHTML = '';\n            \n        } );\n\n    }\n    \n    _setShowProfileListener() {\n        \n        let self = this;\n        let showProfileBtn = this._selector( this.el.showProfileBtn );\n        \n        showProfileBtn.addEventListener( 'click', function() {\n            \n            self.showProfile();\n            \n        } );\n        \n    }\n    \n    _expandTracksToggle() {\n        \n        let self = this;\n        let expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        expandTracksBtn.addEventListener( 'click', function() {\n            \n            let trackList = self._selector( self.el.trackList );\n            let minDisplay = self._selector( self.el.miniDisplay );\n            \n            if ( trackList.style.display == 'none' || trackList.style.display == '' ) {\n                \n                trackList.style.display = 'block';\n                minDisplay.style.display = 'none';\n                \n                self._hideCCSpectrum();\n                \n                self._slideDown( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.add( 'rotate' );\n                    trackList.style.setProperty( 'overflow-y', 'auto' );\n                    \n                } );\n                \n                let tracks = document.querySelectorAll( self.el.trackList + ' .track-title-wrapper .track-title' );\n                \n            } else {\n                \n                trackList.style.display = 'none';\n                trackList.style.setProperty( 'overflow-y', 'hidden' );\n                minDisplay.style.display = 'flex';\n                \n                self._slideUp( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.remove( 'rotate' );\n                    self._CCSpectrumDisplays();\n                    \n                } );\n                \n            }\n            \n        } );\n        \n    }\n    \n    toggleCC() {\n        \n        let self = this;\n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        ccToggle.classList.add( 'disabled' );\n        spectrumToggle.classList.remove( 'disabled' );\n        \n        captionDisplay.classList.add( 'active' );\n        spectrumDisplay.classList.remove( 'active' );\n        \n        self.player.on( 'canplay', function() {\n            \n            if ( self.player.currentTrack !== -1 ) {\n                self.player.toggleCaptions( true );\n            }\n            \n        } );\n        \n        if ( self.player.playing && self.player.currentTrack !== -1 ) {\n            self.player.toggleCaptions( true );\n        }\n\n    }\n    \n    toggleSpectrum() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        spectrumToggle.classList.add( 'disabled' );\n        ccToggle.classList.remove( 'disabled' );\n        \n        spectrumDisplay.classList.add( 'active' );\n        captionDisplay.classList.remove( 'active' );\n        \n        if ( this.player !== null && this.player.currentTrack > -1 ) {\n            this.player.toggleCaptions( false );\n        }\n        \n    }\n    \n    _CCSpectrumDisplays() {\n        \n        let self = this;\n        let toggles = this._selector( this.el.bodyControls );\n        let displays = this._selector( this.el.ccSpecDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        if ( toggles.style.display === 'none' ) {\n            \n            toggles.style.display = '';\n            displays.style.display = '';\n            \n        } else {\n\n            self.toggleCC();\n            \n        }\n        \n        ccToggle.addEventListener( 'click', function() {\n            self.toggleCC();\n        } );\n        \n        spectrumToggle.addEventListener( 'click', function() {\n            self.toggleSpectrum();\n        } );\n        \n    }\n    \n    _hideCCSpectrum() {\n        \n        let displays = this._selector( this.el.ccSpecDisplay );\n        let toggles = this._selector( this.el.bodyControls );\n        \n        toggles.style.display = 'none';\n        displays.style.display = 'none';\n        \n    }\n    \n    /*** HELPER METHODS ***/\n    \n    _selector( str ) {\n        return document.querySelector( str );\n    }\n    \n    _xmlSelector( xml, str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return xml.querySelectorAll( str );\n            \n        } else {\n            \n            return xml.querySelector( str );\n            \n        }\n        \n    }\n    \n    _sanitize( str ) {\n        \n        return str.replace(/[^\\w]/gi, '').toLowerCase();\n    \n    }\n    \n    _isEmpty( str ) {\n        \n        if ( typeof str === 'string' && str.trim() === '' ) {\n            return true;\n        }\n        \n        if ( str === undefined ) {\n            return true;\n        }\n        \n        if ( str ===  null ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    _requestFile( url, callback ) {\n        \n        let self = this;\n        let body = self._selector( 'body' );\n        let request = new XMLHttpRequest();\n        \n        request.open( 'GET', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                callback( this );\n                \n            } else {\n                \n                body.innerHTML += '<div class=\"error\">Error ' + this.status + ' while loading <code>' + url + '</code></div>';\n                \n            }\n            \n            request.abort();\n            \n        };\n        \n        request.onerror = function() {\n            \n            body.innerHTML += '<div class=\"error\">Connection Error. Check your network.</div>';\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _fileExists( url, callback ) {\n        \n        let request = new XMLHttpRequest();\n        let found = false;\n        \n        request.open( 'HEAD', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                found = true;\n                \n            } else {\n                \n                found = false;\n                \n            }\n            \n            callback( found );\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _cleanArray( arr ) {\n    \n        arr.forEach( function( value, index ) {\n            \n            if ( value === '' ) {\n                arr.splice( index, 1 );\n            }\n            \n        } );\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\.\\w*/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\:/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        return arr;\n        \n    }\n    \n    _parseUri( str ) {\n        \n        let parts =  str.split( '?' );\n        let target = parts[0];\n        \n        if ( target.lastIndexOf( '/' ) !== target.length - 1 ) {\n    \t\ttarget += '/';\n    \t}\n    \t\n    \treturn this._cleanArray( target.split( '/' ) );\n        \n    }\n    \n    /*** ANIMATION METHODS ***/\n    \n    _marqueeEl( el ) {\n        \n        let self = this;\n        \n        if ( el.offsetWidth < el.scrollWidth ) {\n            \n            let runTime = 15500;\n            let startTime = 5000;\n            \n            self.marquee.start = window.setInterval( function() {\n                \n                el.parentNode.classList.remove( 'stop-marquee' );\n                el.parentNode.classList.add( 'marquee' );\n                \n                el.style.width = el.scrollWidth + 'px';\n                \n                window.clearInterval( self.marquee.start );\n                \n                self.marquee.stop = window.setTimeout( function() {\n                     \n                    el.style.width = 'initial';\n                    el.parentNode.classList.remove( 'marquee' );\n                    window.clearTimeout( self.marquee.stop );\n                    \n                    self._fadeIn( el );\n                    self._marqueeEl( el );\n                    \n                }, runTime );\n                \n            }, startTime );\n            \n        }\n        \n    }\n    \n    _stopMarquee( el ) {\n        \n        el.style.width = '';\n        el.parentNode.classList.remove( 'marquee' );\n        el.parentNode.classList.add( 'stop-marquee' );\n        \n        if ( this.marquee.stop !== null ) {\n            window.clearTimeout( this.marquee.stop );\n        }\n        \n        if ( this.marquee.start !== null ) {\n            window.clearInterval( this.marquee.start );\n        }\n        \n    }\n    \n    _fadeIn( el, callback ) {\n        \n        el.classList.remove( 'fadeOut' );\n        el.classList.add( 'fadeIn' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeOut( el, callback ) {\n\n        el.classList.remove( 'fadeIn' );\n        el.classList.add( 'fadeOut' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.classList.remove( 'fadeIn' );\n        evt.target.classList.remove( 'fadeOut' );\n        evt.target.removeEventListener( evt.target.params._event, this._fadeCallback );\n        \n    }\n    \n    _slideDown( el, callback ) {\n        \n        el.classList.add( 'slideDown' );\n        el.classList.remove( 'slideUp' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideUp( el, callback ) {\n        \n        let self = this;\n        el.classList.add( 'slideUp' );\n        el.classList.remove( 'slideDown' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, self._slideCallback );\n        \n    }\n    \n    _slideCallback( evt ) {\n        \n        let self = this;\n        \n        if ( evt.target.params !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n            evt.target.removeEventListener( evt.target.params._event, self._slideCallback );\n            \n        }\n        \n    } \n    \n    _whichAnimationEvent() {\n        \n        let ani;\n        let el = document.createElement( 'fakeelement' );\n        let animations = {\n            'animation': 'animationend',\n            'OAnimation': 'oAnimationEnd',\n            'MozAnimation': 'animationend',\n            'WebkitAnimation': 'webkitAnimationEnd'\n        }\n        \n        for ( ani in animations ) {\n            \n            if ( el.style[ani] !== undefined ) {\n                \n                return animations[ani];\n                \n            }\n            \n        }\n        \n    }\n    \n} // end APlayer class\n\n/**** ON DOM READY ****/\n( function ready( fn ) {\n    \n    if ( document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading' ) {\n        \n        fn();\n        \n    } else {\n        \n        document.addEventListener( 'DOMContentLoaded', fn );\n        \n    }\n    \n} )( function() {\n    \n    new APlayer();\n    \n} );\n"]}