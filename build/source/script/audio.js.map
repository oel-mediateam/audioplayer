{"version":3,"sources":["../../../source/script/audio-dev.js"],"names":["APlayer","_classCallCheck","this","el","splash","splashTitle","splashSubtitle","splashAuthor","splashLength","startBtn","resumeBtn","dwnldBtn","dwnldBtnMenu","main","mainBody","showProfileBtn","closeProfileBtn","profileDisplay","profileDisplayContent","profileDisplaySpinner","currentPic","trackTitle","trackAuthor","currentTrackNum","totalTracks","miniDisplay","upNextTrack","trackList","expandTracksBtn","ccSpecDisplay","spectrumDisplay","captionDisplay","bodyControls","ccToggle","spectrumToggle","warning","error","errorIcon","errorTitle","errorBody","playerId","copyright","player","manifest","album","url","program","downloads","reference","names","_parseUri","window","location","href","params","URLSearchParams","search","getManifest","self","manifestUrl","_selector","getAttribute","_requestFile","xhr","JSON","parse","response","ap_root_directory","length","setUIs","templateUrl","body","res","replace","innerHTML","getAlbum","_checkSupport","_setStartResumeListeners","_expandDownloadBtnMenu","_CCSpectrumDisplays","_expandTracksToggle","_setShowProfileListener","btn","querySelector","menu","addEventListener","setAttribute","trackNumToPlay","hideSplash","setTrack","xml","responseXML","xmlSettings","_xmlSelector","xmlSetup","xmlTracks","settings","accent","splashFormat","analytics","version","title","textContent","subtitle","author","authorProfile","_isEmpty","undefined","name","course","tracks","Array","prototype","forEach","call","obj","img","src","push","console","log","setData","_setupAudioPlayer","num","currentTitle","currentAuthor","centralPicUrl","ap_author_directory","_sanitize","authorPic","Image","_fileExists","exist","appendChild","upNextTrackTitle","ready","source","type","sources","once","_marqueeEl","fileName","ap_download_files","file","format","link","document","createElement","label","style","display","dwnldFile","bgUrl","ap_splash_directory","splashBg","head","bgImg","backgroundImage","accentUrl","accentStyle","trackListDisplay","indx","li","a","numSpan","classList","add","titleWrprSpan","titleSpan","date","Date","year","getFullYear","ap_copyright","_setProgram","plyrControlsUrl","controls","Plyr","autoplay","volume","clickToPlay","fullscreen","enabled","fallback","iosNative","on","event","detail","plyr","playpauseBtn","muteUnmuteBtn","loopBtn","playbackRateBtn","i","options","Number","value","speed","selectedIndex","remove","loop","contains","restart","evt","target","ap_custom_themes","find","ap_logo_default","decorationBar","colors","hex","span","backgroundColor","hasCoreFeaturesSupport","showError","hasAppearanceIusses","showWarning","Modernizr","audio","json","svg","csscalc","flexbox","canvas","cssanimations","bgsizecover","objectfit","iconStr","titleStr","bodyStr","icon","ariaHidden","createAttribute","setAttributeNode","_fadeIn","str","hideTime","setTimeout","_fadeOut","authorProfileDisplay","closeBtn","profileUrl","that","spinner","send","callback_name","callbackName","on_success","onSuccess","on_timeout","onTimeout","timeout","timeout_trigger","data","clearTimeout","script","async","getElementsByTagName","_setProfile","profile","closeProfile","bio","authorProfileDisplayContent","showProfile","minDisplay","_hideCCSpectrum","_slideDown","parentNode","setProperty","querySelectorAll","_slideUp","toggles","displays","toggleCC","toggleSpectrum","all","toLowerCase","trim","callback","request","XMLHttpRequest","open","onload","status","abort","onerror","found","arr","index","splice","test","pop","parts","split","lastIndexOf","_cleanArray","offsetWidth","scrollWidth","runTime","startTime","start","setInterval","width","clearInterval","stop","animationEvt","_whichAnimationEvent","_event","_callback","_fadeCallback","removeEventListener","_slideCallback","ani","animations","animation","OAnimation","MozAnimation","WebkitAnimation","fn","attachEvent","readyState"],"mappings":"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","file":"audio.js","sourcesContent":["/*\n * Audio Player\n *\n * @author: Ethan Lin\n * @url: https://github.com/oel-mediateam/audioplayer\n * @version: 2.0.0\n *\n * @license: The MIT License (MIT)\n * Copyright (c) 2014 - 2018 Media Serivces\n *\n */\n\n'use strict';\n\nclass APlayer {\n    \n    constructor() {\n        \n        this.el = {\n            splash: '#ap-splash',\n            splashTitle: '#ap-splash .cover-info .title',\n            splashSubtitle: '#ap-splash .cover-info .subtitle',\n            splashAuthor: '#ap-splash .cover-info .author',\n            splashLength: '#ap-splash .cover-info .length',\n            startBtn: '#ap-start-btn',\n            resumeBtn: '#ap-resume-btn',\n            dwnldBtn: '#ap-dwnld-btn',\n            dwnldBtnMenu: '#ap-dwnld-btn .dropdown-content',\n            main: '#ap-main',\n            mainBody: '#ap-main .body',\n            showProfileBtn: '#show-profile',\n            closeProfileBtn: '#author-close-btn',\n            profileDisplay: '#author-overlay',\n            profileDisplayContent: '#author-overlay .content',\n            profileDisplaySpinner: '#author-overlay .spinner',\n            currentPic: '.head .track-img button',\n            trackTitle: '.track-info .title-wrapper .title',\n            trackAuthor: '.track-info .author',\n            currentTrackNum: '.track-info .meta .current',\n            totalTracks: '.track-info .meta .total',\n            miniDisplay: '.track-list .minimized-display',\n            upNextTrack: '.track-list .minimized-display .ap_up_next_title',\n            trackList: '.track-list .tracks',\n            expandTracksBtn: '.track-list .expand-btn',\n            ccSpecDisplay: '.body .cc-spec-display',\n            spectrumDisplay: '.body .cc-spec-display .spectrum',\n            captionDisplay: '.body .cc-spec-display .caption',\n            bodyControls: '.body .controls',\n            ccToggle: '#cc-toggle',\n            spectrumToggle: '#spectrum-toggle',\n            warning: '.body .warning-msg',\n            error: '#ap-error',\n            errorIcon: '#ap-error .icon',\n            errorTitle: '#ap-error .title',\n            errorBody: '#ap-error .body',\n            playerId: '#player',\n            copyright: '.copyright p',\n            player: null\n        };\n        \n        this.manifest ={};\n        this.album = {\n            url: 'assets/album.xml',\n            program: {},\n            downloads: []\n        };\n        this.player = null;\n        this.reference = {\n            names: this._parseUri( window.location.href ),\n            params: new URLSearchParams( window.location.search )\n        };\n        \n        this.getManifest();\n        \n    }\n    \n    getManifest() {\n        \n        let self = this;\n        let manifestUrl = self._selector( '#ap-manifest' ).getAttribute( 'href' );\n        \n        self._requestFile( manifestUrl, function( xhr ) {\n            \n            self.manifest = JSON.parse( xhr.response );\n            \n            if ( self.manifest.ap_root_directory.length === 0 ) {\n        \n                self.manifest.ap_root_directory = 'source/';\n                \n            }\n            \n            self.setUIs();\n            \n        } );\n        \n    }\n    \n    setUIs() {\n        \n        let self = this;\n        let templateUrl = self.manifest.ap_root_directory + 'script/templates/apui.tpl';\n        \n        self._requestFile( templateUrl, function( xhr ) {\n            \n            let body = self._selector( 'body' );\n            const res = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n            \n            body.innerHTML += res;\n            \n            self.getAlbum();\n            \n            self._checkSupport();\n            self._setStartResumeListeners();\n            self._expandDownloadBtnMenu();\n            self._CCSpectrumDisplays();\n            self._expandTracksToggle();\n            self._setShowProfileListener();\n            \n        } );\n        \n    }\n    \n    _expandDownloadBtnMenu() {\n        \n        let self = this;\n        \n        let dwnldBtn = self._selector( self.el.dwnldBtn );\n        let btn = dwnldBtn.querySelector( 'button' );\n        let menu = self._selector( self.el.dwnldBtnMenu );\n        \n        dwnldBtn.addEventListener( 'mouseenter', function() {\n            \n            btn.setAttribute( 'aria-expanded', true );\n            menu.setAttribute( 'aria-expanded', true );\n            \n        } );\n        \n        dwnldBtn.addEventListener( 'mouseleave', function() {\n            \n            btn.setAttribute( 'aria-expanded', false );\n            menu.setAttribute( 'aria-expanded', false );\n            \n        } );\n        \n    }\n    \n    _setStartResumeListeners() {\n        \n        let self = this;\n        let trackNumToPlay = 0;\n        \n        let startBtn = self._selector( self.el.startBtn );\n        let resumeBtn = self._selector( self.el.resumeBtn );\n        \n        startBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            self.setTrack( trackNumToPlay );\n            \n            \n        } );\n        \n        resumeBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            self.setTrack( trackNumToPlay );\n            \n        } );\n        \n    }\n    \n    getAlbum() {\n        \n        let self = this;\n        \n        self._requestFile( self.album.url, function( xhr ) {\n            \n            const xml = xhr.responseXML;\n            const xmlSettings = self._xmlSelector( xml, 'album' );\n            const xmlSetup = self._xmlSelector( xml, 'setup' );\n            const xmlTracks = self._xmlSelector( xml, 'track', true );\n            \n            // settings\n            self.album.settings = {};\n            self.album.settings.accent = xmlSettings.getAttribute( 'accent' );\n            self.album.settings.splashFormat = xmlSettings.getAttribute( 'splashImgFormat' );\n            self.album.settings.analytics = xmlSettings.getAttribute( 'analytics' );\n            self.album.settings.version = xmlSettings.getAttribute( 'xmlVersion' );\n            \n            // setup\n            self.album.title = self._xmlSelector( xmlSetup, 'title' ).textContent;\n            self.album.subtitle = self._xmlSelector( xmlSetup, 'subtitle' ).textContent;\n            self.album.author = self._xmlSelector( xmlSetup, 'author' ).getAttribute( 'name' );\n            self.album.authorProfile = self._xmlSelector( xmlSetup, 'author' ).textContent;\n            self.album.length = self._xmlSelector( xmlSetup, 'length' ).textContent;\n            \n            // set program\n            if ( self._isEmpty( xmlSetup.getAttribute( 'program' ) ) ) {\n                \n                if ( self.reference.names[3] !== undefined ) {\n                    \n                    self.album.program.name = self.reference.names[3];\n                    \n                }\n                \n            } else {\n                \n                self.album.program.name = xmlSetup.getAttribute( 'program' );\n                \n            }\n            \n            // set course\n            if ( !self._isEmpty( xmlSetup.getAttribute( 'course' ) ) ) {\n                \n                self.album.program.course = xmlSetup.getAttribute( 'course' );\n                \n            }\n            \n            // track(s)\n            self.album.tracks = [];\n            \n            Array.prototype.forEach.call( xmlTracks, function( el) {\n                \n                let obj = {};\n            \n                obj.img = el.getAttribute( 'img' );\n                obj.src = el.getAttribute( 'src' );\n                obj.title = el.querySelector( 'title' ).innerHTML;\n                obj.author = el.querySelector( 'author' ).innerHTML;\n                \n                self.album.tracks.push( obj );\n                \n            } );\n            \n            console.log( self.album );\n            \n            self.setData();\n            self._setupAudioPlayer();\n            \n        } );\n        \n    }\n    \n    setTrack( num ) {\n        \n        let self = this;\n        \n        let currentTitle = self._selector( self.el.trackTitle );\n            \n        currentTitle.innerHTML = self.album.tracks[num].title;\n        \n        let currentAuthor = self._selector( self.el.trackAuthor );\n        \n        if ( self._isEmpty( self.album.tracks[num].author) ) {\n            \n            currentAuthor.innerHTML = self.album.author;\n            \n        } else {\n            \n            currentAuthor.innerHTML = self.album.tracks[num].author;\n            \n        }\n        \n        let currentPic = self._selector( self.el.currentPic );\n        let centralPicUrl = self.manifest.ap_author_directory + self._sanitize( currentAuthor.innerHTML ) + '.jpg';\n        let authorPic = new Image();\n        \n        authorPic.src = self.manifest.ap_root_directory + 'images/pic.png';\n        \n        self._fileExists( centralPicUrl, function( exist ) {\n            \n            if ( exist ) {\n                \n                authorPic.src = centralPicUrl;\n                \n            }\n            \n        } );\n        \n        if ( !self._isEmpty( self.album.tracks[num].img ) ) {\n            \n            authorPic.src = 'assets/images/' + self.album.tracks[num].img;\n            \n        }\n        \n        currentPic.appendChild( authorPic );\n        \n        if ( self.album.tracks.length > 1 ) {\n            \n            let currentTrack = self._selector( self.el.currentTrackNum );\n            currentTrack.innerHTML = num + 1;\n            \n            let totalTracks = self._selector( self.el.totalTracks );\n            totalTracks.innerHTML = self.album.tracks.length;\n            \n        }\n        \n        let upNextTrackTitle = self._selector( self.el.upNextTrack );\n        \n        if ( num < self.album.tracks.length ) {\n            \n            upNextTrackTitle.innerHTML = self.album.tracks[num + 1].title;\n            \n        }\n        \n        if ( self.player.ready ) {\n            \n            self.player.source = {\n                \n                type: 'audio',\n                title: self.album.tracks[num].title,\n                sources: [\n                    \n                    {\n                        \n                        src: 'assets/audio/' + self.album.tracks[0].src,\n                        type: 'audio/mp3'\n                        \n                    }\n                    \n                ]\n                \n            }\n                \n            self.player.once( 'canplay', function() {\n                \n                //self.player.togglePlay();\n                \n            } );\n            \n        }\n        \n        self._marqueeEl( currentTitle );\n        \n    }\n    \n    setData() {\n        \n        let self = this;\n        \n        // DOM head elements\n        let pageTitle = this._selector( 'title' );\n        \n        pageTitle.innerHTML = this.album.title;\n        \n        // splash screen\n        let title = this._selector( this.el.splashTitle );\n        let subtitle = this._selector( this.el.splashSubtitle );\n        let author = this._selector( this.el.splashAuthor );\n        let length = this._selector( this.el.splashLength );\n        \n        title.innerHTML = this.album.title;\n        subtitle.innerHTML = this.album.subtitle;\n        author.innerHTML = this.album.author;\n        length.innerHTML = this.album.length;\n        \n        // splash download menu list\n        let fileName = self.reference.names;\n        \n        if ( fileName.length === 0 ) {\n            \n            fileName = 'album';\n            \n        } else {\n            \n            fileName = self.reference.names[self.reference.names.length - 1];\n            \n        }\n        \n        Array.prototype.forEach.call( this.manifest.ap_download_files, function( el ) {\n            \n            let file = fileName + '.' + el.format;\n            \n            self._fileExists( file, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let link = document.createElement( 'a' );\n            \n                    link.href = file;\n                    link.setAttribute( 'download', file );\n                    link.setAttribute( 'role', 'menuitem' );\n                    link.innerHTML = el.label;\n                    \n                    let dwnldMenu = self._selector( self.el.dwnldBtnMenu );\n                    dwnldMenu.appendChild( link );\n                    \n                    let dwnldBtn = self._selector( self.el.dwnldBtn );\n                    dwnldBtn.setAttribute( 'aria-hidden', false );\n                    dwnldBtn.style.display = 'block';\n                    \n                    let dwnldFile = {\n                        name: el.label,\n                        url: file\n                    };\n                    \n                    self.album.downloads.push( dwnldFile );\n                    \n                }\n                \n            } );\n            \n        } );\n        \n        // splash background image\n        if ( !this._isEmpty( this.album.program.name ) ) {\n            \n            let bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/default.' + this.album.settings.splashFormat;\n            \n            if ( !this._isEmpty( self.album.program.course ) ) {\n                \n                bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/' + this.album.program.course + '.' + this.album.settings.splashFormat;\n                \n            }\n            \n            this._fileExists( bgUrl, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let splashBg = self._selector( self.el.splash );\n                    let head = self._selector( 'head' );\n                    let bgImg = 'url(\"' + bgUrl + '\")';\n                    \n                    splashBg.style.backgroundImage = bgImg;\n            \n                    // change the bg in the ap-main:before as well\n                    let style = document.createElement( 'style' );\n                    \n                    style.setAttribute( 'type', 'text/css' );\n                    style.innerHTML = '#ap-main:before{background-image: ' + bgImg + ' !important;}';\n                    \n                    head.appendChild( style );\n                    \n                }\n                \n            } );\n            \n        }\n        \n        // load accent\n        if ( !this._isEmpty( self.album.settings.accent ) ) {\n            \n            let accentUrl = this.manifest.ap_root_directory + 'script/templates/accent_css.tpl';\n            this._requestFile( accentUrl, function( xhr ) {\n                \n                const accentStyle = xhr.response.replace( /\\{([accent)]+)\\}/ig, self.album.settings.accent );\n                \n                let head = self._selector( 'head' );\n                let style = document.createElement( 'style' );\n                \n                style.setAttribute( 'type', 'text/css' );\n                style.innerHTML = accentStyle;\n                \n                head.appendChild( style );\n                \n            } );\n            \n        }\n        \n        // set tracks\n        if ( this.album.tracks.length > 1 ) {\n            \n            let trackListDisplay = this._selector( this.el.trackList );\n            \n            Array.prototype.forEach.call( this.album.tracks, function( el, indx ) {\n                \n                let li = document.createElement( 'li' );\n                let a = document.createElement( 'a' );\n                \n                a.href = 'javascript:void(0);';\n                a.setAttribute( 'data-src', el.src );\n                a.setAttribute( 'data-author', el.author );\n                a.setAttribute( 'data-img', el.img );\n                \n                let numSpan = document.createElement( 'span' );\n                \n                numSpan.classList.add( 'track-num' );\n                numSpan.innerHTML = indx + 1 + '. ';\n                \n                let titleWrprSpan = document.createElement( 'span' );\n                \n                titleWrprSpan.classList.add( 'track-title-wrapper' );\n                \n                let titleSpan = document.createElement( 'span' );\n                \n                titleSpan.classList.add( 'track-title' );\n                titleSpan.innerHTML = el.title;\n                \n                titleWrprSpan.appendChild( titleSpan );\n                \n                a.appendChild( numSpan );\n                a.appendChild( titleWrprSpan );\n                \n                li.appendChild( a );\n                \n                trackListDisplay.appendChild( li );\n                \n            } );\n            \n        } else {\n            \n            this._selector( this.el.main ).classList.add( 'single' );\n            \n        }\n    \n        // copyright\n        let copyright = this._selector( this.el.copyright );\n        let date = new Date();\n        let year = date.getFullYear();\n        \n        copyright.innerHTML += '&copy; ' + year + '. ' + this.manifest.ap_copyright;\n        \n        // program theme\n        this._setProgram();\n        \n    }\n    \n    _setupAudioPlayer() {\n        \n        let self = this;\n        \n        let plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/single_plyr_controls.tpl';\n        \n        if ( self.album.tracks.length > 1 ) {\n            \n            plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/full_plyr_controls.tpl';\n            \n        }\n        \n        self._requestFile( plyrControlsUrl, function( xhr ) {\n            \n            const controls = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n                \n            self.el.player = new Plyr( self.el.playerId, {\n        \n                controls: controls,\n                autoplay: false,\n                volume: 0.8,\n                clickToPlay: false,\n                fullscreen: {\n                    enabled: false,\n                    fallback: false,\n                    iosNative: false\n                }\n                            \n            } );\n            \n            self.el.player.on( 'ready', event => {\n                \n                self.player = event.detail.plyr;\n                \n                const playpauseBtn = self._selector( '#ap-playpause' );\n                const muteUnmuteBtn = self._selector( '#ap-muteunmute' );\n                const loopBtn = self._selector( '#ap-loop' );\n                const playbackRateBtn = self._selector( '#ap-playbackRate' );\n                \n                // check playback rate and update playback rate select element\n                for ( var i = 0; i < playbackRateBtn.options.length; i++ ) {\n    \n                    if ( Number( playbackRateBtn.options[i].value ) === self.player.speed ) {\n                        \n                        playbackRateBtn.selectedIndex = i;\n                        break;\n                        \n                    }\n                    \n                }\n                \n                self.player.on( 'playing', function() {\n                    \n                    playpauseBtn.classList.add( 'plyr__control--pressed' );\n                    \n                } );\n                \n                self.player.on( 'pause', function() {\n                    \n                    playpauseBtn.classList.remove( 'plyr__control--pressed' );\n                    \n                } );\n                \n                // on playback end\n                self.player.on( 'ended', function() {\n                    \n                    if ( self.player.loop === false ) {\n                        \n                        if ( playpauseBtn.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                            playpauseBtn.classList.add( 'plyr__control--pressed' );\n                            \n                        }\n                        \n                        self.player.restart();\n                        \n                    }\n                    \n                } );\n                \n                // toogle loop button state\n                loopBtn.addEventListener( 'click', function() {\n    \n                    if ( self.player.loop === false ) {\n                        \n                        self.player.loop = true;\n                        loopBtn.classList.add( 'active' );\n                        \n                    } else {\n                        \n                        self.player.loop = false;\n                        loopBtn.classList.remove( 'active' );\n                        \n                    }\n                    \n                } );\n                \n                // change playback rate\n                playbackRateBtn.addEventListener( 'change', function( evt ) {\n                    \n                    self.player.speed = Number( evt.target.options[evt.target.selectedIndex].value );\n                    \n                } );\n                \n                // toglle mute/unmute state\n                muteUnmuteBtn.addEventListener( 'click', function( evt ) {\n                    \n                    if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                        \n                        evt.target.classList.remove( 'plyr__control--pressed' );\n                        \n                    } else {\n                        \n                        evt.target.classList.add( 'plyr__control--pressed' );\n                        \n                    }\n                    \n                } );\n                    \n            } ); // end player ready event\n            \n        } );\n        \n    } // end _setupAudioPlayer\n    \n    _setProgram() {\n        \n        let self = this;\n        \n        if ( self.manifest.ap_custom_themes ) {\n            \n            self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                \n                return obj.name === self.album.program.name;\n                \n            } );\n            \n            if ( self.album.program === undefined ) {\n                \n                self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                    \n                    return obj.name === self.manifest.ap_logo_default;\n                    \n                } );\n                \n            }\n            \n        }\n        \n        let decorationBar = self._selector( '.program-theme' );\n    \n        self.album.program.colors.forEach( function( hex ) {\n                        \n            let span = document.createElement( 'span' );\n            span.style.backgroundColor = hex;\n            decorationBar.appendChild( span );\n            \n        } );\n        \n    }\n    \n    _checkSupport() {\n        \n        if ( this.hasCoreFeaturesSupport() ) {\n        \n            this.showError( '🙈', '', 'Your web browser does not support core audio player features.<br><a href=\"http://outdatedbrowser.com/en\" target=\"_blank\">Please update your web browser.</a>' );\n            return;\n            \n        }\n        \n        if ( this.hasAppearanceIusses() ) {\n        \n            this.showWarning( 'For better viewing, try a different web browser.' );\n            \n        }\n        \n    }\n    \n    hasCoreFeaturesSupport() {\n    \n        if ( !Modernizr.audio && Modernizr.json && Modernizr.svg\n             && Modernizr.csscalc && Modernizr.flexbox ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    hasAppearanceIusses() {\n    \n        if ( !Modernizr.canvas ) {\n            return true;\n        }\n        \n        if ( !Modernizr.cssanimations ) {\n            return true;\n        }\n        \n        if ( !Modernizr.bgsizecover ) {\n            return true\n        }\n        \n        if ( !Modernizr.objectfit ) {\n            return true\n        }\n        \n        return false;\n        \n    }\n    \n    showError( iconStr, titleStr, bodyStr ) {\n    \n        let splash = this._selector( this.el.splash );\n        let main = this._selector( this.el.main );\n        let error = this._selector( this.el.error );\n        let icon = this._selector( this.el.errorIcon );\n        let title = this._selector( this.el.errorTitle );\n        let body = this._selector( this.el.errorBody );\n        \n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = false;\n        \n        icon.innerHTML = iconStr;\n        title.innerHTML = titleStr;\n        body.innerHTML = bodyStr;\n        \n        splash.style.display = 'none';\n        main.style.display = 'none';\n        \n        error.style.display = 'flex';\n        error.setAttributeNode( ariaHidden );\n        \n        this._fadeIn( error );\n        \n    }\n    \n    showWarning( str ) {\n    \n        let self = this;\n        let warning = self._selector( self.el.warning );\n        let hideTime = 6000;\n        \n        warning.innerHTML = str;\n        warning.style.display = 'block';\n        \n        self._fadeIn( warning );\n        \n        window.setTimeout( function() {\n            \n            self._fadeOut( warning, function() {\n                \n                warning.innerHTML = '';\n                warning.style.display = 'none';\n                \n            } );\n            \n        }, hideTime );\n        \n    }\n    \n    hideSplash() {\n    \n        let splash = this._selector( this.el.splash );\n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = true;\n        \n        splash.classList.add( 'hide-splash' );\n        splash.setAttributeNode( ariaHidden );\n        \n    }\n    \n    showProfile() {\n        \n        let self = this;\n        let authorProfileDisplay = this._selector( this.el.profileDisplay );\n        let closeBtn = this._selector( this.el.closeProfileBtn );\n        let currentAuthor = self._selector( self.el.trackAuthor ).innerHTML;\n        \n        if ( self._isEmpty( self.album.authorProfile ) ) {\n            \n            let profileUrl = self.manifest.ap_author_directory + self._sanitize( currentAuthor ) + '.json?callback=author';\n        \n            let $jsonp = ( function() {\n                \n                let that = {};\n                let spinner = self._selector( self.el.profileDisplaySpinner );\n                \n                that.send = function( src, options ) {\n            \n                    spinner.classList.add( 'spin' );\n                    \n                    let callback_name = options.callbackName || 'callback',\n                        on_success = options.onSuccess || function() {},\n                        on_timeout = options.onTimeout || function() {},\n                        timeout = options.timeout || 10; // sec\n                \n                    let timeout_trigger = window.setTimeout( function() {\n                        window[callback_name] = function() {};\n                        spinner.classList.remove( 'spin' );\n                        on_timeout();\n                    }, timeout * 1000);\n                    \n                    window[callback_name] = function( data ) {\n                        window.clearTimeout( timeout_trigger );\n                        spinner.classList.remove( 'spin' );\n                        on_success( data );\n                    }\n                    \n                    let script = document.createElement( 'script' );\n                    script.type = 'text/javascript';\n                    script.async = true;\n                    script.src = src;\n                    \n                    document.getElementsByTagName( 'head' )[0].appendChild( script );\n                \n                }\n                \n                return that;\n                \n            } )();\n            \n            $jsonp.send( profileUrl, {\n                \n                callbackName: 'author',\n                onSuccess: function( json ) {\n                    \n                    self._setProfile( json.name, json.profile );\n                },\n                onTimeout: function() {\n                    \n                    self._setProfile( currentAuthor, self.album.authorProfile );\n                    \n                },\n                timeout: 5\n                \n            } );\n            \n        } else {\n            \n            self._setProfile( currentAuthor, self.album.authorProfile );\n            \n        }\n        \n        authorProfileDisplay.style.display = 'block';\n        this._fadeIn( authorProfileDisplay );\n        \n        closeBtn.addEventListener( 'click', function() {\n            self.closeProfile();\n        }, {once: true} );\n\n    }\n    \n    _setProfile( author, bio ) {\n        \n        let authorProfileDisplayContent = this._selector( this.el.profileDisplayContent );\n        \n        let name = document.createElement( 'h4' );\n                    \n        name.innerHTML = author;\n                        \n        let profile = document.createElement( 'div' );\n        \n        profile.innerHTML = bio;\n        \n        authorProfileDisplayContent.appendChild( name );\n        authorProfileDisplayContent.appendChild( profile );\n        \n    }\n    \n    closeProfile() {\n        \n        let authorProfileDisplay = this._selector( this.el.profileDisplay );\n        let authorProfileDisplayContent = this._selector( this.el.profileDisplayContent );\n        \n        this._fadeOut( authorProfileDisplay, function() {\n            \n            authorProfileDisplay.style.display = '';\n            \n            authorProfileDisplayContent.innerHTML = '';\n            \n        } );\n\n    }\n    \n    _setShowProfileListener() {\n        \n        let self = this;\n        let showProfileBtn = this._selector( this.el.showProfileBtn );\n        \n        showProfileBtn.addEventListener( 'click', function() {\n            \n            self.showProfile();\n            \n        } );\n        \n    }\n    \n    _expandTracksToggle() {\n        \n        let self = this;\n        let expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        expandTracksBtn.addEventListener( 'click', function() {\n            \n            let trackList = self._selector( self.el.trackList );\n            let minDisplay = self._selector( self.el.miniDisplay );\n            \n            if ( trackList.style.display == 'none' || trackList.style.display == '' ) {\n                \n                trackList.style.display = 'block';\n                minDisplay.style.display = 'none';\n                \n                self._hideCCSpectrum();\n                \n                self._slideDown( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.add( 'rotate' );\n                    trackList.style.setProperty( 'overflow-y', 'auto' );\n                    \n                } );\n                \n                let tracks = document.querySelectorAll( self.el.trackList + ' .track-title-wrapper .track-title' );\n                \n                Array.prototype.forEach.call( tracks, function( el ) {\n                    \n                    self._marqueeEl( el );\n                    \n                } );\n                \n                \n                \n            } else {\n                \n                trackList.style.display = 'none';\n                trackList.style.setProperty( 'overflow-y', 'hidden' );\n                minDisplay.style.display = 'flex';\n                \n                self._slideUp( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.remove( 'rotate' );\n                    self._CCSpectrumDisplays();\n                    \n                } );\n                \n            }\n            \n        } );\n        \n    }\n    \n    toggleCC() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        ccToggle.classList.add( 'disabled' );\n        spectrumToggle.classList.remove( 'disabled' );\n        \n        captionDisplay.classList.add( 'active' );\n        spectrumDisplay.classList.remove( 'active' );\n        \n    }\n    \n    toggleSpectrum() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        spectrumToggle.classList.add( 'disabled' );\n        ccToggle.classList.remove( 'disabled' );\n        \n        spectrumDisplay.classList.add( 'active' );\n        captionDisplay.classList.remove( 'active' );\n        \n    }\n    \n    _CCSpectrumDisplays() {\n        \n        let self = this;\n        let toggles = this._selector( this.el.bodyControls );\n        let displays = this._selector( this.el.ccSpecDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        if ( toggles.style.display === 'none' ) {\n            \n            toggles.style.display = '';\n            displays.style.display = '';\n            \n        } else {\n\n            self.toggleCC();\n            \n        }\n        \n        ccToggle.addEventListener( 'click', function() {\n            self.toggleCC();\n        } );\n        \n        spectrumToggle.addEventListener( 'click', function() {\n            self.toggleSpectrum();\n        } );\n        \n    }\n    \n    _hideCCSpectrum() {\n        \n        let displays = this._selector( this.el.ccSpecDisplay );\n        let toggles = this._selector( this.el.bodyControls );\n        \n        toggles.style.display = 'none';\n        displays.style.display = 'none';\n        \n    }\n    \n    /*** HELPER METHODS ***/\n    \n    _selector( str ) {\n        return document.querySelector( str );\n    }\n    \n    _xmlSelector( xml, str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return xml.querySelectorAll( str );\n            \n        } else {\n            \n            return xml.querySelector( str );\n            \n        }\n        \n    }\n    \n    _sanitize( str ) {\n        \n        return str.replace(/[^\\w]/gi, '').toLowerCase();\n    \n    }\n    \n    _isEmpty( str ) {\n        \n        if ( typeof str === 'string' && str.trim() === '' ) {\n            return true;\n        }\n        \n        if ( str === undefined ) {\n            return true;\n        }\n        \n        if ( str ===  null ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    _requestFile( url, callback ) {\n        \n        let self = this;\n        let body = self._selector( 'body' );\n        let request = new XMLHttpRequest();\n        \n        request.open( 'GET', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                callback( this );\n                \n            } else {\n                \n                body.innerHTML += '<div class=\"error\">Error ' + this.status + ' while loading <code>' + url + '</code></div>';\n                \n            }\n            \n            request.abort();\n            \n        };\n        \n        request.onerror = function() {\n            \n            body.innerHTML += '<div class=\"error\">Connection Error. Check your network.</div>';\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _fileExists( url, callback ) {\n        \n        let request = new XMLHttpRequest();\n        let found = false;\n        \n        request.open( 'HEAD', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                found = true;\n                \n            } else {\n                \n                found = false;\n                \n            }\n            \n            callback( found );\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _cleanArray( arr ) {\n    \n        arr.forEach( function( value, index ) {\n            \n            if ( value === '' ) {\n                arr.splice( index, 1 );\n            }\n            \n        } );\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\.\\w*/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\:/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        return arr;\n        \n    }\n    \n    _parseUri( str ) {\n        \n        let parts =  str.split( '?' );\n        let target = parts[0];\n        \n        if ( target.lastIndexOf( '/' ) !== target.length - 1 ) {\n    \t\ttarget += '/';\n    \t}\n    \t\n    \treturn this._cleanArray( target.split( '/' ) );\n        \n    }\n    \n    /*** ANIMATION METHODS ***/\n    \n    _marqueeEl( el ) {\n        \n        let self = this;\n        \n        if ( el.offsetWidth < el.scrollWidth ) {\n            \n            let runTime = 15500;\n            let startTime = 5000;\n            \n            let start = window.setInterval( function() {\n                \n                el.parentNode.classList.add( 'marquee' );\n                \n                el.style.width = el.scrollWidth + 'px';\n                \n                window.clearInterval( start );\n                \n                let stop = window.setTimeout( function() {\n                    \n                    el.style.width = 'initial';\n                    \n                    self._fadeIn( el );\n                    \n                    el.parentNode.classList.remove( 'marquee' );\n                    window.clearTimeout( stop );\n                    self._marqueeEl( el );\n                    \n                }, runTime );\n                \n            }, startTime );\n            \n        }\n        \n    }\n    \n    _fadeIn( el, callback ) {\n        \n        el.classList.remove( 'fadeOut' );\n        el.classList.add( 'fadeIn' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeOut( el, callback ) {\n\n        el.classList.remove( 'fadeIn' );\n        el.classList.add( 'fadeOut' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.classList.remove( 'fadeIn' );\n        evt.target.classList.remove( 'fadeOut' );\n        evt.target.removeEventListener( evt.target.params._event, this._fadeCallback );\n        \n    }\n    \n    _slideDown( el, callback ) {\n        \n        el.classList.add( 'slideDown' );\n        el.classList.remove( 'slideUp' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideUp( el, callback ) {\n        \n        el.classList.add( 'slideUp' );\n        el.classList.remove( 'slideDown' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.removeEventListener( evt.target.params._event, this._slideCallback );\n        \n    } \n    \n    _whichAnimationEvent() {\n        \n        let ani;\n        let el = document.createElement( 'fakeelement' );\n        let animations = {\n            'animation': 'animationend',\n            'OAnimation': 'oAnimationEnd',\n            'MozAnimation': 'animationend',\n            'WebkitAnimation': 'webkitAnimationEnd'\n        }\n        \n        for ( ani in animations ) {\n            \n            if ( el.style[ani] !== undefined ) {\n                \n                return animations[ani];\n                \n            }\n            \n        }\n        \n    }\n    \n} // end APlayer class\n\n/**** ON DOM READY ****/\n( function ready( fn ) {\n    \n    if ( document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading' ) {\n        \n        fn();\n        \n    } else {\n        \n        document.addEventListener( 'DOMContentLoaded', fn );\n        \n    }\n    \n} )( function() {\n    \n    new APlayer();\n    \n} );\n"]}