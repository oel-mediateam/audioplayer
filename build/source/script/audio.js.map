{"version":3,"sources":["../../../source/script/audio-dev.js"],"names":["APlayer","_classCallCheck","this","el","splash","main","showProfileBtn","closeProfileBtn","profileDisplay","trackTitle","miniDisplay","trackList","expandTracksBtn","ccSpecDisplay","spectrumDisplay","captionDisplay","bodyControls","ccToggle","spectrumToggle","warning","error","errorIcon","errorTitle","errorBody","playerId","copyright","player","manifest","album","url","program","reference","names","window","location","href","params","URLSearchParams","search","self","hasCoreFeaturesSupport","showError","hasAppearanceIusses","showWarning","getManifest","manifestUrl","_selector","getAttribute","_requestFile","xhr","JSON","parse","response","ap_root_directory","length","setUIs","templateUrl","body","res","replace","innerHTML","getAlbum","_CCSpectrumDisplays","_expandTracksToggle","_setShowProfileListener","xml","responseXML","xmlSettings","_xmlSelector","xmlSetup","xmlTracks","settings","accent","splashFormat","imgFormat","analytics","version","name","textContent","author","authorProfile","_isEmpty","split","lastIndexOf","cleanArray","undefined","course","tracks","Array","prototype","forEach","call","obj","img","src","title","querySelector","push","console","log","setData","_setupAudioPlayer","date","Date","year","getFullYear","ap_copyright","setProgram","_marqueeEl","plyrControlsUrl","controls","Plyr","autoplay","volume","clickToPlay","fullscreen","enabled","fallback","iosNative","on","event","instance","detail","plyr","playpauseBtn","muteUnmuteBtn","loopBtn","playbackRateBtn","playing","classList","add","i","options","Number","value","speed","selectedIndex","loop","contains","restart","addEventListener","remove","evt","target","ap_custom_themes","find","ap_logo_default","decorationBar","colors","hex","span","document","createElement","style","backgroundColor","appendChild","Modernizr","audio","json","svg","csscalc","flexbox","canvas","cssanimations","bgsizecover","objectfit","iconStr","titleStr","bodyStr","icon","ariaHidden","createAttribute","display","setAttributeNode","_fadeIn","str","hideTime","setTimeout","_fadeOut","closeBtn","closeProfile","once","showProfile","minDisplay","_hideCCSpectrum","_slideDown","parentNode","_slideUp","toggles","displays","toggleCC","toggleSpectrum","all","querySelectorAll","callback","request","XMLHttpRequest","open","onload","status","abort","onerror","send","arr","index","splice","test","pop","offsetWidth","scrollWidth","runTime","startTime","start","setInterval","width","clearInterval","stop","clearTimeout","animationEvt","_whichAnimationEvent","_event","_callback","_fadeCallback","removeEventListener","_slideCallback","ani","animations","animation","OAnimation","MozAnimation","WebkitAnimation","AP","ready","fn","attachEvent","readyState","go"],"mappings":"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","file":"audio.js","sourcesContent":["/*\n * Audio Player\n *\n * @author: Ethan Lin\n * @url: https://github.com/oel-mediateam/audioplayer\n * @version: 2.0.0\n *\n * @license: The MIT License (MIT)\n * Copyright (c) 2014 - 2018 Media Serivces\n *\n */\n\n'use strict';\n\nclass APlayer {\n    \n    constructor() {\n        \n        this.el = {\n            splash: '#ap-splash',\n            main: '#ap-main',\n            showProfileBtn: '#show-profile',\n            closeProfileBtn: '#author-close-btn',\n            profileDisplay: '#author-overlay',\n            trackTitle: '.track-info .title-wrapper .title',\n            miniDisplay: '.track-list .minimized-display',\n            trackList: '.track-list .tracks',\n            expandTracksBtn: '.track-list .expand-btn',\n            ccSpecDisplay: '.body .cc-spec-display',\n            spectrumDisplay: '.body .cc-spec-display .spectrum',\n            captionDisplay: '.body .cc-spec-display .caption',\n            bodyControls: '.body .controls',\n            ccToggle: '#cc-toggle',\n            spectrumToggle: '#spectrum-toggle',\n            warning: '.body .warning-msg',\n            error: '#ap-error',\n            errorIcon: '#ap-error .icon',\n            errorTitle: '#ap-error .title',\n            errorBody: '#ap-error .body',\n            playerId: '#player',\n            copyright: '.copyright p',\n            player: null\n        };\n        \n        this.manifest ={};\n        this.album = {\n            url: 'assets/album.xml'\n        };\n        this.program = {};\n        this.reference = {\n            names: window.location.href,\n            params: new URLSearchParams( window.location.search )\n        };\n        \n    }\n         \n    go() {\n        \n        let self = this;\n        \n        if ( self.hasCoreFeaturesSupport() ) {\n        \n            self.showError( '🙈', '', 'Your web browser does not support core audio player features.<br><a href=\"http://outdatedbrowser.com/en\" target=\"_blank\">Please update your web browser.</a>' );\n            return;\n            \n        }\n        \n        if ( self.hasAppearanceIusses() ) {\n        \n            self.showWarning( 'For better viewing, try a different web browser.' );\n            \n        }\n        \n        self.getManifest();\n        \n    }\n    \n    getManifest() {\n        \n        let self = this;\n        let manifestUrl = self._selector( '#ap-manifest' ).getAttribute( 'href' );\n        \n        self._requestFile( manifestUrl, function( xhr ) {\n            \n            self.manifest = JSON.parse( xhr.response );\n            \n            if ( self.manifest.ap_root_directory.length === 0 ) {\n        \n                self.manifest.ap_root_directory = 'source/';\n                \n            }\n            \n            self.setUIs();\n            \n        } );\n        \n    }\n    \n    setUIs() {\n        \n        let self = this;\n        let templateUrl = self.manifest.ap_root_directory + 'script/templates/apui.tpl';\n        \n        self._requestFile( templateUrl, function( xhr ) {\n            \n            let body = self._selector( 'body' );\n            const res = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n            \n            body.innerHTML += res;\n            \n            self.getAlbum();\n            self._CCSpectrumDisplays();\n            self._expandTracksToggle();\n            self._setShowProfileListener();\n            \n        } );\n        \n    }\n    \n    getAlbum() {\n        \n        let self = this;\n        \n        self._requestFile( self.album.url, function( xhr ) {\n            \n            const xml = xhr.responseXML;\n            const xmlSettings = self._xmlSelector( xml, 'album' );\n            const xmlSetup = self._xmlSelector( xml, 'setup' );\n            const xmlTracks = self._xmlSelector( xml, 'track', true );\n            \n            // settings\n            self.album.settings = {};\n            self.album.settings.accent = xmlSettings.getAttribute( 'accent' );\n            self.album.settings.splashFormat = xmlSettings.getAttribute( 'splashImgFormat' );\n            self.album.settings.imgFormat = xmlSettings.getAttribute( 'imgFormat' );\n            self.album.settings.analytics = xmlSettings.getAttribute( 'analytics' );\n            self.album.settings.version = xmlSettings.getAttribute( 'xmlVersion' );\n            \n            // setup\n            self.album.name = self._xmlSelector( xmlSetup, 'name' ).textContent;\n            self.album.author = self._xmlSelector( xmlSetup, 'author' ).getAttribute( 'name' );\n            self.album.authorProfile = self._xmlSelector( xmlSetup, 'author' ).textContent;\n            self.album.length = self._xmlSelector( xmlSetup, 'length' ).textContent;\n            \n            // set program\n            if ( self._isEmpty( xmlSettings.getAttribute( 'program' ) ) ) {\n                \n                self.reference.names.split( '?' );\n                self.reference.names = self.reference.names[0];\n                \n                if ( self.reference.names.lastIndexOf( '/' ) !== self.reference.names.length - 1 ) {\n            \t\tself.reference.names += '/';\n            \t}\n            \t\n            \tself.reference.names = self.cleanArray( self.reference.names.split( '/' ) );\n                \n                if ( self.reference.names[3] !== undefined ) {\n                    self.program.name = self.reference.names[3]\n                }\n                \n            } else {\n                \n                self.program.name = xmlSettings.getAttribute( 'program' );\n                \n            }\n            \n            // set course\n            if ( !self._isEmpty( xmlSettings.getAttribute( 'course' ) ) ) {\n                \n                self.program.course = xmlSettings.getAttribute( 'course' );\n                \n            }\n            \n            // track(s)\n            self.album.tracks = [];\n            \n            Array.prototype.forEach.call( xmlTracks, function( el) {\n                \n                let obj = {};\n            \n                obj.img = el.getAttribute( 'img' );\n                obj.src = el.getAttribute( 'src' );\n                obj.title = el.querySelector( 'title' ).innerHTML;\n                obj.author = el.querySelector( 'author' ).innerHTML;\n                \n                self.album.tracks.push( obj );\n                \n            } );\n            \n            console.log( self.album );\n            \n            self.setData();\n            self._setupAudioPlayer();\n            \n        } );\n        \n    }\n    \n    setData() {\n        \n        let trackTitle = this._selector( this.el.trackTitle );\n        let copyright = this._selector( this.el.copyright );\n        let date = new Date();\n        let year = date.getFullYear();\n        \n        copyright.innerHTML += '&copy; ' + year + '. ' + this.manifest.ap_copyright;\n        \n        this.setProgram();\n        this._marqueeEl( trackTitle );\n        \n    }\n    \n    _setupAudioPlayer() {\n        \n        let self = this;\n        let plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/custom_plyr_controls.tpl';\n        \n        self._requestFile( plyrControlsUrl, function( xhr ) {\n            \n            const controls = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n                \n            self.el.player = new Plyr( self.el.playerId, {\n        \n                controls: controls,\n                autoplay: false,\n                volume: 0.8,\n                clickToPlay: false,\n                fullscreen: {\n                    enabled: false,\n                    fallback: false,\n                    iosNative: false\n                }\n                            \n            } );\n            \n            self.el.player.on( 'ready', event => {\n                \n                const instance = event.detail.plyr;\n                const playpauseBtn = self._selector( '#ap-playpause' );\n                const muteUnmuteBtn = self._selector( '#ap-muteunmute' );\n                const loopBtn = self._selector( '#ap-loop' );\n                const playbackRateBtn = self._selector( '#ap-playbackRate' );\n                \n                // play the audio\n                // instance.play();\n                \n                if ( instance.playing === true ) {\n                    \n                    playpauseBtn.classList.add( 'plyr__control--pressed' );\n                    \n                }\n                \n                // check playback rate and update playback rate select element\n                for ( var i = 0; i < playbackRateBtn.options.length; i++ ) {\n    \n                    if ( Number( playbackRateBtn.options[i].value ) === instance.speed ) {\n                        \n                        playbackRateBtn.selectedIndex = i;\n                        break;\n                        \n                    }\n                    \n                }\n                \n                // on playback end\n                instance.on( 'ended', function() {\n                    \n                    if ( instance.loop === false ) {\n                        \n                        if ( playpauseBtn.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                            playpauseBtn.classList.add( 'plyr__control--pressed' );\n                            \n                        }\n                        \n                        instance.restart();\n                        \n                    }\n                    \n                } );\n                \n                // toogle loop button state\n                loopBtn.addEventListener( 'click', function() {\n    \n                    if ( instance.loop === false ) {\n                        \n                        instance.loop = true;\n                        loopBtn.classList.add( 'active' );\n                        \n                    } else {\n                        \n                        instance.loop = false;\n                        loopBtn.classList.remove( 'active' );\n                        \n                    }\n                    \n                } );\n                \n                // change playback rate\n                playbackRateBtn.addEventListener( 'change', function( evt ) {\n                    \n                    instance.speed = Number( evt.target.options[evt.target.selectedIndex].value );\n                    \n                } );\n                \n                // toggle play/pause state\n                playpauseBtn.addEventListener( 'click', function( evt ) {\n                \n                    if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                        \n                        evt.target.classList.remove( 'plyr__control--pressed' );\n                        \n                    } else {\n                        \n                        evt.target.classList.add( 'plyr__control--pressed' );\n                        \n                    }\n                    \n                } );\n                \n                // toglle mute/unmute state\n                muteUnmuteBtn.addEventListener( 'click', function( evt ) {\n                    \n                    if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                        \n                        evt.target.classList.remove( 'plyr__control--pressed' );\n                        \n                    } else {\n                        \n                        evt.target.classList.add( 'plyr__control--pressed' );\n                        \n                    }\n                    \n                } );\n                    \n            } ); // end player ready event\n            \n        } );\n        \n    } // end _setupAudioPlayer\n    \n    setProgram() {\n        \n        let self = this;\n        \n        if ( self.manifest.ap_custom_themes ) {\n            \n            self.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                \n                return obj.name === self.program.name;\n                \n            } );\n            \n            if ( self.program === undefined ) {\n                \n                self.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                    \n                    return obj.name === self.manifest.ap_logo_default;\n                    \n                } );\n                \n            }\n            \n        }\n        \n        let decorationBar = self._selector( '.program-theme' );\n    \n        self.program.colors.forEach( function( hex ) {\n                        \n            let span = document.createElement( 'span' );\n            span.style.backgroundColor = hex;\n            decorationBar.appendChild( span );\n            \n        } );\n        \n    }\n    \n    hasCoreFeaturesSupport() {\n    \n        if ( !Modernizr.audio && Modernizr.json && Modernizr.svg\n             && Modernizr.csscalc && Modernizr.flexbox ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    hasAppearanceIusses() {\n    \n        if ( !Modernizr.canvas ) {\n            return true;\n        }\n        \n        if ( !Modernizr.cssanimations ) {\n            return true;\n        }\n        \n        if ( !Modernizr.bgsizecover ) {\n            return true\n        }\n        \n        if ( !Modernizr.objectfit ) {\n            return true\n        }\n        \n        return false;\n        \n    }\n    \n    showError( iconStr, titleStr, bodyStr ) {\n    \n        let splash = this._selector( this.el.splash );\n        let main = this._selector( this.el.main );\n        let error = this._selector( this.el.error );\n        let icon = this._selector( this.el.errorIcon );\n        let title = this._selector( this.el.errorTitle );\n        let body = this._selector( this.el.errorBody );\n        \n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = false;\n        \n        icon.innerHTML = iconStr;\n        title.innerHTML = titleStr;\n        body.innerHTML = bodyStr;\n        \n        splash.style.display = 'none';\n        main.style.display = 'none';\n        \n        error.style.display = 'flex';\n        error.setAttributeNode( ariaHidden );\n        \n        this._fadeIn( error );\n        \n    }\n    \n    showWarning( str ) {\n    \n        let self = this;\n        let warning = self._selector( self.el.warning );\n        let hideTime = 6000;\n        \n        warning.innerHTML = str;\n        warning.style.display = 'block';\n        \n        self._fadeIn( warning );\n        \n        window.setTimeout( function() {\n            \n            self._fadeOut( warning, function() {\n                \n                warning.innerHTML = '';\n                warning.style.display = 'none';\n                \n            } );\n            \n        }, hideTime );\n        \n    }\n    \n    hideSplash() {\n    \n        let splash = this._selector( this.el.splash );\n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = true;\n        \n        splash.classList.add( 'hide-splash' );\n        splash.setAttributeNode( ariaHidden );\n        \n    }\n    \n    showProfile() {\n        \n        let self = this;\n        let authorProfile = this._selector( this.el.profileDisplay );\n        let closeBtn = this._selector( this.el.closeProfileBtn );\n        \n        authorProfile.style.display = 'block';\n        this._fadeIn( authorProfile );\n        \n        closeBtn.addEventListener( 'click', function() {\n            self.closeProfile();\n        }, {once: true} );\n\n    }\n    \n    closeProfile() {\n        \n        let authorProfile = this._selector( this.el.profileDisplay );\n        \n        this._fadeOut( authorProfile, function() {\n            \n            authorProfile.style.display = '';\n            \n        } );\n\n    }\n    \n    _setShowProfileListener() {\n        \n        let self = this;\n        let showProfileBtn = this._selector( this.el.showProfileBtn );\n        \n        showProfileBtn.addEventListener( 'click', function() {\n            \n            self.showProfile();\n            \n        } );\n        \n    }\n    \n    _expandTracksToggle() {\n        \n        let self = this;\n        let expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        expandTracksBtn.addEventListener( 'click', function() {\n            \n            let trackList = self._selector( self.el.trackList );\n            let minDisplay = self._selector( self.el.miniDisplay );\n            \n            if ( trackList.style.display == 'none' || trackList.style.display == '' ) {\n                \n                trackList.style.display = 'block';\n                minDisplay.style.display = 'none';\n                \n                self._hideCCSpectrum();\n                \n                self._slideDown( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.add( 'rotate' );\n                    \n                } );\n                \n            } else {\n                \n                trackList.style.display = 'none';\n                minDisplay.style.display = 'flex';\n                \n                self._slideUp( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.remove( 'rotate' );\n                    self._CCSpectrumDisplays();\n                    \n                } );\n                \n            }\n            \n        } );\n        \n    }\n    \n    toggleCC() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        ccToggle.classList.add( 'disabled' );\n        spectrumToggle.classList.remove( 'disabled' );\n        \n        captionDisplay.classList.add( 'active' );\n        spectrumDisplay.classList.remove( 'active' );\n        \n    }\n    \n    toggleSpectrum() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        spectrumToggle.classList.add( 'disabled' );\n        ccToggle.classList.remove( 'disabled' );\n        \n        spectrumDisplay.classList.add( 'active' );\n        captionDisplay.classList.remove( 'active' );\n        \n    }\n    \n    _CCSpectrumDisplays() {\n        \n        let self = this;\n        let toggles = this._selector( this.el.bodyControls );\n        let displays = this._selector( this.el.ccSpecDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        if ( toggles.style.display === 'none' ) {\n            \n            toggles.style.display = '';\n            displays.style.display = '';\n            \n        } else {\n\n            self.toggleCC();\n            \n        }\n        \n        ccToggle.addEventListener( 'click', function() {\n            self.toggleCC();\n        } );\n        \n        spectrumToggle.addEventListener( 'click', function() {\n            self.toggleSpectrum();\n        } );\n        \n    }\n    \n    _hideCCSpectrum() {\n        \n        let displays = this._selector( this.el.ccSpecDisplay );\n        let toggles = this._selector( this.el.bodyControls );\n        \n        toggles.style.display = 'none';\n        displays.style.display = 'none';\n        \n    }\n    \n    /*** HELPER METHODS ***/\n    \n    _selector( str ) {\n        return document.querySelector( str );\n    }\n    \n    _xmlSelector( xml, str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return xml.querySelectorAll( str );\n            \n        } else {\n            \n            return xml.querySelector( str );\n            \n        }\n        \n    }\n    \n    _isEmpty( str ) {\n        return str === '' || undefined || null;\n    }\n    \n    _requestFile( url, callback ) {\n        \n        let self = this;\n        let body = self._selector( 'body' );\n        let request = new XMLHttpRequest();\n        \n        request.open( 'GET', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                callback( this );\n                \n            } else {\n                \n                body.innerHTML += '<div class=\"error\">Error ' + this.status + ' while loading <code>' + url + '</code></div>';\n                \n            }\n            \n            request.abort();\n            \n        };\n        \n        request.onerror = function() {\n            \n            body.innerHTML += '<div class=\"error\">Connection Error. Check your network.</div>';\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    cleanArray( arr ) {\n    \n        arr.forEach( function( value, index ) {\n            \n            if ( value === '' ) {\n                arr.splice( index, 1 );\n            }\n            \n        } );\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\.\\w*/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        return arr;\n        \n    }\n    \n    /*** ANIMATION METHODS ***/\n    \n    _marqueeEl( el ) {\n        \n        let self = this;\n        \n        if ( el.offsetWidth < el.scrollWidth ) {\n            \n            let runTime = 15500;\n            let startTime = 5000;\n            \n            let start = window.setInterval( function() {\n                \n                el.parentNode.classList.add( 'marquee' );\n                \n                el.style.width = el.scrollWidth + 'px';\n                \n                window.clearInterval( start );\n                \n                let stop = window.setTimeout( function() {\n                    \n                    el.style.width = 'initial';\n                    \n                    self._fadeIn( el );\n                    \n                    el.parentNode.classList.remove( 'marquee' );\n                    window.clearTimeout( stop );\n                    self._marqueeEl( el );\n                    \n                }, runTime );\n                \n            }, startTime );\n            \n        }\n        \n    }\n    \n    _fadeIn( el, callback ) {\n        \n        el.classList.remove( 'fadeOut' );\n        el.classList.add( 'fadeIn' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeOut( el, callback ) {\n\n        el.classList.remove( 'fadeIn' );\n        el.classList.add( 'fadeOut' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.classList.remove( 'fadeIn' );\n        evt.target.classList.remove( 'fadeOut' );\n        evt.target.removeEventListener( evt.target.params._event, this._fadeCallback );\n        \n    }\n    \n    _slideDown( el, callback ) {\n        \n        el.classList.add( 'slideDown' );\n        el.classList.remove( 'slideUp' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideUp( el, callback ) {\n        \n        el.classList.add( 'slideUp' );\n        el.classList.remove( 'slideDown' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.removeEventListener( evt.target.params._event, this._slideCallback );\n        \n    } \n    \n    _whichAnimationEvent() {\n        \n        let ani;\n        let el = document.createElement( 'fakeelement' );\n        let animations = {\n            'animation': 'animationend',\n            'OAnimation': 'oAnimationEnd',\n            'MozAnimation': 'animationend',\n            'WebkitAnimation': 'webkitAnimationEnd'\n        }\n        \n        for ( ani in animations ) {\n            \n            if ( el.style[ani] !== undefined ) {\n                \n                return animations[ani];\n                \n            }\n            \n        }\n        \n    }\n    \n} // end APlayer class\n\nlet AP = null;\n\n/**** ON DOM READY ****/\n( function ready( fn ) {\n    \n    if ( document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading' ) {\n        \n        fn();\n        \n    } else {\n        \n        document.addEventListener( 'DOMContentLoaded', fn );\n        \n    }\n    \n} )( function() {\n    \n    AP = new APlayer();\n    AP.go();\n    \n} );\n"]}