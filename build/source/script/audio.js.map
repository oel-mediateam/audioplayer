{"version":3,"sources":["../../../source/script/audio-dev.js"],"names":["APlayer","_classCallCheck","this","el","splash","splashTitle","splashSubtitle","splashAuthor","splashLength","startBtn","resumeBtn","dwnldBtn","dwnldBtnMenu","mainDwnldBtn","main","mainBody","showProfileBtn","closeOverlayBtn","overlayDisplay","overlayDisplayContent","overlayDisplaySpinner","currentPic","trackTitle","trackAuthor","currentTrackNum","totalTracks","miniDisplay","upNextTrack","trackList","trackListItem","expandTracksBtn","next","previous","warning","captionBtn","error","errorIcon","errorTitle","errorBody","playerId","copyright","manifest","album","url","program","downloads","currentTrack","sameAuthor","sameAuthorLoaded","analyticsOn","player","reference","names","_parseUri","window","location","href","fileName","marquee","start","stop","getManifest","self","manifestUrl","_selector","getAttribute","_requestFile","xhr","JSON","parse","response","ap_root_directory","length","setUIs","templateUrl","body","res","replace","innerHTML","_checkSupport","_setStartResumeListeners","_expandDownloadBtnMenu","expandTracksToggle","_setShowProfileListener","getAlbum","tracks","Array","prototype","forEach","call","track","addEventListener","evt","target","className","nodeName","currentTarget","setTrack","Number","preventDefault","btn","querySelector","menu","setAttribute","hideSplash","sendEventToGA","Modernizr","localstorage","savedData","localStorage","getItem","time","style","display","xml","responseXML","xmlSettings","_xmlSelector","xmlSetup","xmlTracks","settings","accent","splashFormat","trackImgFormat","analytics","version","title","textContent","subtitle","author","authorProfile","_isEmpty","undefined","name","toLowerCase","course","obj","src","img","_sanitize","push","ap_google_tracking_id","addGATracking","setData","_setupAudioPlayer","num","seektime","currentTitle","_loadAuthorPic","parentNode","classList","remove","add","upNextTrackTitle","playing","captionUrl","_fileExists","exist","source","type","sources","kind","label","srclang","default","on","_handlePlayerReady","play","document","getElementsByTagName","currentTime","setTimeout","setItem","stringify","_stopMarquee","_marqueeEl","localPicUrl","centralPicUrl","ap_author_directory","authorPic","Image","appendChild","ap_download_files","file","format","link","createElement","dwnldFile","bgUrl","ap_splash_directory","splashBg","head","bgImg","backgroundImage","textColor","_colorContrast","accentUrl","accentStyle","trackListDisplay","indx","li","a","numSpan","titleWrprSpan","titleSpan","button","svg","createElementNS","use","setAttributeNS","_openTrackList","_trackListItemListener","date","Date","year","getFullYear","ap_copyright","_setProgram","plyrControlsUrl","controls","useLocalStorage","Plyr","hideControls","autoplay","volume","clickToPlay","fullscreen","enabled","fallback","iosNative","captions","active","language","update","resetOnEnd","storage","key","playpauseBtn","muteUnmuteBtn","playbackRateBtn","downloadBtn","i","options","value","speed","selectedIndex","nextBtn","prevBtn","closeBtn","h4","ul","_fadeIn","closeOverlay","once","_closeTrackList","trackNum","pTime","duration","contains","restart","ap_custom_themes","find","ap_logo_default","decorationBar","colors","hex","span","backgroundColor","hasCoreFeaturesSupport","showError","hasAppearanceIusses","showWarning","audio","json","csscalc","flexbox","cssanimations","bgsizecover","objectfit","iconStr","titleStr","bodyStr","icon","ariaHidden","createAttribute","setAttributeNode","str","hideTime","_fadeOut","authorOverlayDisplay","index","currentAuthor","currentProfile","profileUrl","that","spinner","send","callback_name","callbackName","on_success","onSuccess","on_timeout","onTimeout","timeout","timeout_trigger","data","clearTimeout","script","async","_setProfile","profile","bio","authoroverlayDisplayContent","showProfile","minDisplay","_slideDown","setProperty","_slideUp","all","querySelectorAll","trim","callback","request","XMLHttpRequest","open","onload","status","abort","onerror","found","arr","splice","test","pop","parts","split","lastIndexOf","_cleanArray","rgb","_hexToRGB","Math","round","parseInt","bigint","join","id","s","o","g","r","m","q","arguments","l","insertBefore","ga","appName","appVersion","screenName","category","action","offsetWidth","scrollWidth","runTime","startTime","setInterval","width","clearInterval","animationEvt","_whichAnimationEvent","params","_event","_callback","_fadeCallback","removeEventListener","_slideCallback","ani","animations","animation","OAnimation","MozAnimation","WebkitAnimation","ready","fn","attachEvent","readyState"],"mappings":"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","file":"audio.js","sourcesContent":["/*\n * Audio Player\n *\n * @author: Ethan Lin\n * @url: https://github.com/oel-mediateam/audioplayer\n * @version: 2.0.0\n *\n * @license: The MIT License (MIT)\n * Copyright (c) 2014 - 2018 Media Serivces\n *\n */\n\n'use strict';\n\n// audio player class\nclass APlayer {\n    \n    constructor() {\n        \n        // elements of the audio player\n        this.el = {\n            splash: '#ap-splash',\n            splashTitle: '#ap-splash .cover-info .title',\n            splashSubtitle: '#ap-splash .cover-info .subtitle',\n            splashAuthor: '#ap-splash .cover-info .author',\n            splashLength: '#ap-splash .cover-info .length',\n            startBtn: '#ap-start-btn',\n            resumeBtn: '#ap-resume-btn',\n            dwnldBtn: '#ap-dwnld-btn',\n            dwnldBtnMenu: '#ap-dwnld-btn .dropdown-content',\n            mainDwnldBtn: '#ap-download-cntrl',\n            main: '#ap-main',\n            mainBody: '#ap-main .body',\n            showProfileBtn: '#show-profile',\n            closeOverlayBtn: '#overlay-close-btn',\n            overlayDisplay: '#overlay-content',\n            overlayDisplayContent: '#overlay-content .content',\n            overlayDisplaySpinner: '#overlay-content .spinner',\n            currentPic: '.head .track-img button',\n            trackTitle: '.track-info .title-wrapper .title',\n            trackAuthor: '.track-info .author',\n            currentTrackNum: '.track-info .meta .current',\n            totalTracks: '.track-info .meta .total',\n            miniDisplay: '.track-list .minimized-display',\n            upNextTrack: '.track-list .minimized-display .ap_up_next_title',\n            trackList: '.track-list .tracks',\n            trackListItem: '.track-list .tracks li .ap-track',\n            expandTracksBtn: '.track-list .expand-btn',\n            next: '#ap-next',\n            previous: '#ap-previous',\n            warning: 'body .warning-msg',\n            captionBtn: '#ap-caption',\n            error: '#ap-error',\n            errorIcon: '#ap-error .icon',\n            errorTitle: '#ap-error .title',\n            errorBody: '#ap-error .body',\n            playerId: '#player',\n            copyright: '.copyright p'\n        };\n        \n        // manifest object to hold data from the manifest JSON file\n        this.manifest ={};\n        \n        // album object to hold data from the album XML file\n        this.album = {\n            url: 'assets/album.xml',\n            program: {},\n            downloads: [],\n            currentTrack: 0,\n            sameAuthor: true,\n            sameAuthorLoaded: false,\n            analyticsOn: false\n        };\n        \n        // holds the reference to the audio player instance\n        this.player = null;\n        \n        // reference object to hold reference values\n        this.reference = {\n            names: this._parseUri( window.location.href ),\n            fileName: 'album'\n        };\n        \n        // marquee object to hold start and stop timers\n        this.marquee ={\n            start: null,\n            stop: null\n        };\n        \n        // start the player by loading and getting the manifest\n        this.getManifest();\n        \n    }\n    \n    // function to get the manifest data and then set the player UIs\n    getManifest() {\n        \n        const self = this;\n        let manifestUrl = self._selector( '#ap-manifest' ).getAttribute( 'href' );\n        \n        self._requestFile( manifestUrl, function( xhr ) {\n            \n            self.manifest = JSON.parse( xhr.response );\n            \n            if ( self.manifest.ap_root_directory.length === 0 ) {\n        \n                self.manifest.ap_root_directory = 'source/';\n                \n            }\n            \n            self.setUIs();\n            \n        } );\n        \n    }\n    \n    // function to set the player UIs from loading the template file and then\n    // check for support, bind event listners, and get album data\n    setUIs() {\n        \n        const self = this;\n        let templateUrl = self.manifest.ap_root_directory + 'script/templates/apui.tpl';\n        \n        self._requestFile( templateUrl, function( xhr ) {\n            \n            let body = self._selector( 'body' );\n            const res = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n            \n            body.innerHTML += res;\n            \n            self._checkSupport();\n            self._setStartResumeListeners();\n            self._expandDownloadBtnMenu();\n            self.expandTracksToggle();\n            self._setShowProfileListener();\n            \n            self.getAlbum();\n            \n        } );\n        \n    }\n    \n    // \"private\" function to add track list click event listener\n    _trackListItemListener() {\n        \n        const self = this;\n        let tracks = self._selector( self.el.trackListItem, true );\n        \n        Array.prototype.forEach.call( tracks, function( track ) {\n            \n            track.addEventListener( 'click', function( evt ) {\n                \n                if ( evt.target.className !== 'track-download' &&\n                evt.target.nodeName !== 'svg' && evt.target.nodeName !== 'use' ) {\n                    \n                    self.album.currentTrack = evt.currentTarget.getAttribute( 'data-index' );\n                    self.setTrack( Number( self.album.currentTrack ) );\n                    evt.preventDefault();\n                    \n                }\n                \n            } );\n            \n        } );\n        \n    }\n    \n     // \"private\" function to add expand download button event listeners\n    _expandDownloadBtnMenu() {\n        \n        const self = this;\n        \n        let dwnldBtn = self._selector( self.el.dwnldBtn );\n        let btn = dwnldBtn.querySelector( 'button' );\n        let menu = self._selector( self.el.dwnldBtnMenu );\n        \n        dwnldBtn.addEventListener( 'mouseenter', function() {\n            \n            btn.setAttribute( 'aria-expanded', true );\n            menu.setAttribute( 'aria-expanded', true );\n            \n        } );\n        \n        dwnldBtn.addEventListener( 'mouseleave', function() {\n            \n            btn.setAttribute( 'aria-expanded', false );\n            menu.setAttribute( 'aria-expanded', false );\n            \n        } );\n        \n    }\n    \n     // \"private\" function to add start and resume click event listeners\n    _setStartResumeListeners() {\n        \n        const self = this;\n        \n        let startBtn = self._selector( self.el.startBtn );\n        \n        startBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            self.sendEventToGA( 'StartBtn', 'click', self.reference.fileName );\n            \n            self.setTrack( self.album.currentTrack );\n            \n        } );\n        \n        if ( Modernizr.localstorage ) {\n            \n            let resumeBtn = self._selector( self.el.resumeBtn );\n            \n            const savedData = JSON.parse( window.localStorage.getItem( 'ap-player' ) );\n            \n            if ( savedData !== null ) {\n                \n                if ( savedData.track >= 1 || savedData.time > 0 ) {\n                    \n                    resumeBtn.style.display = 'block';\n                    \n                    resumeBtn.addEventListener( 'click', function() {\n                        \n                        self.sendEventToGA( 'ResumeBtn', 'click', self.reference.fileName );\n                        \n                        self.hideSplash();\n                        self.setTrack( savedData.track, savedData.time );\n                        \n                    } );\n                    \n                }\n                \n            }\n            \n        }\n        \n    }\n    \n     // function to get the data from the album XML file and set the data to it respective UIs and set up the audio player\n    getAlbum() {\n        \n        const self = this;\n        \n        self._requestFile( self.album.url, function( xhr ) {\n            \n            const xml = xhr.responseXML;\n            const xmlSettings = self._xmlSelector( xml, 'album' );\n            const xmlSetup = self._xmlSelector( xml, 'setup' );\n            const xmlTracks = self._xmlSelector( xml, 'track', true );\n            \n            // settings\n            self.album.settings = {};\n            self.album.settings.accent = xmlSettings.getAttribute( 'accent' );\n            self.album.settings.splashFormat = '.' + xmlSettings.getAttribute( 'splashImgFormat' );\n            self.album.settings.trackImgFormat = '.' + xmlSettings.getAttribute( 'trackImgFormat' );\n            self.album.settings.analytics = xmlSettings.getAttribute( 'analytics' );\n            self.album.settings.version = xmlSettings.getAttribute( 'xmlVersion' );\n            \n            // setup\n            self.album.title = self._xmlSelector( xmlSetup, 'title' ).textContent;\n            self.album.subtitle = self._xmlSelector( xmlSetup, 'subtitle' ).textContent;\n            self.album.author = self._xmlSelector( xmlSetup, 'author' ).getAttribute( 'name' );\n            self.album.authorProfile = self._xmlSelector( xmlSetup, 'author' ).textContent;\n            self.album.length = self._xmlSelector( xmlSetup, 'length' ).textContent;\n            \n            // set program\n            if ( self._isEmpty( xmlSetup.getAttribute( 'program' ) ) ) {\n                \n                if ( self.reference.names[3] !== undefined ) {\n                    \n                    self.album.program.name = self.reference.names[3].toLowerCase();\n                    \n                }\n                \n            } else {\n                \n                self.album.program.name = xmlSetup.getAttribute( 'program' ).toLowerCase();\n                \n            }\n            \n            // set course\n            if ( !self._isEmpty( xmlSetup.getAttribute( 'course' ) ) ) {\n                \n                self.album.program.course = xmlSetup.getAttribute( 'course' );\n                \n            }\n            \n            // track(s)\n            self.album.tracks = [];\n            \n            Array.prototype.forEach.call( xmlTracks, function( el) {\n                \n                let obj = {};\n            \n                obj.src = el.getAttribute( 'src' );\n                obj.title = el.querySelector( 'title' ).innerHTML;\n                obj.author = el.querySelector( 'author' ).getAttribute( 'name' );\n                obj.authorProfile = el.querySelector( 'author' ).innerHTML;\n                \n                if ( self._isEmpty( obj.author ) ) {\n                    \n                    obj.author = self.album.author;\n                    \n                }\n                \n                if ( obj.author !== self.album.author ) {\n                    self.album.sameAuthor = false;\n                }\n                \n                if ( self._isEmpty( obj.author ) ) {\n                    \n                    obj.img = self._sanitize( self.album.author ) + self.album.settings.trackImgFormat;\n                    \n                } else {\n                    \n                    obj.img = self._sanitize( obj.author ) + self.album.settings.trackImgFormat;\n                    \n                }\n\n                self.album.tracks.push( obj );\n                \n            } );\n            \n            if ( self.album.settings.analytics === \"on\" || \n            self.album.settings.analytics === \"yes\" ) {\n                \n                if ( !self._isEmpty( self.manifest.ap_google_tracking_id ) ) {\n                    \n                    self.addGATracking( self.manifest.ap_google_tracking_id, self.album.settings.version );\n                    \n                }\n                \n            }\n            \n            self.setData();\n            self._setupAudioPlayer();\n            \n        } );\n        \n    }\n    \n    // function to set track\n    setTrack( num, seektime ) {\n        \n        seektime = typeof seektime !== 'undefined' ? seektime : 0;\n        \n        // hold the class\n        const self = this;\n        \n        // update current track\n        num = Number( num );\n        self.album.currentTrack = num;\n        \n        // display title\n        let currentTitle = self._selector( self.el.trackTitle );\n            \n        currentTitle.innerHTML = self.album.tracks[num].title;\n        \n        // display author\n        let currentAuthor = self._selector( self.el.trackAuthor );\n        \n        currentAuthor.innerHTML = self.album.tracks[num].author;\n        \n        // load author picture if the track author is different\n        if ( !self.album.sameAuthor ) {\n\n            self._loadAuthorPic( self.album.tracks[num] );\n            \n        }\n        \n        // load author picture once if same author\n        if ( self.album.sameAuthor && self.album.sameAuthorLoaded === false ) {\n                \n            self._loadAuthorPic( self.album.tracks[num] );\n            self.album.sameAuthorLoaded = true;\n            \n        }\n        \n        // if more than one track\n        if ( self.album.tracks.length > 1 ) {\n            \n            // display and get current track number\n            let currentTrack = self._selector( self.el.currentTrackNum );\n            currentTrack.innerHTML = num + 1;\n            \n            let totalTracks = self._selector( self.el.totalTracks );\n            totalTracks.innerHTML = self.album.tracks.length;\n            \n            // add active class to current track in list\n            const tracks = self._selector( self.el.trackListItem, true );\n            \n            Array.prototype.forEach.call( tracks, function( track ) {\n                track.parentNode.classList.remove( 'active' );\n            } );\n            \n            tracks[num].parentNode.classList.add( 'active' );\n            \n        }\n        \n        // display next track title\n        let upNextTrackTitle = self._selector( self.el.upNextTrack );\n        \n        if ( self.album.tracks.length > 1 && num < self.album.tracks.length - 1 ) {\n            \n            upNextTrackTitle.innerHTML = self.album.tracks[num + 1].title;\n            \n        }\n        \n        // play the audio if the player is ready after setting source\n        if ( self.player !== null ) {\n            \n            if ( self.player.playing ) {\n                \n                self.player.stop();\n                \n            }\n            \n            const captionUrl = 'assets/audio/' + self.album.tracks[num].src + '.vtt';\n            \n            self._fileExists( captionUrl, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    self.player.source = {\n                \n                        type: 'video',\n                        title: self.album.tracks[num].title,\n                        sources: [\n                            \n                            {\n                                \n                                src: 'assets/audio/' + self.album.tracks[num].src + '.mp3',\n                                type: 'audio/mp3'\n                                \n                            }\n                            \n                        ],\n                        tracks: [\n                            \n                            {\n                                kind: 'captions',\n                                label: 'English',\n                                srclang: 'en',\n                                src: 'assets/audio/' + self.album.tracks[num].src + '.vtt',\n                                default: true\n                            }\n                            \n                        ]\n                        \n                    };\n                    \n                } else {\n                    \n                    self.player.source = {\n                \n                        type: 'video',\n                        title: self.album.tracks[num].title,\n                        sources: [\n                            \n                            {\n                                \n                                src: 'assets/audio/' + self.album.tracks[num].src + '.mp3',\n                                type: 'audio/mp3'\n                                \n                            }\n                            \n                        ]\n                        \n                    };\n                    \n                }\n                \n                self.player.on( 'ready', function() {\n                \n                    self._handlePlayerReady();\n                    \n                    self.player.play();\n                    \n                    if ( seektime > 0 ) {\n                        \n                        document.getElementsByTagName('video')[0].currentTime = seektime;\n                        \n                    } else {\n                        \n                        window.setTimeout( function() {\n                        \n                            if ( Modernizr.localstorage ) {\n                                \n                                window.localStorage.setItem( 'ap-player', JSON.stringify( {track: num, time: seektime } ) );\n                                \n                            }\n                            \n                        }, 3000 );\n                        \n                    }\n                    \n                } );\n                \n            } );\n            \n        }\n        \n        // scroll the track title is applicable\n        self._stopMarquee( currentTitle );\n        self._marqueeEl( currentTitle );\n        \n    }\n    \n     // \"private\" function to determind and load the author profile image\n    _loadAuthorPic( track ) {\n        \n        const self = this;\n        let currentPic = self._selector( self.el.currentPic );\n        let localPicUrl = 'assets/images/' + track.img;\n        let centralPicUrl = self.manifest.ap_author_directory + self._sanitize( track.author ) + self.album.settings.trackImgFormat;\n        let authorPic = new Image();\n        \n        authorPic.src = self.manifest.ap_root_directory + 'images/pic.png';\n        \n        self._fileExists( localPicUrl, function( exist ) {\n            \n            if ( exist ) {\n                \n                authorPic.src = localPicUrl;\n                \n            } else {\n                \n                self._fileExists( centralPicUrl, function( exist ) {\n    \n                    if ( exist ) {\n                        \n                        authorPic.src = centralPicUrl;\n                        \n                    }\n                    \n                } );\n                \n            }\n            \n        } );\n        \n        currentPic.innerHTML = '';\n        currentPic.appendChild( authorPic );\n        \n    }\n    \n    // function to set the album data to their respective UI elements\n    setData() {\n        \n        const self = this;\n        \n        // DOM head elements\n        let pageTitle = this._selector( 'title' );\n        \n        pageTitle.innerHTML = this.album.title;\n        \n        // splash screen\n        let title = this._selector( this.el.splashTitle );\n        let subtitle = this._selector( this.el.splashSubtitle );\n        let author = this._selector( this.el.splashAuthor );\n        let length = this._selector( this.el.splashLength );\n        \n        title.innerHTML = this.album.title;\n        subtitle.innerHTML = this.album.subtitle;\n        author.innerHTML = this.album.author;\n        length.innerHTML = this.album.length;\n        \n        // splash download menu list\n        if ( self.reference.names.length > 0 ) {\n            \n            this.reference.fileName = self.reference.names[self.reference.names.length - 1];\n            \n        }\n        \n        Array.prototype.forEach.call( this.manifest.ap_download_files, function( el ) {\n            \n            let file = self.reference.fileName + '.' + el.format;\n            \n            self._fileExists( file, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let link = document.createElement( 'a' );\n            \n                    link.href = file;\n                    link.setAttribute( 'role', 'menuitem' );\n                    link.setAttribute( 'download', file );\n                    link.innerHTML = el.label;\n                    \n                    link.addEventListener( 'click', function() {\n                        \n                        self.sendEventToGA( el.label + 'DwnldLink', 'click', self.reference.fileName );\n                        \n                    } );\n                    \n                    let dwnldMenu = self._selector( self.el.dwnldBtnMenu );\n                    dwnldMenu.appendChild( link );\n                    \n                    let dwnldBtn = self._selector( self.el.dwnldBtn );\n                    dwnldBtn.setAttribute( 'aria-hidden', false );\n                    dwnldBtn.style.display = 'block';\n                    \n                    let dwnldFile = {\n                        name: el.label,\n                        url: file\n                    };\n                    \n                    self.album.downloads.push( dwnldFile );\n                    \n                }\n                \n            } );\n            \n        } );\n        \n        // splash background image\n        if ( !this._isEmpty( this.album.program.name ) ) {\n            \n            let bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/default' + this.album.settings.splashFormat;\n            \n            if ( !this._isEmpty( self.album.program.course ) ) {\n                \n                bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/' + this.album.program.course + this.album.settings.splashFormat;\n                \n            }\n            \n            this._fileExists( bgUrl, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let splashBg = self._selector( self.el.splash );\n                    let head = self._selector( 'head' );\n                    let bgImg = 'url(\"' + bgUrl + '\")';\n                    \n                    splashBg.style.backgroundImage = bgImg;\n            \n                    // change the bg in the ap-main:before as well\n                    let style = document.createElement( 'style' );\n                    \n                    style.setAttribute( 'type', 'text/css' );\n                    style.innerHTML = '#ap-main:before{background-image: ' + bgImg + ' !important;}';\n                    \n                    head.appendChild( style );\n                    \n                }\n                \n            } );\n            \n        }\n        \n        // load accent\n        if ( !this._isEmpty( self.album.settings.accent ) ) {\n            \n            let textColor = self._colorContrast( self.album.settings.accent );\n            let accentUrl = this.manifest.ap_root_directory + 'script/templates/accent_css.tpl';\n            \n            this._requestFile( accentUrl, function( xhr ) {\n                \n                let accentStyle = xhr.response.replace( /\\{([accent)]+)\\}/ig, self.album.settings.accent );\n                \n                accentStyle = accentStyle.replace( /\\{([accentText)]+)\\}/ig, textColor );\n                \n                let head = self._selector( 'head' );\n                let style = document.createElement( 'style' );\n                \n                style.setAttribute( 'type', 'text/css' );\n                style.innerHTML = accentStyle;\n                \n                head.appendChild( style );\n                \n            } );\n            \n        }\n        \n        // set tracks\n        if ( this.album.tracks.length > 1 ) {\n            \n            let trackListDisplay = this._selector( this.el.trackList );\n            \n            Array.prototype.forEach.call( this.album.tracks, function( el, indx ) {\n                \n                let li = document.createElement( 'li' );\n                let a = document.createElement( 'a' );\n                \n                a.classList.add( 'ap-track' );\n                a.href = 'javascript:void(0);';\n                a.setAttribute( 'data-index', indx );\n                \n                let numSpan = document.createElement( 'span' );\n                \n                numSpan.classList.add( 'track-num' );\n                numSpan.innerHTML = indx + 1 + '.';\n                \n                let titleWrprSpan = document.createElement( 'span' );\n                \n                titleWrprSpan.classList.add( 'track-title-wrapper' );\n                \n                let titleSpan = document.createElement( 'span' );\n                \n                titleSpan.classList.add( 'track-title' );\n                titleSpan.setAttribute( 'title', el.title );\n                titleSpan.innerHTML = el.title;\n                \n                titleWrprSpan.appendChild( titleSpan );\n                \n                if ( !self.album.sameAuthor ) {\n                    \n                    let img = document.createElement( 'img' );\n                    let localPicUrl = 'assets/images/' + self.album.tracks[indx].img;\n                    let centralPicUrl = self.manifest.ap_author_directory + self._sanitize( self.album.tracks[indx].author ) + self.album.settings.trackImgFormat;\n                    \n                    img.classList.add( 'track-img' );\n                    img.src = self.manifest.ap_root_directory + 'images/pic.png';\n        \n                    self._fileExists( localPicUrl, function( exist ) {\n                        \n                        if ( exist ) {\n                            \n                            img.src = localPicUrl;\n                            \n                        } else {\n                            \n                            self._fileExists( centralPicUrl, function( exist ) {\n                \n                                if ( exist ) {\n                                    \n                                    img.src = centralPicUrl;\n                                    \n                                }\n                                \n                            } );\n                            \n                        }\n                        \n                    } );\n                    \n                    a.appendChild( img );\n                    \n                }\n                \n                a.appendChild( numSpan );\n                a.appendChild( titleWrprSpan );\n                \n                // download button\n                let button = document.createElement( 'a' );\n                \n                button.classList.add( 'track-download' );\n                button.setAttribute( 'download', el.src + '.mp3' );\n                button.href = 'assets/audio/' + el.src + '.mp3';\n                button.setAttribute( 'role', 'button' );\n                \n                button.addEventListener( 'click', function() {\n                        \n                    self.sendEventToGA( el.src + 'TrackDwnldLink', 'click', self.reference.fileName );\n                    \n                } );\n                \n                let svg = document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' );\n                \n                svg.classList.add( 'icon' );\n                svg.setAttribute( 'aria-hidden', true );\n                svg.setAttribute( 'viewbox', '0 0 30 30' );\n                \n                let use = document.createElementNS( 'http://www.w3.org/2000/svg', 'use' );\n                \n                use.setAttributeNS( 'http://www.w3.org/1999/xlink', 'href', self.manifest.ap_root_directory + 'images/icons.svg#icon-download' );\n                \n                svg.appendChild( use );\n                button.appendChild( svg );\n                a.appendChild( button );\n                \n                li.appendChild( a );\n                \n                trackListDisplay.appendChild( li );\n                \n            } );\n            \n            self._openTrackList();\n            self._trackListItemListener();\n            \n        } else {\n            \n            this._selector( this.el.main ).classList.add( 'single' );\n            \n        }\n    \n        // copyright\n        let copyright = this._selector( this.el.copyright );\n        let date = new Date();\n        let year = date.getFullYear();\n        \n        copyright.innerHTML += '&copy; ' + year + '. ' + this.manifest.ap_copyright;\n        \n        // program theme\n        this._setProgram();\n        \n    }\n    \n     // \"private\" function to setup the audio player settings\n    _setupAudioPlayer() {\n        \n        const self = this;\n        \n        let plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/single_plyr_controls.tpl';\n        \n        if ( self.album.tracks.length > 1 ) {\n            \n            plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/full_plyr_controls.tpl';\n            \n        }\n        \n        self._requestFile( plyrControlsUrl, function( xhr ) {\n            \n            const controls = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n            \n            let useLocalStorage = false;\n            \n            if ( Modernizr.localstorage ) {\n                useLocalStorage = true;\n            }\n                \n            self.player = new Plyr( self.el.playerId, {\n        \n                controls: controls,\n                hideControls: false,\n                autoplay: false,\n                volume: 0.8,\n                clickToPlay: false,\n                fullscreen: {\n                    enabled: false,\n                    fallback: false,\n                    iosNative: false\n                },\n                captions: {\n                    active: false,\n                    language: 'en',\n                    update: false\n                },\n                resetOnEnd: true,\n                storage: { enabled: useLocalStorage, key: 'plyr' }\n                            \n            } ); \n            \n        } );\n        \n    }\n    \n     // \"private\" function handle player ready event\n    _handlePlayerReady() {\n        \n        const self = this;\n           \n        const playpauseBtn = self._selector( '#ap-playpause' );\n        const muteUnmuteBtn = self._selector( '#ap-muteunmute' );\n        const playbackRateBtn = self._selector( '#ap-playbackRate' );\n        const totalTracks = self.album.tracks.length - 1;\n        const downloadBtn = self._selector( self.el.mainDwnldBtn );\n        const captionBtn = self._selector( self.el.captionBtn );\n        \n        // check playback rate and update playback rate select element\n        for ( var i = 0; i < playbackRateBtn.options.length; i++ ) {\n\n            if ( Number( playbackRateBtn.options[i].value ) === self.player.speed ) {\n                \n                playbackRateBtn.selectedIndex = i;\n                break;\n                \n            }\n            \n        }\n        \n        if ( self.album.tracks.length > 1 ) {\n            \n            const nextBtn = self._selector( self.el.next );\n            const prevBtn = self._selector( self.el.previous );\n            \n            if ( self.album.currentTrack <= 0 ) {\n            \n                prevBtn.setAttribute( 'disabled', true );\n                prevBtn.classList.add( 'disabled' );\n            }\n            \n            if ( self.album.currentTrack >= totalTracks ) {\n                        \n                nextBtn.setAttribute( 'disabled', true );\n                nextBtn.classList.add( 'disabled' );\n                \n            }\n            \n            nextBtn.addEventListener( 'click', function() {\n            \n            \n                if ( self.album.currentTrack < totalTracks ) {\n                    \n                    self.album.currentTrack++;\n                    self.setTrack( self.album.currentTrack );\n                    \n                }\n                \n            } );\n            \n            prevBtn.addEventListener( 'click', function() {\n                \n                if ( self.album.currentTrack > 0 ) {\n                    \n                    self.album.currentTrack--;\n                    self.setTrack( self.album.currentTrack );\n                    \n                }\n                \n            } );\n            \n        }\n        \n        downloadBtn.addEventListener( 'click', function() {\n            \n            let overlayDisplay = self._selector( self.el.overlayDisplay );\n            let overlayDisplayContent = self._selector( self.el.overlayDisplayContent );\n            let closeBtn = self._selector( self.el.closeOverlayBtn );\n            \n            let h4 = document.createElement( 'h4' );\n            \n            h4.innerHTML = \"Downloads\";\n            \n            overlayDisplayContent.appendChild( h4 );\n            \n            let ul = document.createElement( 'ul' );\n            \n            ul.classList.add( 'dwnld-list' );\n            \n            Array.prototype.forEach.call( self.album.downloads, function( obj ) {\n                \n                let li = document.createElement( 'li' );\n                let a = document.createElement( 'a' );\n                \n                a.href = obj.url;\n                a.innerHTML = obj.name;\n                a.setAttribute( 'download', obj.url );\n                \n                a.addEventListener( 'click', function() {\n                        \n                    self.sendEventToGA( obj.name + 'DwnldLink', 'click', self.reference.fileName );\n                    \n                } );\n                \n                li.appendChild( a );\n                ul.appendChild( li );\n                \n            } );\n            \n            overlayDisplayContent.appendChild( ul );\n            \n            overlayDisplay.classList.add( 'small-overlay' );\n            overlayDisplay.style.display = 'block';\n            self._fadeIn( overlayDisplay );\n            \n            closeBtn.addEventListener( 'click', function() {\n                self.closeOverlay();\n            }, {once: true} );\n            \n        } );\n        \n        // check caption\n        if ( self.player.currentTrack >= 0 ) {\n            \n            captionBtn.classList.add( 'plyr__control--pressed' );\n            \n        } else {\n            \n            captionBtn.classList.remove( 'plyr__control--pressed' );\n            \n        }\n        \n        self.player.on( 'captionsenabled', function() {\n            \n            captionBtn.classList.add( 'plyr__control--pressed' );\n            \n            if ( self.album.tracks.length > 1 ) {\n                \n                self._closeTrackList();\n                \n            }\n            \n        } );\n        \n        self.player.on( 'captionsdisabled', function() {\n            \n            captionBtn.classList.remove( 'plyr__control--pressed' );\n            if ( self.album.tracks.length > 1 ) {\n                \n                self._openTrackList();\n                \n            }\n            \n        } );\n        \n        self.player.on( 'playing', function() {\n            \n            playpauseBtn.classList.add( 'plyr__control--pressed' );\n            \n        } );\n        \n        self.player.on( 'pause', function() {\n            \n            playpauseBtn.classList.remove( 'plyr__control--pressed' );\n            \n            if ( Modernizr.localstorage ) {\n                            \n                    window.localStorage.setItem( 'ap-player', JSON.stringify( {track: self.album.currentTrack, time: self.player.currentTime } ) );\n                    \n                }\n            \n        } );\n        \n        if ( Modernizr.localstorage ) {\n            \n            self.player.on( 'timeupdate', function() {\n                \n                let trackNum = Number( self.album.currentTrack ) + 1;\n                let currentTime = self.player.currentTime;\n                let pTime = currentTime / self.player.duration;\n                \n                if ( currentTime >= 3 && currentTime <= 4 ) {\n                    \n                    self.sendEventToGA( 'Playback', 'start', self.reference.fileName + ':track' + trackNum );\n                    \n                }\n                \n                if ( pTime >= 0.45 && pTime <= 0.5 ) {\n                    \n                    window.localStorage.setItem( 'ap-player', JSON.stringify( {track: self.album.currentTrack, time: self.player.currentTime } ) );\n                    \n                    self.sendEventToGA( 'Playback', 'halfway', self.reference.fileName + ':track' + trackNum );\n                    \n                }\n                \n            } );\n        \n        }\n        \n        // on playback end\n        self.player.on( 'ended', function() {\n            \n            let trackNum = Number( self.album.currentTrack ) + 1;\n            \n            if ( playpauseBtn.classList.contains( 'plyr__control--pressed' ) ) {\n            \n                playpauseBtn.classList.add( 'plyr__control--pressed' );\n                \n            }\n            \n            if ( Modernizr.localstorage ) {\n                            \n                window.localStorage.setItem( 'ap-player', JSON.stringify( {track: self.album.currentTrack, time: 0 } ) );\n                \n            }\n            \n            self.sendEventToGA( 'Playback', 'completed', self.reference.fileName + ':track' + trackNum );\n            \n            self.player.restart();\n            \n        } );\n        \n        // change playback rate\n        playbackRateBtn.addEventListener( 'change', function( evt ) {\n            \n            self.player.speed = Number( evt.target.options[evt.target.selectedIndex].value );\n            \n        } );\n        \n        // toglle mute/unmute state\n        muteUnmuteBtn.addEventListener( 'click', function( evt ) {\n            \n            if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                \n                evt.target.classList.remove( 'plyr__control--pressed' );\n                \n            } else {\n                \n                evt.target.classList.add( 'plyr__control--pressed' );\n                \n            }\n            \n        } );\n            \n    } // end player ready event\n    \n    // \"private\" function to set program theme bar\n    _setProgram() {\n        \n        const self = this;\n        \n        if ( self.manifest.ap_custom_themes ) {\n            \n            self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                \n                return obj.name === self.album.program.name;\n                \n            } );\n            \n            if ( self.album.program === undefined ) {\n                \n                self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                    \n                    return obj.name === self.manifest.ap_logo_default;\n                    \n                } );\n                \n            }\n            \n        }\n        \n        let decorationBar = self._selector( '.program-theme' );\n    \n        self.album.program.colors.forEach( function( hex ) {\n                        \n            let span = document.createElement( 'span' );\n            span.style.backgroundColor = hex;\n            decorationBar.appendChild( span );\n            \n        } );\n        \n    }\n    \n    // \"private\" function to check for core feature support from web browser\n    _checkSupport() {\n        \n        if ( this.hasCoreFeaturesSupport() ) {\n        \n            this.showError( '🙈', '', 'Your web browser does not support core audio player features.<br><a href=\"http://outdatedbrowser.com/en\" target=\"_blank\">Please update your web browser.</a>' );\n            return;\n            \n        }\n        \n        if ( this.hasAppearanceIusses() ) {\n        \n            this.showWarning( 'Your web browser does not support some of the player\\'s features. For better viewing experience, try a different web browser.' );\n            \n        }\n        \n    }\n    \n    // function to determine the core feature support\n    hasCoreFeaturesSupport() {\n    \n        if ( !Modernizr.audio && Modernizr.json && Modernizr.json\n             && Modernizr.csscalc && Modernizr.flexbox ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    // function to determine any appearance issues\n    hasAppearanceIusses() {\n    \n        if ( !Modernizr.svg ) {\n            return true;\n        }\n        \n        if ( !Modernizr.cssanimations ) {\n            return true;\n        }\n        \n        if ( !Modernizr.bgsizecover ) {\n            return true\n        }\n        \n        if ( !Modernizr.objectfit ) {\n            return true\n        }\n        \n        return false;\n        \n    }\n    \n    // function to show error\n    showError( iconStr, titleStr, bodyStr ) {\n    \n        let splash = this._selector( this.el.splash );\n        let main = this._selector( this.el.main );\n        let error = this._selector( this.el.error );\n        let icon = this._selector( this.el.errorIcon );\n        let title = this._selector( this.el.errorTitle );\n        let body = this._selector( this.el.errorBody );\n        \n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = false;\n        \n        icon.innerHTML = iconStr;\n        title.innerHTML = titleStr;\n        body.innerHTML = bodyStr;\n        \n        splash.style.display = 'none';\n        main.style.display = 'none';\n        \n        error.style.display = 'flex';\n        error.setAttributeNode( ariaHidden );\n        \n        this._fadeIn( error );\n        \n    }\n    \n    // function to show warning\n    showWarning( str ) {\n    \n        const self = this;\n        let warning = self._selector( self.el.warning );\n        let hideTime = 10000;\n        \n        warning.innerHTML = str;\n        warning.style.display = 'block';\n        \n        self._fadeIn( warning );\n        \n        window.setTimeout( function() {\n            \n            self._fadeOut( warning, function() {\n                \n                warning.innerHTML = '';\n                warning.style.display = 'none';\n                \n            } );\n            \n        }, hideTime );\n        \n    }\n    \n    // function to hide the splash screen\n    hideSplash() {\n    \n        let splash = this._selector( this.el.splash );\n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = true;\n        \n        splash.classList.add( 'hide-splash' );\n        splash.setAttributeNode( ariaHidden );\n        \n    }\n    \n    // function to show author profile\n    showProfile() {\n        \n        const self = this;\n        let authorOverlayDisplay = this._selector( this.el.overlayDisplay );\n        let closeBtn = this._selector( this.el.closeOverlayBtn );\n        let index = Number( self._selector( self.el.currentTrackNum ).innerHTML ) - 1;\n        \n        if ( self.album.tracks.length <= 1 ) {\n            index = 0;\n        }\n        \n        let currentAuthor = self.album.tracks[index].author;\n        let currentProfile = self.album.authorProfile;\n        \n        if ( !self._isEmpty( self.album.tracks[index].authorProfile) ) {\n            \n            currentProfile = self.album.tracks[index].authorProfile;\n            \n        }\n        \n        if ( self._isEmpty( currentProfile ) ) {\n            \n            let profileUrl = self.manifest.ap_author_directory + self._sanitize( currentAuthor ) + '.json?callback=author';\n        \n            let $jsonp = ( function() {\n                \n                let that = {};\n                let spinner = self._selector( self.el.overlayDisplaySpinner );\n                \n                that.send = function( src, options ) {\n            \n                    spinner.classList.add( 'spin' );\n                    \n                    let callback_name = options.callbackName || 'callback',\n                        on_success = options.onSuccess || function() {},\n                        on_timeout = options.onTimeout || function() {},\n                        timeout = options.timeout || 10; // sec\n                \n                    let timeout_trigger = window.setTimeout( function() {\n                        window[callback_name] = function() {};\n                        spinner.classList.remove( 'spin' );\n                        on_timeout();\n                    }, timeout * 1000);\n                    \n                    window[callback_name] = function( data ) {\n                        window.clearTimeout( timeout_trigger );\n                        spinner.classList.remove( 'spin' );\n                        on_success( data );\n                    }\n                    \n                    let script = document.createElement( 'script' );\n                    script.type = 'text/javascript';\n                    script.async = true;\n                    script.src = src;\n                    \n                    document.getElementsByTagName( 'head' )[0].appendChild( script );\n                \n                }\n                \n                return that;\n                \n            } )();\n            \n            $jsonp.send( profileUrl, {\n                \n                callbackName: 'author',\n                onSuccess: function( json ) {\n                    \n                    self._setProfile( json.name, json.profile );\n                },\n                onTimeout: function() {\n                    \n                    self._setProfile( currentAuthor, currentProfile );\n                    \n                },\n                timeout: 5\n                \n            } );\n            \n        } else {\n            \n            self._setProfile( currentAuthor, currentProfile );\n            \n        }\n        \n        authorOverlayDisplay.style.display = 'block';\n        this._fadeIn( authorOverlayDisplay );\n        \n        closeBtn.addEventListener( 'click', function() {\n            self.closeOverlay();\n        }, {once: true} );\n\n    }\n    \n    // \"private\" function to set the author profile\n    _setProfile( author, bio ) {\n        \n        let authoroverlayDisplayContent = this._selector( this.el.overlayDisplayContent );\n        \n        let name = document.createElement( 'h4' );\n                    \n        name.innerHTML = author;\n                        \n        let profile = document.createElement( 'div' );\n        \n        profile.innerHTML = bio;\n        \n        authoroverlayDisplayContent.appendChild( name );\n        authoroverlayDisplayContent.appendChild( profile );\n        \n    }\n    \n    // function to close the overlay screen\n    closeOverlay() {\n        \n        let overlayDisplay = this._selector( this.el.overlayDisplay );\n        let overlayDisplayContent = this._selector( this.el.overlayDisplayContent );\n        \n        this._fadeOut( overlayDisplay, function() {\n            \n            overlayDisplay.style.display = '';\n            \n            overlayDisplayContent.innerHTML = '';\n            overlayDisplay.classList.remove( 'small-overlay' );\n            \n        } );\n\n    }\n    \n    // function to add event listener to show the profile\n    _setShowProfileListener() {\n        \n        const self = this;\n        let showProfileBtn = this._selector( this.el.showProfileBtn );\n        \n        showProfileBtn.addEventListener( 'click', function() {\n            \n            self.showProfile();\n            \n        } );\n        \n    }\n    \n    // function to expand and close the track list\n    expandTracksToggle() {\n        \n        const self = this;\n        const expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        expandTracksBtn.addEventListener( 'click', function() {\n            \n            const trackList = self._selector( self.el.trackList );\n            \n            if ( trackList.style.display == 'none' || trackList.style.display == '' ) {\n                \n                self._openTrackList();\n                \n            } else {\n                \n                self._closeTrackList();\n                \n            }\n            \n        } );\n        \n    }\n    \n    // \"private\" functiont to open the track list\n    _openTrackList() {\n        \n        const self = this;\n        const trackList = self._selector( self.el.trackList );\n        const minDisplay = self._selector( self.el.miniDisplay );\n        const expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        trackList.style.display = 'block';\n        minDisplay.style.display = 'none';\n        \n        self._slideDown( expandTracksBtn.parentNode, function() {\n            \n            expandTracksBtn.classList.add( 'rotate' );\n            trackList.style.setProperty( 'overflow-y', 'auto' );\n            \n        } );\n        \n    }\n    \n    // \"private\" functiont to close the track list\n    _closeTrackList() {\n        \n        const self = this;\n        const trackList = self._selector( self.el.trackList );\n        const minDisplay = self._selector( self.el.miniDisplay );\n        const expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        trackList.style.display = 'none';\n        trackList.style.setProperty( 'overflow-y', 'hidden' );\n        minDisplay.style.display = 'flex';\n        \n        self._slideUp( expandTracksBtn.parentNode, function() {\n            \n            expandTracksBtn.classList.remove( 'rotate' );\n            \n        } );\n        \n    }\n    \n    /*** HELPER FUNCTIONS ***/\n    \n    _selector( str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return document.querySelectorAll( str );\n            \n        } else {\n            \n            return document.querySelector( str );\n            \n        }\n        \n    }\n    \n    _xmlSelector( xml, str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return xml.querySelectorAll( str );\n            \n        } else {\n            \n            return xml.querySelector( str );\n            \n        }\n        \n    }\n    \n    _sanitize( str ) {\n        \n        return str.replace(/[^\\w]/gi, '').toLowerCase();\n    \n    }\n    \n    _isEmpty( str ) {\n        \n        if ( typeof str === 'string' && str.trim() === '' ) {\n            return true;\n        }\n        \n        if ( str === undefined ) {\n            return true;\n        }\n        \n        if ( str ===  null ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    _requestFile( url, callback ) {\n        \n        const self = this;\n        let body = self._selector( 'body' );\n        let request = new XMLHttpRequest();\n        \n        request.open( 'GET', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                callback( this );\n                \n            } else {\n                \n                body.innerHTML += '<div class=\"error\">Error ' + this.status + ' while loading <code>' + url + '</code></div>';\n                \n            }\n            \n            request.abort();\n            \n        };\n        \n        request.onerror = function() {\n            \n            body.innerHTML += '<div class=\"error\">Connection Error. Check your network.</div>';\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _fileExists( url, callback ) {\n        \n        let request = new XMLHttpRequest();\n        let found = false;\n        \n        request.open( 'HEAD', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                found = true;\n                \n            } else {\n                \n                found = false;\n                \n            }\n            \n            callback( found );\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _cleanArray( arr ) {\n    \n        arr.forEach( function( value, index ) {\n            \n            if ( value === '' ) {\n                arr.splice( index, 1 );\n            }\n            \n        } );\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\.\\w*/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\:/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        return arr;\n        \n    }\n    \n    _parseUri( str ) {\n        \n        let parts =  str.split( '?' );\n        let target = parts[0];\n        \n        if ( target.lastIndexOf( '/' ) !== target.length - 1 ) {\n    \t\ttarget += '/';\n    \t}\n    \t\n    \treturn this._cleanArray( target.split( '/' ) );\n        \n    }\n    \n    _colorContrast( hex ) {\n        \n        let rgb = this._hexToRGB( hex ).split( ',' );\n        let contrast = Math.round( ( ( parseInt( rgb[0] ) * 299 ) +\n                      ( parseInt( rgb[1] ) * 587 ) +\n                      ( parseInt( rgb[2] ) * 114 ) ) / 1000 );\n                      \n        return contrast > 125 ? '#000' : '#fff';\n        \n    }\n    \n    _hexToRGB( hex ) {\n        \n        hex = hex.replace( /[^0-9A-F]/gi, '' );\n        \n        let bigint = parseInt( hex, 16 );\n        let r = ( bigint >> 16 ) & 255;\n        let g = ( bigint >> 8 ) & 255;\n        let b = bigint & 255;\n    \n        return [r, g, b].join();\n        \n    }\n    \n    /*** GOOGLE ANALYTICS METHODS ***/\n    \n    // function to add google analytics tracking\n    addGATracking( id, version ) {\n        \n        this.album.analyticsOn = true;\n        \n        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n        \n        ga( 'create', id, 'auto' );\n        ga( 'set', { 'appName': 'Audio Player', 'appVersion': version } );\n        ga( 'send', 'screenview', { screenName: this.reference.fileName } );\n        \n    }\n    \n    sendEventToGA( category, action, label ) {\n        \n        if ( this.album.analyticsOn ) {\n            \n            ga( 'send', 'event', category, action, label, 1, { screenName: this.reference.fileName } );\n            \n        }\n        \n    }\n    \n    /*** ANIMATION METHODS ***/\n    \n    _marqueeEl( el ) {\n        \n        const self = this;\n        \n        if ( el.offsetWidth < el.scrollWidth ) {\n            \n            let runTime = 15500;\n            let startTime = 5000;\n            \n            self.marquee.start = window.setInterval( function() {\n                \n                el.parentNode.classList.remove( 'stop-marquee' );\n                el.parentNode.classList.add( 'marquee' );\n                \n                el.style.width = el.scrollWidth + 'px';\n                \n                window.clearInterval( self.marquee.start );\n                \n                self.marquee.stop = window.setTimeout( function() {\n                     \n                    el.style.width = 'initial';\n                    el.parentNode.classList.remove( 'marquee' );\n                    window.clearTimeout( self.marquee.stop );\n                    \n                    self._fadeIn( el );\n                    self._marqueeEl( el );\n                    \n                }, runTime );\n                \n            }, startTime );\n            \n        }\n        \n    }\n    \n    _stopMarquee( el ) {\n        \n        el.style.width = '';\n        el.parentNode.classList.remove( 'marquee' );\n        el.parentNode.classList.add( 'stop-marquee' );\n        \n        if ( this.marquee.stop !== null ) {\n            window.clearTimeout( this.marquee.stop );\n        }\n        \n        if ( this.marquee.start !== null ) {\n            window.clearInterval( this.marquee.start );\n        }\n        \n    }\n    \n    _fadeIn( el, callback ) {\n        \n        el.classList.remove( 'fadeOut' );\n        el.classList.add( 'fadeIn' );\n        \n        if ( callback !== undefined ) {\n            \n            let animationEvt = this._whichAnimationEvent();\n        \n            el.params = {\n                _event: animationEvt,\n                _callback: callback\n            };\n            \n            el.addEventListener( animationEvt, this._fadeCallback );\n            \n        }\n        \n    }\n    \n    _fadeOut( el, callback ) {\n\n        el.classList.remove( 'fadeIn' );\n        el.classList.add( 'fadeOut' );\n        \n        if ( callback !== undefined ) {\n            \n            let animationEvt = this._whichAnimationEvent();\n        \n            el.params = {\n                _event: animationEvt,\n                _callback: callback\n            };\n            \n            el.addEventListener( animationEvt, this._fadeCallback );\n            \n        }\n        \n    }\n    \n    _fadeCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.classList.remove( 'fadeIn' );\n        evt.target.classList.remove( 'fadeOut' );\n        evt.target.removeEventListener( evt.target.params._event, this._fadeCallback );\n        \n    }\n    \n    _slideDown( el, callback ) {\n        \n        el.classList.add( 'slideDown' );\n        el.classList.remove( 'slideUp' );\n        \n        if ( callback !== undefined ) {\n            \n            let animationEvt = this._whichAnimationEvent();\n        \n            el.params = {\n                _event: animationEvt,\n                _callback: callback\n            };\n            \n            el.addEventListener( animationEvt, this._slideCallback );\n            \n        }\n        \n    }\n    \n    _slideUp( el, callback ) {\n        \n        el.classList.add( 'slideUp' );\n        el.classList.remove( 'slideDown' );\n        \n        if ( callback !== undefined ) {\n            \n            let animationEvt = this._whichAnimationEvent();\n        \n            el.params = {\n                _event: animationEvt,\n                _callback: callback\n            };\n            \n            el.addEventListener( animationEvt, this._slideCallback );\n            \n        }\n        \n    }\n    \n    _slideCallback( evt ) {\n        \n        if ( evt.target.params !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n            evt.target.removeEventListener( evt.target.params._event, this._slideCallback );\n            \n        }\n        \n    } \n    \n    _whichAnimationEvent() {\n        \n        let ani;\n        let el = document.createElement( 'fakeelement' );\n        let animations = {\n            'animation': 'animationend',\n            'OAnimation': 'oAnimationEnd',\n            'MozAnimation': 'animationend',\n            'WebkitAnimation': 'webkitAnimationEnd'\n        }\n        \n        for ( ani in animations ) {\n            \n            if ( el.style[ani] !== undefined ) {\n                \n                return animations[ani];\n                \n            }\n            \n        }\n        \n    }\n    \n} // end APlayer class\n\n// ON DOM READY\n\n( function ready( fn ) {\n    \n    if ( document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading' ) {\n        \n        fn();\n        \n    } else {\n        \n        document.addEventListener( 'DOMContentLoaded', fn );\n        \n    }\n    \n} )( function() {\n    \n    new APlayer();\n    \n} );\n"]}