{"version":3,"sources":["../../../source/script/audio-dev.js"],"names":["APlayer","_classCallCheck","this","el","splash","splashTitle","splashSubtitle","splashAuthor","splashLength","startBtn","resumeBtn","dwnldBtn","dwnldBtnMenu","mainDwnldBtn","main","mainBody","showProfileBtn","closeOverlayBtn","overlayDisplay","overlayDisplayContent","overlayDisplaySpinner","currentPic","trackTitle","trackAuthor","currentTrackNum","totalTracks","miniDisplay","upNextTrack","trackList","trackListItem","expandTracksBtn","next","previous","warning","captionBtn","error","errorIcon","errorTitle","errorBody","playerId","copyright","manifest","album","url","program","downloads","currentTrack","sameAuthor","sameAuthorLoaded","analyticsOn","hasCaption","player","reference","names","_parseUri","window","location","href","fileName","marquee","start","stop","getManifest","self","manifestUrl","_selector","getAttribute","_requestFile","xhr","JSON","parse","response","ap_root_directory","length","setUIs","templateUrl","body","res","replace","innerHTML","_checkSupport","_setStartResumeListeners","_expandDownloadBtnMenu","expandTracksToggle","_setShowProfileListener","getAlbum","tracks","Array","prototype","forEach","call","track","addEventListener","evt","target","className","nodeName","currentTarget","setTrack","Number","preventDefault","btn","querySelector","menu","setAttribute","hideSplash","sendEventToGA","Modernizr","localstorage","savedData","localStorage","getItem","time","style","display","xml","responseXML","xmlSettings","_xmlSelector","xmlSetup","xmlTracks","settings","accent","splashFormat","trackImgFormat","analytics","version","title","textContent","subtitle","author","authorProfile","_isEmpty","undefined","name","toLowerCase","course","obj","src","img","_sanitize","push","ap_google_tracking_id","addGATracking","setData","_setupAudioPlayer","num","seektime","currentTitle","_loadAuthorPic","parentNode","classList","remove","add","upNextTrackTitle","playing","captionUrl","_fileExists","exist","source","type","sources","kind","label","srclang","default","_closeTrackList","_openTrackList","on","_handlePlayerReady","play","toggleCaptions","document","getElementsByTagName","currentTime","setTimeout","setItem","stringify","_stopMarquee","_marqueeEl","localPicUrl","centralPicUrl","ap_author_directory","authorPic","Image","appendChild","ap_download_files","file","format","link","createElement","dwnldFile","bgUrl","ap_splash_directory","splashBg","head","bgImg","backgroundImage","textColor","_colorContrast","accentUrl","accentStyle","trackListDisplay","indx","li","a","numSpan","titleWrprSpan","titleSpan","button","svg","createElementNS","use","setAttributeNS","_trackListItemListener","date","Date","year","getFullYear","ap_copyright","_setProgram","plyrControlsUrl","controls","useLocalStorage","Plyr","hideControls","autoplay","volume","clickToPlay","fullscreen","enabled","fallback","iosNative","captions","active","language","update","resetOnEnd","storage","key","captionArea","bodyAreaHeight","offsetHeight","top","height","downloadBtn","nextBtn","prevBtn","closeBtn","h4","ul","_fadeIn","closeOverlay","once","playpauseBtn","muteUnmuteBtn","playbackRateBtn","i","options","value","speed","selectedIndex","plyrSettings","trackNum","pTime","duration","contains","restart","ap_custom_themes","find","ap_logo_default","decorationBar","colors","hex","span","backgroundColor","hasCoreFeaturesSupport","showError","hasAppearanceIusses","showWarning","audio","json","csscalc","flexbox","cssanimations","bgsizecover","objectfit","iconStr","titleStr","bodyStr","icon","ariaHidden","createAttribute","setAttributeNode","str","hideTime","_fadeOut","authorOverlayDisplay","index","currentAuthor","currentProfile","profileUrl","that","spinner","send","callback_name","callbackName","on_success","onSuccess","on_timeout","onTimeout","timeout","timeout_trigger","data","clearTimeout","script","async","_setProfile","profile","bio","authoroverlayDisplayContent","showProfile","minDisplay","_slideDown","setProperty","_slideUp","all","querySelectorAll","trim","callback","request","XMLHttpRequest","open","onload","status","abort","onerror","found","arr","splice","test","pop","parts","split","lastIndexOf","_cleanArray","rgb","_hexToRGB","Math","round","parseInt","bigint","join","id","s","o","g","r","m","q","arguments","l","insertBefore","ga","appName","appVersion","screenName","category","action","offsetWidth","scrollWidth","runTime","startTime","setInterval","width","clearInterval","animationEvt","_whichAnimationEvent","params","_event","_callback","_fadeCallback","removeEventListener","_slideCallback","ani","animations","animation","OAnimation","MozAnimation","WebkitAnimation","ready","fn","attachEvent","readyState"],"mappings":";;;;;;;;;;;AAYA,6XAGMA,mBAEF,QAAAA,KAAcC,gBAAAC,KAAAF,GAGVE,KAAKC,IACDC,OAAQ,aACRC,YAAa,gCACbC,eAAgB,mCAChBC,aAAc,iCACdC,aAAc,iCACdC,SAAU,gBACVC,UAAW,iBACXC,SAAU,gBACVC,aAAc,kCACdC,aAAc,qBACdC,KAAM,WACNC,SAAU,iBACVC,eAAgB,gBAChBC,gBAAiB,qBACjBC,eAAgB,mBAChBC,sBAAuB,4BACvBC,sBAAuB,4BACvBC,WAAY,0BACZC,WAAY,oCACZC,YAAa,sBACbC,gBAAiB,6BACjBC,YAAa,2BACbC,YAAa,iCACbC,YAAa,mDACbC,UAAW,sBACXC,cAAe,mCACfC,gBAAiB,0BACjBC,KAAM,WACNC,SAAU,eACVC,QAAS,oBACTC,WAAY,cACZC,MAAO,YACPC,UAAW,kBACXC,WAAY,mBACZC,UAAW,kBACXC,SAAU,UACVC,UAAW,gBAIftC,KAAKuC,YAGLvC,KAAKwC,OACDC,IAAK,mBACLC,WACAC,aACAC,aAAc,EACdC,YAAY,EACZC,kBAAkB,EAClBC,aAAa,EACbC,YAAY,GAIhBhD,KAAKiD,OAAS,KAGdjD,KAAKkD,WACDC,MAAOnD,KAAKoD,UAAWC,OAAOC,SAASC,MACvCC,SAAU,SAIdxD,KAAKyD,SACDC,MAAO,KACPC,KAAM,MAIV3D,KAAK4D,2EAOL,GAAMC,GAAO7D,KACT8D,EAAcD,EAAKE,UAAW,gBAAiBC,aAAc,OAEjEH,GAAKI,aAAcH,EAAa,SAAUI,GAEtCL,EAAKtB,SAAW4B,KAAKC,MAAOF,EAAIG,UAEgB,IAA3CR,EAAKtB,SAAS+B,kBAAkBC,SAEjCV,EAAKtB,SAAS+B,kBAAoB,WAItCT,EAAKW,8CAUT,GAAMX,GAAO7D,KACTyE,EAAcZ,EAAKtB,SAAS+B,kBAAoB,2BAEpDT,GAAKI,aAAcQ,EAAa,SAAUP,GAEtC,GAAIQ,GAAOb,EAAKE,UAAW,QACrBY,EAAMT,EAAIG,SAASO,QAAS,qBAAsBf,EAAKtB,SAAS+B,kBAEtEI,GAAKG,WAAaF,EAElBd,EAAKiB,gBACLjB,EAAKkB,2BACLlB,EAAKmB,yBACLnB,EAAKoB,qBACLpB,EAAKqB,0BAELrB,EAAKsB,gEAST,GAAMtB,GAAO7D,KACToF,EAASvB,EAAKE,UAAWF,EAAK5D,GAAG0B,eAAe,EAEpD0D,OAAMC,UAAUC,QAAQC,KAAMJ,EAAQ,SAAUK,GAE5CA,EAAMC,iBAAkB,QAAS,SAAUC,GAET,mBAAzBA,EAAIC,OAAOC,WACQ,QAAxBF,EAAIC,OAAOE,UAA8C,QAAxBH,EAAIC,OAAOE,WAExCjC,EAAKrB,MAAMI,aAAe+C,EAAII,cAAc/B,aAAc,cAC1DH,EAAKmC,SAAUC,OAAQpC,EAAKrB,MAAMI,eAClC+C,EAAIO,yEAahB,GAAMrC,GAAO7D,KAETS,EAAWoD,EAAKE,UAAWF,EAAK5D,GAAGQ,UACnC0F,EAAM1F,EAAS2F,cAAe,UAC9BC,EAAOxC,EAAKE,UAAWF,EAAK5D,GAAGS,aAEnCD,GAASiF,iBAAkB,aAAc,WAErCS,EAAIG,aAAc,iBAAiB,GACnCD,EAAKC,aAAc,iBAAiB,KAIxC7F,EAASiF,iBAAkB,aAAc,WAErCS,EAAIG,aAAc,iBAAiB,GACnCD,EAAKC,aAAc,iBAAiB,0DASxC,GAAMzC,GAAO7D,IAab,IAXe6D,EAAKE,UAAWF,EAAK5D,GAAGM,UAE9BmF,iBAAkB,QAAS,WAEhC7B,EAAK0C,aACL1C,EAAK2C,cAAe,WAAY,QAAS3C,EAAKX,UAAUM,UAExDK,EAAKmC,SAAUnC,EAAKrB,MAAMI,gBAIzB6D,UAAUC,aAAe,CAE1B,GAAIlG,GAAYqD,EAAKE,UAAWF,EAAK5D,GAAGO,WAElCmG,EAAYxC,KAAKC,MAAOf,OAAOuD,aAAaC,QAAS,aAExC,QAAdF,IAEIA,EAAUlB,OAAS,GAAKkB,EAAUG,KAAO,KAE1CtG,EAAUuG,MAAMC,QAAU,QAE1BxG,EAAUkF,iBAAkB,QAAS,WAEjC7B,EAAK2C,cAAe,YAAa,QAAS3C,EAAKX,UAAUM,UAEzDK,EAAK0C,aACL1C,EAAKmC,SAAUW,EAAUlB,MAAOkB,EAAUG,+CAe1D,GAAMjD,GAAO7D,IAEb6D,GAAKI,aAAcJ,EAAKrB,MAAMC,IAAK,SAAUyB,GAEzC,GAAM+C,GAAM/C,EAAIgD,YACVC,EAActD,EAAKuD,aAAcH,EAAK,SACtCI,EAAWxD,EAAKuD,aAAcH,EAAK,SACnCK,EAAYzD,EAAKuD,aAAcH,EAAK,SAAS,EAGnDpD,GAAKrB,MAAM+E,YACX1D,EAAKrB,MAAM+E,SAASC,OAASL,EAAYnD,aAAc,UACvDH,EAAKrB,MAAM+E,SAASE,aAAe,IAAMN,EAAYnD,aAAc,mBACnEH,EAAKrB,MAAM+E,SAASG,eAAiB,IAAMP,EAAYnD,aAAc,kBACrEH,EAAKrB,MAAM+E,SAASI,UAAYR,EAAYnD,aAAc,aAC1DH,EAAKrB,MAAM+E,SAASK,QAAUT,EAAYnD,aAAc,cAGxDH,EAAKrB,MAAMqF,MAAQhE,EAAKuD,aAAcC,EAAU,SAAUS,YAC1DjE,EAAKrB,MAAMuF,SAAWlE,EAAKuD,aAAcC,EAAU,YAAaS,YAChEjE,EAAKrB,MAAMwF,OAASnE,EAAKuD,aAAcC,EAAU,UAAWrD,aAAc,QAC1EH,EAAKrB,MAAMyF,cAAgBpE,EAAKuD,aAAcC,EAAU,UAAWS,YACnEjE,EAAKrB,MAAM+B,OAASV,EAAKuD,aAAcC,EAAU,UAAWS,YAGvDjE,EAAKqE,SAAUb,EAASrD,aAAc,gBAENmE,KAA5BtE,EAAKX,UAAUC,MAAM,KAEtBU,EAAKrB,MAAME,QAAQ0F,KAAOvE,EAAKX,UAAUC,MAAM,GAAGkF,eAMtDxE,EAAKrB,MAAME,QAAQ0F,KAAOf,EAASrD,aAAc,WAAYqE,cAK3DxE,EAAKqE,SAAUb,EAASrD,aAAc,aAExCH,EAAKrB,MAAME,QAAQ4F,OAASjB,EAASrD,aAAc,WAKvDH,EAAKrB,MAAM4C,UAEXC,MAAMC,UAAUC,QAAQC,KAAM8B,EAAW,SAAUrH,GAE/C,GAAIsI,KAEJA,GAAIC,IAAMvI,EAAG+D,aAAc,OAC3BuE,EAAIV,MAAQ5H,EAAGmG,cAAe,SAAUvB,UACxC0D,EAAIP,OAAS/H,EAAGmG,cAAe,UAAWpC,aAAc,QACxDuE,EAAIN,cAAgBhI,EAAGmG,cAAe,UAAWvB,UAE5ChB,EAAKqE,SAAUK,EAAIP,UAEpBO,EAAIP,OAASnE,EAAKrB,MAAMwF,QAIvBO,EAAIP,SAAWnE,EAAKrB,MAAMwF,SAC3BnE,EAAKrB,MAAMK,YAAa,GAGvBgB,EAAKqE,SAAUK,EAAIP,QAEpBO,EAAIE,IAAM5E,EAAK6E,UAAW7E,EAAKrB,MAAMwF,QAAWnE,EAAKrB,MAAM+E,SAASG,eAIpEa,EAAIE,IAAM5E,EAAK6E,UAAWH,EAAIP,QAAWnE,EAAKrB,MAAM+E,SAASG,eAIjE7D,EAAKrB,MAAM4C,OAAOuD,KAAMJ,KAIW,OAAlC1E,EAAKrB,MAAM+E,SAASI,WACS,QAAlC9D,EAAKrB,MAAM+E,SAASI,WAEV9D,EAAKqE,SAAUrE,EAAKtB,SAASqG,wBAE/B/E,EAAKgF,cAAehF,EAAKtB,SAASqG,sBAAuB/E,EAAKrB,MAAM+E,SAASK,SAMrF/D,EAAKiF,UACLjF,EAAKkF,yDAOHC,EAAKC,GAEXA,MAA+B,KAAbA,EAA2BA,EAAW,CAGxD,IAAMpF,GAAO7D,IAGbgJ,GAAM/C,OAAQ+C,GACdnF,EAAKrB,MAAMI,aAAeoG,CAG1B,IAAIE,GAAerF,EAAKE,UAAWF,EAAK5D,GAAGmB,WAyB3C,IAvBA8H,EAAarE,UAAYhB,EAAKrB,MAAM4C,OAAO4D,GAAKnB,MAG5BhE,EAAKE,UAAWF,EAAK5D,GAAGoB,aAE9BwD,UAAYhB,EAAKrB,MAAM4C,OAAO4D,GAAKhB,OAG3CnE,EAAKrB,MAAMK,YAEbgB,EAAKsF,eAAgBtF,EAAKrB,MAAM4C,OAAO4D,IAKtCnF,EAAKrB,MAAMK,aAA8C,IAAhCgB,EAAKrB,MAAMM,mBAErCe,EAAKsF,eAAgBtF,EAAKrB,MAAM4C,OAAO4D,IACvCnF,EAAKrB,MAAMM,kBAAmB,GAK7Be,EAAKrB,MAAM4C,OAAOb,OAAS,EAAI,CAGbV,EAAKE,UAAWF,EAAK5D,GAAGqB,iBAC9BuD,UAAYmE,EAAM,EAEbnF,EAAKE,UAAWF,EAAK5D,GAAGsB,aAC9BsD,UAAYhB,EAAKrB,MAAM4C,OAAOb,MAG1C,IAAMa,GAASvB,EAAKE,UAAWF,EAAK5D,GAAG0B,eAAe,EAEtD0D,OAAMC,UAAUC,QAAQC,KAAMJ,EAAQ,SAAUK,GAC5CA,EAAM2D,WAAWC,UAAUC,OAAQ,YAGvClE,EAAO4D,GAAKI,WAAWC,UAAUE,IAAK,UAK1C,GAAIC,GAAmB3F,EAAKE,UAAWF,EAAK5D,GAAGwB,YAS/C,IAPKoC,EAAKrB,MAAM4C,OAAOb,OAAS,GAAKyE,EAAMnF,EAAKrB,MAAM4C,OAAOb,OAAS,IAElEiF,EAAiB3E,UAAYhB,EAAKrB,MAAM4C,OAAO4D,EAAM,GAAGnB,OAKvC,OAAhBhE,EAAKZ,OAAkB,CAEnBY,EAAKZ,OAAOwG,SAEb5F,EAAKZ,OAAOU,MAIhB,IAAM+F,GAAa,gBAAkB7F,EAAKrB,MAAM4C,OAAO4D,GAAKR,IAAM,MAElE3E,GAAK8F,YAAaD,EAAY,SAAUE,GAE/BA,GAED/F,EAAKZ,OAAO4G,QAERC,KAAM,QACNjC,MAAOhE,EAAKrB,MAAM4C,OAAO4D,GAAKnB,MAC9BkC,UAIQvB,IAAK,gBAAkB3E,EAAKrB,MAAM4C,OAAO4D,GAAKR,IAAM,OACpDsB,KAAM,cAKd1E,SAGQ4E,KAAM,WACNC,MAAO,UACPC,QAAS,KACT1B,IAAK,gBAAkB3E,EAAKrB,MAAM4C,OAAO4D,GAAKR,IAAM,OACpD2B,SAAS,KAOrBtG,EAAKuG,kBACLvG,EAAKrB,MAAMQ,YAAa,IAIxBa,EAAKZ,OAAO4G,QAERC,KAAM,QACNjC,MAAOhE,EAAKrB,MAAM4C,OAAO4D,GAAKnB,MAC9BkC,UAIQvB,IAAK,gBAAkB3E,EAAKrB,MAAM4C,OAAO4D,GAAKR,IAAM,OACpDsB,KAAM,eAQlBjG,EAAKwG,iBACLxG,EAAKrB,MAAMQ,YAAa,GAI5Ba,EAAKZ,OAAOqH,GAAI,QAAS,WAErBzG,EAAK0G,qBAEL1G,EAAKZ,OAAOuH,OAEP3G,EAAKrB,MAAMQ,YAEZa,EAAKZ,OAAOwH,gBAAgB,GAI3BxB,EAAW,EAEZyB,SAASC,qBAAqB,SAAS,GAAGC,YAAc3B,EAIxD5F,OAAOwH,WAAY,WAEVpE,UAAUC,cAEXrD,OAAOuD,aAAakE,QAAS,YAAa3G,KAAK4G,WAAYtF,MAAOuD,EAAKlC,KAAMmC,MAIlF,SAWnBpF,EAAKmH,aAAc9B,GACnBrF,EAAKoH,WAAY/B,4CAKLzD,GAEZ,GAAM5B,GAAO7D,KACTmB,EAAa0C,EAAKE,UAAWF,EAAK5D,GAAGkB,YACrC+J,EAAc,iBAAmBzF,EAAMgD,IACvC0C,EAAgBtH,EAAKtB,SAAS6I,oBAAsBvH,EAAK6E,UAAWjD,EAAMuC,QAAWnE,EAAKrB,MAAM+E,SAASG,eACzG2D,EAAY,GAAIC,MAEpBD,GAAU7C,IAAM3E,EAAKtB,SAAS+B,kBAAoB,iBAElDT,EAAK8F,YAAauB,EAAa,SAAUtB,GAEhCA,EAEDyB,EAAU7C,IAAM0C,EAIhBrH,EAAK8F,YAAawB,EAAe,SAAUvB,GAElCA,IAEDyB,EAAU7C,IAAM2C,OAUhChK,EAAW0D,UAAY,GACvB1D,EAAWoK,YAAaF,uCAOxB,GAAMxH,GAAO7D,IAGGA,MAAK+D,UAAW,SAEtBc,UAAY7E,KAAKwC,MAAMqF,KAGjC,IAAIA,GAAQ7H,KAAK+D,UAAW/D,KAAKC,GAAGE,aAChC4H,EAAW/H,KAAK+D,UAAW/D,KAAKC,GAAGG,gBACnC4H,EAAShI,KAAK+D,UAAW/D,KAAKC,GAAGI,cACjCkE,EAASvE,KAAK+D,UAAW/D,KAAKC,GAAGK,aAwDrC,IAtDAuH,EAAMhD,UAAY7E,KAAKwC,MAAMqF,MAC7BE,EAASlD,UAAY7E,KAAKwC,MAAMuF,SAChCC,EAAOnD,UAAY7E,KAAKwC,MAAMwF,OAC9BzD,EAAOM,UAAY7E,KAAKwC,MAAM+B,OAGzBV,EAAKX,UAAUC,MAAMoB,OAAS,IAE/BvE,KAAKkD,UAAUM,SAAWK,EAAKX,UAAUC,MAAMU,EAAKX,UAAUC,MAAMoB,OAAS,IAIjFc,MAAMC,UAAUC,QAAQC,KAAMxF,KAAKuC,SAASiJ,kBAAmB,SAAUvL,GAErE,GAAIwL,GAAO5H,EAAKX,UAAUM,SAAW,IAAMvD,EAAGyL,MAE9C7H,GAAK8F,YAAa8B,EAAM,SAAU7B,GAE9B,GAAKA,EAAQ,CAET,GAAI+B,GAAOjB,SAASkB,cAAe,IAEnCD,GAAKpI,KAAOkI,EACZE,EAAKrF,aAAc,OAAQ,YAC3BqF,EAAKrF,aAAc,WAAYmF,GAC/BE,EAAK9G,UAAY5E,EAAGgK,MAEpB0B,EAAKjG,iBAAkB,QAAS,WAE5B7B,EAAK2C,cAAevG,EAAGgK,MAAQ,YAAa,QAASpG,EAAKX,UAAUM,WAIxDK,GAAKE,UAAWF,EAAK5D,GAAGS,cAC9B6K,YAAaI,EAEvB,IAAIlL,GAAWoD,EAAKE,UAAWF,EAAK5D,GAAGQ,SACvCA,GAAS6F,aAAc,eAAe,GACtC7F,EAASsG,MAAMC,QAAU,OAEzB,IAAI6E,IACAzD,KAAMnI,EAAGgK,MACTxH,IAAKgJ,EAGT5H,GAAKrB,MAAMG,UAAUgG,KAAMkD,SASjC7L,KAAKkI,SAAUlI,KAAKwC,MAAME,QAAQ0F,MAAS,CAE7C,GAAI0D,GAAQ9L,KAAKuC,SAASwJ,oBAAsB/L,KAAKwC,MAAME,QAAQ0F,KAAO,WAAapI,KAAKwC,MAAM+E,SAASE,YAErGzH,MAAKkI,SAAUrE,EAAKrB,MAAME,QAAQ4F,UAEpCwD,EAAQ9L,KAAKuC,SAASwJ,oBAAsB/L,KAAKwC,MAAME,QAAQ0F,KAAO,IAAMpI,KAAKwC,MAAME,QAAQ4F,OAAStI,KAAKwC,MAAM+E,SAASE,cAIhIzH,KAAK2J,YAAamC,EAAO,SAAUlC,GAE/B,GAAKA,EAAQ,CAET,GAAIoC,GAAWnI,EAAKE,UAAWF,EAAK5D,GAAGC,QACnC+L,EAAOpI,EAAKE,UAAW,QACvBmI,EAAQ,QAAUJ,EAAQ,IAE9BE,GAASjF,MAAMoF,gBAAkBD,CAGjC,IAAInF,GAAQ2D,SAASkB,cAAe,QAEpC7E,GAAMT,aAAc,OAAQ,YAC5BS,EAAMlC,UAAY,qCAAuCqH,EAAQ,gBAEjED,EAAKV,YAAaxE,MAS9B,IAAM/G,KAAKkI,SAAUrE,EAAKrB,MAAM+E,SAASC,QAAW,CAEhD,GAAI4E,GAAYvI,EAAKwI,eAAgBxI,EAAKrB,MAAM+E,SAASC,QACrD8E,EAAYtM,KAAKuC,SAAS+B,kBAAoB,iCAElDtE,MAAKiE,aAAcqI,EAAW,SAAUpI,GAEpC,GAAIqI,GAAcrI,EAAIG,SAASO,QAAS,qBAAsBf,EAAKrB,MAAM+E,SAASC,OAElF+E,GAAcA,EAAY3H,QAAS,yBAA0BwH,EAE7D,IAAIH,GAAOpI,EAAKE,UAAW,QACvBgD,EAAQ2D,SAASkB,cAAe,QAEpC7E,GAAMT,aAAc,OAAQ,YAC5BS,EAAMlC,UAAY0H,EAElBN,EAAKV,YAAaxE,KAO1B,GAAK/G,KAAKwC,MAAM4C,OAAOb,OAAS,EAAI,CAEhC,GAAIiI,GAAmBxM,KAAK+D,UAAW/D,KAAKC,GAAGyB,UAE/C2D,OAAMC,UAAUC,QAAQC,KAAMxF,KAAKwC,MAAM4C,OAAQ,SAAUnF,EAAIwM,GAE3D,GAAIC,GAAKhC,SAASkB,cAAe,MAC7Be,EAAIjC,SAASkB,cAAe,IAEhCe,GAAEtD,UAAUE,IAAK,YACjBoD,EAAEpJ,KAAO,sBACToJ,EAAErG,aAAc,aAAcmG,EAE9B,IAAIG,GAAUlC,SAASkB,cAAe,OAEtCgB,GAAQvD,UAAUE,IAAK,aACvBqD,EAAQ/H,UAAY4H,EAAO,EAAI,GAE/B,IAAII,GAAgBnC,SAASkB,cAAe,OAE5CiB,GAAcxD,UAAUE,IAAK,sBAE7B,IAAIuD,GAAYpC,SAASkB,cAAe,OAQxC,IANAkB,EAAUzD,UAAUE,IAAK,eACzBuD,EAAUxG,aAAc,QAASrG,EAAG4H,OACpCiF,EAAUjI,UAAY5E,EAAG4H,MAEzBgF,EAActB,YAAauB,IAErBjJ,EAAKrB,MAAMK,WAAa,CAE1B,GAAI4F,GAAMiC,SAASkB,cAAe,OAC9BV,EAAc,iBAAmBrH,EAAKrB,MAAM4C,OAAOqH,GAAMhE,IACzD0C,EAAgBtH,EAAKtB,SAAS6I,oBAAsBvH,EAAK6E,UAAW7E,EAAKrB,MAAM4C,OAAOqH,GAAMzE,QAAWnE,EAAKrB,MAAM+E,SAASG,cAE/He,GAAIY,UAAUE,IAAK,aACnBd,EAAID,IAAM3E,EAAKtB,SAAS+B,kBAAoB,iBAE5CT,EAAK8F,YAAauB,EAAa,SAAUtB,GAEhCA,EAEDnB,EAAID,IAAM0C,EAIVrH,EAAK8F,YAAawB,EAAe,SAAUvB,GAElCA,IAEDnB,EAAID,IAAM2C,OAU1BwB,EAAEpB,YAAa9C,GAInBkE,EAAEpB,YAAaqB,GACfD,EAAEpB,YAAasB,EAGf,IAAIE,GAASrC,SAASkB,cAAe,IAErCmB,GAAO1D,UAAUE,IAAK,kBACtBwD,EAAOzG,aAAc,WAAYrG,EAAGuI,IAAM,QAC1CuE,EAAOxJ,KAAO,gBAAkBtD,EAAGuI,IAAM,OACzCuE,EAAOzG,aAAc,OAAQ,UAE7ByG,EAAOrH,iBAAkB,QAAS,WAE9B7B,EAAK2C,cAAevG,EAAGuI,IAAM,iBAAkB,QAAS3E,EAAKX,UAAUM,WAI3E,IAAIwJ,GAAMtC,SAASuC,gBAAiB,6BAA8B,MAElED,GAAI3D,UAAUE,IAAK,QACnByD,EAAI1G,aAAc,eAAe,GACjC0G,EAAI1G,aAAc,UAAW,YAE7B,IAAI4G,GAAMxC,SAASuC,gBAAiB,6BAA8B,MAElEC,GAAIC,eAAgB,+BAAgC,OAAQtJ,EAAKtB,SAAS+B,kBAAoB,kCAE9F0I,EAAIzB,YAAa2B,GACjBH,EAAOxB,YAAayB,GACpBL,EAAEpB,YAAawB,GAEfL,EAAGnB,YAAaoB,GAEhBH,EAAiBjB,YAAamB,KAIlC7I,EAAKwG,iBACLxG,EAAKuJ,6BAILpN,MAAK+D,UAAW/D,KAAKC,GAAGW,MAAOyI,UAAUE,IAAK,SAKlD,IAAIjH,GAAYtC,KAAK+D,UAAW/D,KAAKC,GAAGqC,WACpC+K,EAAO,GAAIC,MACXC,EAAOF,EAAKG,aAEhBlL,GAAUuC,WAAa,UAAY0I,EAAO,KAAOvN,KAAKuC,SAASkL,aAG/DzN,KAAK0N,4DAOL,GAAM7J,GAAO7D,KAET2N,EAAkB9J,EAAKtB,SAAS+B,kBAAoB,2CAEnDT,GAAKrB,MAAM4C,OAAOb,OAAS,IAE5BoJ,EAAkB9J,EAAKtB,SAAS+B,kBAAoB,2CAIxDT,EAAKI,aAAc0J,EAAiB,SAAUzJ,GAE1C,GAAM0J,GAAW1J,EAAIG,SAASO,QAAS,qBAAsBf,EAAKtB,SAAS+B,mBAEvEuJ,GAAkB,CAEjBpH,WAAUC,eACXmH,GAAkB,GAGtBhK,EAAKZ,OAAS,GAAI6K,MAAMjK,EAAK5D,GAAGoC,UAE5BuL,SAAUA,EACVG,cAAc,EACdC,UAAU,EACVC,OAAQ,GACRC,aAAa,EACbC,YACIC,SAAS,EACTC,UAAU,EACVC,WAAW,GAEfC,UACIC,QAAQ,EACRC,SAAU,KACVC,QAAQ,GAEZC,YAAY,EACZC,SAAWR,QAASP,EAAiBgB,IAAK,UAI9ChL,EAAKZ,OAAOqH,GAAI,QAAS,WAErB,GAAIwE,GAAcjL,EAAKE,UAAW,mBAC9BgL,EAAiBlL,EAAKE,UAAWF,EAAK5D,GAAGY,UAAWmO,aAEpDC,GAAiC,GAAzBF,EAAiB,GAE7BD,GAAY/H,MAAMkI,IAAMA,EAAM,KAC9BH,EAAY/H,MAAMmI,OAASH,EAAiB,IAE5C,IAAMI,GAActL,EAAKE,UAAWF,EAAK5D,GAAGU,aAE5C,IAAKkD,EAAKrB,MAAM4C,OAAOb,OAAS,EAAI,CAEhC,GAAMhD,GAAcsC,EAAKrB,MAAM4C,OAAOb,OAAS,EACzC6K,EAAUvL,EAAKE,UAAWF,EAAK5D,GAAG4B,MAClCwN,EAAUxL,EAAKE,UAAWF,EAAK5D,GAAG6B,SAEnC+B,GAAKrB,MAAMI,cAAgB,IAE5ByM,EAAQ/I,aAAc,YAAY,GAClC+I,EAAQhG,UAAUE,IAAK,aAGtB1F,EAAKrB,MAAMI,cAAgBrB,IAE5B6N,EAAQ9I,aAAc,YAAY,GAClC8I,EAAQ/F,UAAUE,IAAK,aAI3B6F,EAAQ1J,iBAAkB,QAAS,WAG1B7B,EAAKrB,MAAMI,aAAerB,IAE3BsC,EAAKrB,MAAMI,eACXiB,EAAKmC,SAAUnC,EAAKrB,MAAMI,iBAMlCyM,EAAQ3J,iBAAkB,QAAS,WAE1B7B,EAAKrB,MAAMI,aAAe,IAE3BiB,EAAKrB,MAAMI,eACXiB,EAAKmC,SAAUnC,EAAKrB,MAAMI,iBAQtCuM,EAAYzJ,iBAAkB,QAAS,WAEnC,GAAI1E,GAAiB6C,EAAKE,UAAWF,EAAK5D,GAAGe,gBACzCC,EAAwB4C,EAAKE,UAAWF,EAAK5D,GAAGgB,uBAChDqO,EAAWzL,EAAKE,UAAWF,EAAK5D,GAAGc,iBAEnCwO,EAAK7E,SAASkB,cAAe,KAEjC2D,GAAG1K,UAAY,YAEf5D,EAAsBsK,YAAagE,EAEnC,IAAIC,GAAK9E,SAASkB,cAAe,KAEjC4D,GAAGnG,UAAUE,IAAK,cAElBlE,MAAMC,UAAUC,QAAQC,KAAM3B,EAAKrB,MAAMG,UAAW,SAAU4F,GAE1D,GAAImE,GAAKhC,SAASkB,cAAe,MAC7Be,EAAIjC,SAASkB,cAAe,IAEhCe,GAAEpJ,KAAOgF,EAAI9F,IACbkK,EAAE9H,UAAY0D,EAAIH,KAClBuE,EAAErG,aAAc,WAAYiC,EAAI9F,KAEhCkK,EAAEjH,iBAAkB,QAAS,WAEzB7B,EAAK2C,cAAe+B,EAAIH,KAAO,YAAa,QAASvE,EAAKX,UAAUM,YAIxEkJ,EAAGnB,YAAaoB,GAChB6C,EAAGjE,YAAamB,KAIpBzL,EAAsBsK,YAAaiE,GAEnCxO,EAAeqI,UAAUE,IAAK,iBAC9BvI,EAAe+F,MAAMC,QAAU,QAC/BnD,EAAK4L,QAASzO,GAEdsO,EAAS5J,iBAAkB,QAAS,WAChC7B,EAAK6L,iBACLC,MAAM,yDAqBtB,IAAM,GARA9L,GAAO7D,KAEP4P,EAAe/L,EAAKE,UAAW,iBAC/B8L,EAAgBhM,EAAKE,UAAW,kBAChC+L,EAAkBjM,EAAKE,UAAW,oBAClC/B,EAAa6B,EAAKE,UAAWF,EAAK5D,GAAG+B,YAGjC+N,EAAI,EAAGA,EAAID,EAAgBE,QAAQzL,OAAQwL,IAEjD,GAAK9J,OAAQ6J,EAAgBE,QAAQD,GAAGE,SAAYpM,EAAKZ,OAAOiN,MAAQ,CAEpEJ,EAAgBK,cAAgBJ,CAChC,OAOHlM,EAAKZ,OAAOL,cAAgB,EAE7BZ,EAAWqH,UAAUE,IAAK,0BAI1BvH,EAAWqH,UAAUC,OAAQ,0BAIjCzF,EAAKZ,OAAOqH,GAAI,kBAAmB,WAE/BtI,EAAWqH,UAAUE,IAAK,0BAErB1F,EAAKrB,MAAM4C,OAAOb,OAAS,GAE5BV,EAAKuG,oBAMbvG,EAAKZ,OAAOqH,GAAI,mBAAoB,WAShC,GAPAtI,EAAWqH,UAAUC,OAAQ,0BACxBzF,EAAKrB,MAAM4C,OAAOb,OAAS,GAE5BV,EAAKwG,iBAIJ5D,UAAUC,aAAe,CAE1B,GAAI0J,GAAejM,KAAKC,MAAOf,OAAOuD,aAAaC,QAAS,eAErDuJ,GAAa7B,SAEpBlL,OAAOuD,aAAakE,QAAS,OAAQ3G,KAAK4G,UAAWqF,OAM7DvM,EAAKZ,OAAOqH,GAAI,UAAW,WAEvBsF,EAAavG,UAAUE,IAAK,4BAIhC1F,EAAKZ,OAAOqH,GAAI,QAAS,WAErBsF,EAAavG,UAAUC,OAAQ,0BAE1B7C,UAAUC,cAEPrD,OAAOuD,aAAakE,QAAS,YAAa3G,KAAK4G,WAAYtF,MAAO5B,EAAKrB,MAAMI,aAAckE,KAAMjD,EAAKZ,OAAO2H,iBAMpHnE,UAAUC,cAEX7C,EAAKZ,OAAOqH,GAAI,aAAc,WAE1B,GAAI+F,GAAWpK,OAAQpC,EAAKrB,MAAMI,cAAiB,EAC/CgI,EAAc/G,EAAKZ,OAAO2H,YAC1B0F,EAAQ1F,EAAc/G,EAAKZ,OAAOsN,QAEjC3F,IAAe,GAAKA,GAAe,GAEpC/G,EAAK2C,cAAe,WAAY,QAAS3C,EAAKX,UAAUM,SAAW,SAAW6M,GAI7EC,GAAS,KAAQA,GAAS,KAE3BjN,OAAOuD,aAAakE,QAAS,YAAa3G,KAAK4G,WAAYtF,MAAO5B,EAAKrB,MAAMI,aAAckE,KAAMjD,EAAKZ,OAAO2H,eAE7G/G,EAAK2C,cAAe,WAAY,UAAW3C,EAAKX,UAAUM,SAAW,SAAW6M,MAS5FxM,EAAKZ,OAAOqH,GAAI,QAAS,WAErB,GAAI+F,GAAWpK,OAAQpC,EAAKrB,MAAMI,cAAiB,CAE9CgN,GAAavG,UAAUmH,SAAU,2BAElCZ,EAAavG,UAAUE,IAAK,0BAI3B9C,UAAUC,cAEXrD,OAAOuD,aAAakE,QAAS,YAAa3G,KAAK4G,WAAYtF,MAAO5B,EAAKrB,MAAMI,aAAckE,KAAM,KAIrGjD,EAAK2C,cAAe,WAAY,YAAa3C,EAAKX,UAAUM,SAAW,SAAW6M,GAElFxM,EAAKZ,OAAOwN,YAKhBX,EAAgBpK,iBAAkB,SAAU,SAAUC,GAElD9B,EAAKZ,OAAOiN,MAAQjK,OAAQN,EAAIC,OAAOoK,QAAQrK,EAAIC,OAAOuK,eAAeF,SAK7EJ,EAAcnK,iBAAkB,QAAS,SAAUC,GAE1CA,EAAIC,OAAOyD,UAAUmH,SAAU,0BAEhC7K,EAAIC,OAAOyD,UAAUC,OAAQ,0BAI7B3D,EAAIC,OAAOyD,UAAUE,IAAK,oEAWlC,GAAM1F,GAAO7D,IAER6D,GAAKtB,SAASmO,mBAEf7M,EAAKrB,MAAME,QAAUmB,EAAKtB,SAASmO,iBAAiBC,KAAM,SAAWpI,GAEjE,MAAOA,GAAIH,OAASvE,EAAKrB,MAAME,QAAQ0F,WAIfD,KAAvBtE,EAAKrB,MAAME,UAEZmB,EAAKrB,MAAME,QAAUmB,EAAKtB,SAASmO,iBAAiBC,KAAM,SAAWpI,GAEjE,MAAOA,GAAIH,OAASvE,EAAKtB,SAASqO,mBAQ9C,IAAIC,GAAgBhN,EAAKE,UAAW,iBAEpCF,GAAKrB,MAAME,QAAQoO,OAAOvL,QAAS,SAAUwL,GAEzC,GAAIC,GAAOtG,SAASkB,cAAe,OACnCoF,GAAKjK,MAAMkK,gBAAkBF,EAC7BF,EAActF,YAAayF,+CAS/B,GAAKhR,KAAKkR,yBAGN,WADAlR,MAAKmR,UAAW,KAAM,GAAI,+JAKzBnR,MAAKoR,uBAENpR,KAAKqR,YAAa,mLAStB,UAAM5K,UAAU6K,OAAS7K,UAAU8K,MAAQ9K,UAAU8K,MAC7C9K,UAAU+K,SAAW/K,UAAUgL,yDAWvC,OAAMhL,UAAUuG,OAIVvG,UAAUiL,iBAIVjL,UAAUkL,cAIVlL,UAAUmL,gDASTC,EAASC,EAAUC,GAE1B,GAAI7R,GAASF,KAAK+D,UAAW/D,KAAKC,GAAGC,QACjCU,EAAOZ,KAAK+D,UAAW/D,KAAKC,GAAGW,MAC/BqB,EAAQjC,KAAK+D,UAAW/D,KAAKC,GAAGgC,OAChC+P,EAAOhS,KAAK+D,UAAW/D,KAAKC,GAAGiC,WAC/B2F,EAAQ7H,KAAK+D,UAAW/D,KAAKC,GAAGkC,YAChCuC,EAAO1E,KAAK+D,UAAW/D,KAAKC,GAAGmC,WAE/B6P,EAAavH,SAASwH,gBAAiB,cAE3CD,GAAWhC,OAAQ,EAEnB+B,EAAKnN,UAAYgN,EACjBhK,EAAMhD,UAAYiN,EAClBpN,EAAKG,UAAYkN,EAEjB7R,EAAO6G,MAAMC,QAAU,OACvBpG,EAAKmG,MAAMC,QAAU,OAErB/E,EAAM8E,MAAMC,QAAU,OACtB/E,EAAMkQ,iBAAkBF,GAExBjS,KAAKyP,QAASxN,yCAKLmQ,GAET,GAAMvO,GAAO7D,KACT+B,EAAU8B,EAAKE,UAAWF,EAAK5D,GAAG8B,SAClCsQ,EAAW,GAEftQ,GAAQ8C,UAAYuN,EACpBrQ,EAAQgF,MAAMC,QAAU,QAExBnD,EAAK4L,QAAS1N,GAEdsB,OAAOwH,WAAY,WAEfhH,EAAKyO,SAAUvQ,EAAS,WAEpBA,EAAQ8C,UAAY,GACpB9C,EAAQgF,MAAMC,QAAU,UAZjB,4CAuBf,GAAI9G,GAASF,KAAK+D,UAAW/D,KAAKC,GAAGC,QACjC+R,EAAavH,SAASwH,gBAAiB,cAE3CD,GAAWhC,OAAQ,EAEnB/P,EAAOmJ,UAAUE,IAAK,eACtBrJ,EAAOiS,iBAAkBF,2CAOzB,GAAMpO,GAAO7D,KACTuS,EAAuBvS,KAAK+D,UAAW/D,KAAKC,GAAGe,gBAC/CsO,EAAWtP,KAAK+D,UAAW/D,KAAKC,GAAGc,iBACnCyR,EAAQvM,OAAQpC,EAAKE,UAAWF,EAAK5D,GAAGqB,iBAAkBuD,WAAc,CAEvEhB,GAAKrB,MAAM4C,OAAOb,QAAU,IAC7BiO,EAAQ,EAGZ,IAAIC,GAAgB5O,EAAKrB,MAAM4C,OAAOoN,GAAOxK,OACzC0K,EAAiB7O,EAAKrB,MAAMyF,aAQhC,IANMpE,EAAKqE,SAAUrE,EAAKrB,MAAM4C,OAAOoN,GAAOvK,iBAE1CyK,EAAiB7O,EAAKrB,MAAM4C,OAAOoN,GAAOvK,eAIzCpE,EAAKqE,SAAUwK,GAAmB,CAEnC,GAAIC,GAAa9O,EAAKtB,SAAS6I,oBAAsBvH,EAAK6E,UAAW+J,GAAkB,yBAExE,WAEX,GAAIG,MACAC,EAAUhP,EAAKE,UAAWF,EAAK5D,GAAGiB,sBAgCtC,OA9BA0R,GAAKE,KAAO,SAAUtK,EAAKwH,GAEvB6C,EAAQxJ,UAAUE,IAAK,OAEvB,IAAIwJ,GAAgB/C,EAAQgD,cAAgB,WACxCC,EAAajD,EAAQkD,WAAa,aAClCC,EAAanD,EAAQoD,WAAa,aAClCC,EAAUrD,EAAQqD,SAAW,GAE7BC,EAAkBjQ,OAAOwH,WAAY,WACrCxH,OAAO0P,GAAiB,aACxBF,EAAQxJ,UAAUC,OAAQ,QAC1B6J,KACS,IAAVE,EAEHhQ,QAAO0P,GAAiB,SAAUQ,GAC9BlQ,OAAOmQ,aAAcF,GACrBT,EAAQxJ,UAAUC,OAAQ,QAC1B2J,EAAYM,GAGhB,IAAIE,GAAS/I,SAASkB,cAAe,SACrC6H,GAAO3J,KAAO,kBACd2J,EAAOC,OAAQ,EACfD,EAAOjL,IAAMA,EAEbkC,SAASC,qBAAsB,QAAS,GAAGY,YAAakI,IAIrDb,MAIJE,KAAMH,GAETK,aAAc,SACdE,UAAW,QAAAA,GAAU3B,GAEjB1N,EAAK8P,YAAapC,EAAKnJ,KAAMmJ,EAAKqC,UAEtCR,UAAW,QAAAA,KAEPvP,EAAK8P,YAAalB,EAAeC,IAGrCW,QAAS,QAMbxP,GAAK8P,YAAalB,EAAeC,EAIrCH,GAAqBxL,MAAMC,QAAU,QACrChH,KAAKyP,QAAS8C,GAEdjD,EAAS5J,iBAAkB,QAAS,WAChC7B,EAAK6L,iBACLC,MAAM,0CAKD3H,EAAQ6L,GAEjB,GAAIC,GAA8B9T,KAAK+D,UAAW/D,KAAKC,GAAGgB,uBAEtDmH,EAAOsC,SAASkB,cAAe,KAEnCxD,GAAKvD,UAAYmD,CAEjB,IAAI4L,GAAUlJ,SAASkB,cAAe,MAEtCgI,GAAQ/O,UAAYgP,EAEpBC,EAA4BvI,YAAanD,GACzC0L,EAA4BvI,YAAaqI,4CAOzC,GAAI5S,GAAiBhB,KAAK+D,UAAW/D,KAAKC,GAAGe,gBACzCC,EAAwBjB,KAAK+D,UAAW/D,KAAKC,GAAGgB,sBAEpDjB,MAAKsS,SAAUtR,EAAgB,WAE3BA,EAAe+F,MAAMC,QAAU,GAE/B/F,EAAsB4D,UAAY,GAClC7D,EAAeqI,UAAUC,OAAQ,uEASrC,GAAMzF,GAAO7D,IACQA,MAAK+D,UAAW/D,KAAKC,GAAGa,gBAE9B4E,iBAAkB,QAAS,WAEtC7B,EAAKkQ,+DAST,GAAMlQ,GAAO7D,IACW6D,GAAKE,UAAW/D,KAAKC,GAAG2B,iBAEhC8D,iBAAkB,QAAS,WAEvC,GAAMhE,GAAYmC,EAAKE,UAAWF,EAAK5D,GAAGyB,UAEV,SAA3BA,EAAUqF,MAAMC,SAAgD,IAA3BtF,EAAUqF,MAAMC,QAEtDnD,EAAKwG,iBAILxG,EAAKuG,+DAWb,GAAMvG,GAAO7D,KACP0B,EAAYmC,EAAKE,UAAWF,EAAK5D,GAAGyB,WACpCsS,EAAanQ,EAAKE,UAAWF,EAAK5D,GAAGuB,aACrCI,EAAkBiC,EAAKE,UAAW/D,KAAKC,GAAG2B,gBAEhDF,GAAUqF,MAAMC,QAAU,QAC1BgN,EAAWjN,MAAMC,QAAU,OAE3BnD,EAAKoQ,WAAYrS,EAAgBwH,WAAY,WAEzCxH,EAAgByH,UAAUE,IAAK,UAC/B7H,EAAUqF,MAAMmN,YAAa,aAAc,sDAS/C,GAAMrQ,GAAO7D,KACP0B,EAAYmC,EAAKE,UAAWF,EAAK5D,GAAGyB,WACpCsS,EAAanQ,EAAKE,UAAWF,EAAK5D,GAAGuB,aACrCI,EAAkBiC,EAAKE,UAAW/D,KAAKC,GAAG2B,gBAEhDF,GAAUqF,MAAMC,QAAU,OAC1BtF,EAAUqF,MAAMmN,YAAa,aAAc,UAC3CF,EAAWjN,MAAMC,QAAU,OAE3BnD,EAAKsQ,SAAUvS,EAAgBwH,WAAY,WAEvCxH,EAAgByH,UAAUC,OAAQ,gDAQ/B8I,EAAKgC,GAIZ,MAFAA,GAAqB,iBAARA,IAAoBA,EAE5BA,EAEM1J,SAAS2J,iBAAkBjC,GAI3B1H,SAAStE,cAAegM,0CAMzBnL,EAAKmL,EAAKgC,GAIpB,MAFAA,GAAqB,iBAARA,IAAoBA,EAE5BA,EAEMnN,EAAIoN,iBAAkBjC,GAItBnL,EAAIb,cAAegM,uCAMvBA,GAEP,MAAOA,GAAIxN,QAAQ,UAAW,IAAIyD,iDAI5B+J,GAEN,MAAoB,gBAARA,IAAmC,KAAfA,EAAIkC,aAIvBnM,KAARiK,GAIS,OAATA,0CAQK3P,EAAK8R,GAEf,GAAM1Q,GAAO7D,KACT0E,EAAOb,EAAKE,UAAW,QACvByQ,EAAU,GAAIC,eAElBD,GAAQE,KAAM,MAAOjS,GAAK,GAE1B+R,EAAQG,OAAS,WAER3U,KAAK4U,QAAU,KAAO5U,KAAK4U,OAAS,IAErCL,EAAUvU,MAIV0E,EAAKG,WAAa,4BAA8B7E,KAAK4U,OAAS,wBAA0BnS,EAAM,gBAIlG+R,EAAQK,SAIZL,EAAQM,QAAU,WAEdpQ,EAAKG,WAAa,kEAItB2P,EAAQ1B,6CAICrQ,EAAK8R,GAEd,GAAIC,GAAU,GAAIC,gBACdM,GAAQ,CAEZP,GAAQE,KAAM,OAAQjS,GAAK,GAE3B+R,EAAQG,OAAS,WAITI,EAFC/U,KAAK4U,QAAU,KAAO5U,KAAK4U,OAAS,IAUzCL,EAAUQ,IAIdP,EAAQ1B,6CAICkC,GAkBT,MAhBAA,GAAIzP,QAAS,SAAU0K,EAAOuC,GAEX,KAAVvC,GACD+E,EAAIC,OAAQzC,EAAO,KAKpB,2BAA6B0C,KAAMF,EAAIA,EAAIzQ,OAAO,KACrDyQ,EAAIG,MAGD,wBAA0BD,KAAMF,EAAIA,EAAIzQ,OAAO,KAClDyQ,EAAIG,MAGDH,sCAIA5C,GAEP,GAAIgD,GAAShD,EAAIiD,MAAO,KACpBzP,EAASwP,EAAM,EAMtB,OAJQxP,GAAO0P,YAAa,OAAU1P,EAAOrB,OAAS,IACrDqB,GAAU,KAGJ5F,KAAKuV,YAAa3P,EAAOyP,MAAO,+CAIxBtE,GAEZ,GAAIyE,GAAMxV,KAAKyV,UAAW1E,GAAMsE,MAAO,IAKvC,OAJeK,MAAKC,OAAgC,IAArBC,SAAUJ,EAAI,IACR,IAArBI,SAAUJ,EAAI,IACO,IAArBI,SAAUJ,EAAI,KAAiB,KAE7B,IAAM,OAAS,2CAI1BzE,GAEPA,EAAMA,EAAInM,QAAS,cAAe,GAElC,IAAIiR,GAASD,SAAU7E,EAAK,GAK5B,QAJU8E,GAAU,GAAO,IACjBA,GAAU,EAAM,IACT,IAATA,GAESC,+CAONC,EAAInO,GAEf5H,KAAKwC,MAAMO,aAAc,EAEzB,SAAUgN,EAAEiG,EAAEC,EAAEC,EAAEC,EAAExJ,EAAEyJ,GAAGrG,EAAA,sBAA2BoG,EAAEpG,EAAEoG,GAAGpG,EAAEoG,IAAI,YAChEpG,EAAEoG,GAAGE,EAAEtG,EAAEoG,GAAGE,OAAO1N,KAAK2N,YAAYvG,EAAEoG,GAAGI,EAAE,EAAE,GAAIjJ,MAAOX,EAAEqJ,EAAEpK,cAAcqK,GAAGG,EAAEJ,EAAErL,qBAAqBsL,GAAG,GAAGtJ,EAAE+G,MAAM,EAAE/G,EAAEnE,IAAI0N,EAAEE,EAAEhN,WAAWoN,aAAa7J,EAAEyJ,IAAK/S,OAAOqH,SAAS,SAAS,0CAA0C,MAEnO+L,GAAI,SAAUV,EAAI,QAClBU,GAAI,OAASC,QAAW,eAAgBC,WAAc/O,IACtD6O,GAAI,OAAQ,cAAgBG,WAAY5W,KAAKkD,UAAUM,mDAI5CqT,EAAUC,EAAQ7M,GAExBjK,KAAKwC,MAAMO,aAEZ0T,GAAI,OAAQ,QAASI,EAAUC,EAAQ7M,EAAO,GAAK2M,WAAY5W,KAAKkD,UAAUM,gDAQ1EvD,GAER,GAAM4D,GAAO7D,IAEb,IAAKC,EAAG8W,YAAc9W,EAAG+W,YAAc,CAEnC,GAAIC,GAAU,MACVC,EAAY,GAEhBrT,GAAKJ,QAAQC,MAAQL,OAAO8T,YAAa,WAErClX,EAAGmJ,WAAWC,UAAUC,OAAQ,gBAChCrJ,EAAGmJ,WAAWC,UAAUE,IAAK,WAE7BtJ,EAAG8G,MAAMqQ,MAAQnX,EAAG+W,YAAc,KAElC3T,OAAOgU,cAAexT,EAAKJ,QAAQC,OAEnCG,EAAKJ,QAAQE,KAAON,OAAOwH,WAAY,WAEnC5K,EAAG8G,MAAMqQ,MAAQ,UACjBnX,EAAGmJ,WAAWC,UAAUC,OAAQ,WAChCjG,OAAOmQ,aAAc3P,EAAKJ,QAAQE,MAElCE,EAAK4L,QAASxP,GACd4D,EAAKoH,WAAYhL,IAnBX,QACE,6CA4BVA,GAEVA,EAAG8G,MAAMqQ,MAAQ,GACjBnX,EAAGmJ,WAAWC,UAAUC,OAAQ,WAChCrJ,EAAGmJ,WAAWC,UAAUE,IAAK,gBAEF,OAAtBvJ,KAAKyD,QAAQE,MACdN,OAAOmQ,aAAcxT,KAAKyD,QAAQE,MAGV,OAAvB3D,KAAKyD,QAAQC,OACdL,OAAOgU,cAAerX,KAAKyD,QAAQC,yCAKlCzD,EAAIsU,GAKT,GAHAtU,EAAGoJ,UAAUC,OAAQ,WACrBrJ,EAAGoJ,UAAUE,IAAK,cAEApB,KAAboM,EAAyB,CAE1B,GAAI+C,GAAetX,KAAKuX,sBAExBtX,GAAGuX,QACCC,OAAQH,EACRI,UAAWnD,GAGftU,EAAGyF,iBAAkB4R,EAActX,KAAK2X,mDAMtC1X,EAAIsU,GAKV,GAHAtU,EAAGoJ,UAAUC,OAAQ,UACrBrJ,EAAGoJ,UAAUE,IAAK,eAEApB,KAAboM,EAAyB,CAE1B,GAAI+C,GAAetX,KAAKuX,sBAExBtX,GAAGuX,QACCC,OAAQH,EACRI,UAAWnD,GAGftU,EAAGyF,iBAAkB4R,EAActX,KAAK2X,wDAMjChS,OAE0BwC,KAAhCxC,EAAIC,OAAO4R,OAAOE,WAEyB,kBAAhC/R,GAAIC,OAAO4R,OAAOE,WAE1B/R,EAAIC,OAAO4R,OAAOE,YAM1B/R,EAAIC,OAAOyD,UAAUC,OAAQ,UAC7B3D,EAAIC,OAAOyD,UAAUC,OAAQ,WAC7B3D,EAAIC,OAAOgS,oBAAqBjS,EAAIC,OAAO4R,OAAOC,OAAQzX,KAAK2X,eAE/DhS,EAAIC,OAAO4R,QACPC,OAAQ,GACRC,UAAW,yCAKPzX,EAAIsU,GAKZ,GAHAtU,EAAGoJ,UAAUE,IAAK,aAClBtJ,EAAGoJ,UAAUC,OAAQ,eAEHnB,KAAboM,EAAyB,CAE1B,GAAI+C,GAAetX,KAAKuX,sBAExBtX,GAAGuX,QACCC,OAAQH,EACRI,UAAWnD,GAGftU,EAAGyF,iBAAkB4R,EAActX,KAAK6X,oDAMtC5X,EAAIsU,GAKV,GAHAtU,EAAGoJ,UAAUE,IAAK,WAClBtJ,EAAGoJ,UAAUC,OAAQ,iBAEHnB,KAAboM,EAAyB,CAE1B,GAAI+C,GAAetX,KAAKuX,sBAExBtX,GAAGuX,QACCC,OAAQH,EACRI,UAAWnD,GAGftU,EAAGyF,iBAAkB4R,EAActX,KAAK6X,0DAMhClS,OAEewC,KAAtBxC,EAAIC,OAAO4R,SAEgC,kBAAhC7R,GAAIC,OAAO4R,OAAOE,WAE1B/R,EAAIC,OAAO4R,OAAOE,YAItB/R,EAAIC,OAAOgS,oBAAqBjS,EAAIC,OAAO4R,OAAOC,OAAQzX,KAAK6X,kEAQnE,GAAIC,OAAA,GACA7X,EAAKyK,SAASkB,cAAe,eAC7BmM,GACAC,UAAa,eACbC,WAAc,gBACdC,aAAgB,eAChBC,gBAAmB,qBAGvB,KAAML,IAAOC,GAET,OAAuB5P,KAAlBlI,EAAG8G,MAAM+Q,GAEV,MAAOC,GAAWD,aAYlC,QAAWM,GAAOC,IAET3N,SAAS4N,YAAsC,aAAxB5N,SAAS6N,WAAoD,YAAxB7N,SAAS6N,YAEtEF,IAIA3N,SAAShF,iBAAkB,mBAAoB2S,IAIlD,WAED,GAAIvY","file":"audio.js","sourcesContent":["/*\n * Audio Player\n *\n * @author: Ethan Lin\n * @url: https://github.com/oel-mediateam/audioplayer\n * @version: 2.0.0\n *\n * @license: The MIT License (MIT)\n * Copyright (c) 2014 - 2018 Media Serivces\n *\n */\n\n'use strict';\n\n// audio player class\nclass APlayer {\n    \n    constructor() {\n        \n        // elements of the audio player\n        this.el = {\n            splash: '#ap-splash',\n            splashTitle: '#ap-splash .cover-info .title',\n            splashSubtitle: '#ap-splash .cover-info .subtitle',\n            splashAuthor: '#ap-splash .cover-info .author',\n            splashLength: '#ap-splash .cover-info .length',\n            startBtn: '#ap-start-btn',\n            resumeBtn: '#ap-resume-btn',\n            dwnldBtn: '#ap-dwnld-btn',\n            dwnldBtnMenu: '#ap-dwnld-btn .dropdown-content',\n            mainDwnldBtn: '#ap-download-cntrl',\n            main: '#ap-main',\n            mainBody: '#ap-main .body',\n            showProfileBtn: '#show-profile',\n            closeOverlayBtn: '#overlay-close-btn',\n            overlayDisplay: '#overlay-content',\n            overlayDisplayContent: '#overlay-content .content',\n            overlayDisplaySpinner: '#overlay-content .spinner',\n            currentPic: '.head .track-img button',\n            trackTitle: '.track-info .title-wrapper .title',\n            trackAuthor: '.track-info .author',\n            currentTrackNum: '.track-info .meta .current',\n            totalTracks: '.track-info .meta .total',\n            miniDisplay: '.track-list .minimized-display',\n            upNextTrack: '.track-list .minimized-display .ap_up_next_title',\n            trackList: '.track-list .tracks',\n            trackListItem: '.track-list .tracks li .ap-track',\n            expandTracksBtn: '.track-list .expand-btn',\n            next: '#ap-next',\n            previous: '#ap-previous',\n            warning: 'body .warning-msg',\n            captionBtn: '#ap-caption',\n            error: '#ap-error',\n            errorIcon: '#ap-error .icon',\n            errorTitle: '#ap-error .title',\n            errorBody: '#ap-error .body',\n            playerId: '#player',\n            copyright: '.copyright p'\n        };\n        \n        // manifest object to hold data from the manifest JSON file\n        this.manifest ={};\n        \n        // album object to hold data from the album XML file\n        this.album = {\n            url: 'assets/album.xml',\n            program: {},\n            downloads: [],\n            currentTrack: 0,\n            sameAuthor: true,\n            sameAuthorLoaded: false,\n            analyticsOn: false,\n            hasCaption: false\n        };\n        \n        // holds the reference to the audio player instance\n        this.player = null;\n        \n        // reference object to hold reference values\n        this.reference = {\n            names: this._parseUri( window.location.href ),\n            fileName: 'album'\n        };\n        \n        // marquee object to hold start and stop timers\n        this.marquee ={\n            start: null,\n            stop: null\n        };\n        \n        // start the player by loading and getting the manifest\n        this.getManifest();\n        \n    }\n    \n    // function to get the manifest data and then set the player UIs\n    getManifest() {\n        \n        const self = this;\n        let manifestUrl = self._selector( '#ap-manifest' ).getAttribute( 'href' );\n        \n        self._requestFile( manifestUrl, function( xhr ) {\n            \n            self.manifest = JSON.parse( xhr.response );\n            \n            if ( self.manifest.ap_root_directory.length === 0 ) {\n        \n                self.manifest.ap_root_directory = 'source/';\n                \n            }\n            \n            self.setUIs();\n            \n        } );\n        \n    }\n    \n    // function to set the player UIs from loading the template file and then\n    // check for support, bind event listners, and get album data\n    setUIs() {\n        \n        const self = this;\n        let templateUrl = self.manifest.ap_root_directory + 'script/templates/apui.tpl';\n        \n        self._requestFile( templateUrl, function( xhr ) {\n            \n            let body = self._selector( 'body' );\n            const res = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n            \n            body.innerHTML += res;\n            \n            self._checkSupport();\n            self._setStartResumeListeners();\n            self._expandDownloadBtnMenu();\n            self.expandTracksToggle();\n            self._setShowProfileListener();\n            \n            self.getAlbum();\n            \n        } );\n        \n    }\n    \n    // \"private\" function to add track list click event listener\n    _trackListItemListener() {\n        \n        const self = this;\n        let tracks = self._selector( self.el.trackListItem, true );\n        \n        Array.prototype.forEach.call( tracks, function( track ) {\n            \n            track.addEventListener( 'click', function( evt ) {\n                \n                if ( evt.target.className !== 'track-download' &&\n                evt.target.nodeName !== 'svg' && evt.target.nodeName !== 'use' ) {\n                    \n                    self.album.currentTrack = evt.currentTarget.getAttribute( 'data-index' );\n                    self.setTrack( Number( self.album.currentTrack ) );\n                    evt.preventDefault();\n                    \n                }\n                \n            } );\n            \n        } );\n        \n    }\n    \n     // \"private\" function to add expand download button event listeners\n    _expandDownloadBtnMenu() {\n        \n        const self = this;\n        \n        let dwnldBtn = self._selector( self.el.dwnldBtn );\n        let btn = dwnldBtn.querySelector( 'button' );\n        let menu = self._selector( self.el.dwnldBtnMenu );\n        \n        dwnldBtn.addEventListener( 'mouseenter', function() {\n            \n            btn.setAttribute( 'aria-expanded', true );\n            menu.setAttribute( 'aria-expanded', true );\n            \n        } );\n        \n        dwnldBtn.addEventListener( 'mouseleave', function() {\n            \n            btn.setAttribute( 'aria-expanded', false );\n            menu.setAttribute( 'aria-expanded', false );\n            \n        } );\n        \n    }\n    \n     // \"private\" function to add start and resume click event listeners\n    _setStartResumeListeners() {\n        \n        const self = this;\n        \n        let startBtn = self._selector( self.el.startBtn );\n        \n        startBtn.addEventListener( 'click', function() {\n            \n            self.hideSplash();\n            self.sendEventToGA( 'StartBtn', 'click', self.reference.fileName );\n            \n            self.setTrack( self.album.currentTrack );\n            \n        } );\n        \n        if ( Modernizr.localstorage ) {\n            \n            let resumeBtn = self._selector( self.el.resumeBtn );\n            \n            const savedData = JSON.parse( window.localStorage.getItem( 'ap-player' ) );\n            \n            if ( savedData !== null ) {\n                \n                if ( savedData.track >= 1 || savedData.time > 0 ) {\n                    \n                    resumeBtn.style.display = 'block';\n                    \n                    resumeBtn.addEventListener( 'click', function() {\n                        \n                        self.sendEventToGA( 'ResumeBtn', 'click', self.reference.fileName );\n                        \n                        self.hideSplash();\n                        self.setTrack( savedData.track, savedData.time );\n                        \n                    } );\n                    \n                }\n                \n            }\n            \n        }\n        \n    }\n    \n     // function to get the data from the album XML file and set the data to it respective UIs and set up the audio player\n    getAlbum() {\n        \n        const self = this;\n        \n        self._requestFile( self.album.url, function( xhr ) {\n            \n            const xml = xhr.responseXML;\n            const xmlSettings = self._xmlSelector( xml, 'album' );\n            const xmlSetup = self._xmlSelector( xml, 'setup' );\n            const xmlTracks = self._xmlSelector( xml, 'track', true );\n            \n            // settings\n            self.album.settings = {};\n            self.album.settings.accent = xmlSettings.getAttribute( 'accent' );\n            self.album.settings.splashFormat = '.' + xmlSettings.getAttribute( 'splashImgFormat' );\n            self.album.settings.trackImgFormat = '.' + xmlSettings.getAttribute( 'trackImgFormat' );\n            self.album.settings.analytics = xmlSettings.getAttribute( 'analytics' );\n            self.album.settings.version = xmlSettings.getAttribute( 'xmlVersion' );\n            \n            // setup\n            self.album.title = self._xmlSelector( xmlSetup, 'title' ).textContent;\n            self.album.subtitle = self._xmlSelector( xmlSetup, 'subtitle' ).textContent;\n            self.album.author = self._xmlSelector( xmlSetup, 'author' ).getAttribute( 'name' );\n            self.album.authorProfile = self._xmlSelector( xmlSetup, 'author' ).textContent;\n            self.album.length = self._xmlSelector( xmlSetup, 'length' ).textContent;\n            \n            // set program\n            if ( self._isEmpty( xmlSetup.getAttribute( 'program' ) ) ) {\n                \n                if ( self.reference.names[3] !== undefined ) {\n                    \n                    self.album.program.name = self.reference.names[3].toLowerCase();\n                    \n                }\n                \n            } else {\n                \n                self.album.program.name = xmlSetup.getAttribute( 'program' ).toLowerCase();\n                \n            }\n            \n            // set course\n            if ( !self._isEmpty( xmlSetup.getAttribute( 'course' ) ) ) {\n                \n                self.album.program.course = xmlSetup.getAttribute( 'course' );\n                \n            }\n            \n            // track(s)\n            self.album.tracks = [];\n            \n            Array.prototype.forEach.call( xmlTracks, function( el) {\n                \n                let obj = {};\n            \n                obj.src = el.getAttribute( 'src' );\n                obj.title = el.querySelector( 'title' ).innerHTML;\n                obj.author = el.querySelector( 'author' ).getAttribute( 'name' );\n                obj.authorProfile = el.querySelector( 'author' ).innerHTML;\n                \n                if ( self._isEmpty( obj.author ) ) {\n                    \n                    obj.author = self.album.author;\n                    \n                }\n                \n                if ( obj.author !== self.album.author ) {\n                    self.album.sameAuthor = false;\n                }\n                \n                if ( self._isEmpty( obj.author ) ) {\n                    \n                    obj.img = self._sanitize( self.album.author ) + self.album.settings.trackImgFormat;\n                    \n                } else {\n                    \n                    obj.img = self._sanitize( obj.author ) + self.album.settings.trackImgFormat;\n                    \n                }\n\n                self.album.tracks.push( obj );\n                \n            } );\n            \n            if ( self.album.settings.analytics === \"on\" || \n            self.album.settings.analytics === \"yes\" ) {\n                \n                if ( !self._isEmpty( self.manifest.ap_google_tracking_id ) ) {\n                    \n                    self.addGATracking( self.manifest.ap_google_tracking_id, self.album.settings.version );\n                    \n                }\n                \n            }\n            \n            self.setData();\n            self._setupAudioPlayer();\n            \n        } );\n        \n    }\n    \n    // function to set track\n    setTrack( num, seektime ) {\n        \n        seektime = typeof seektime !== 'undefined' ? seektime : 0;\n        \n        // hold the class\n        const self = this;\n        \n        // update current track\n        num = Number( num );\n        self.album.currentTrack = num;\n        \n        // display title\n        let currentTitle = self._selector( self.el.trackTitle );\n            \n        currentTitle.innerHTML = self.album.tracks[num].title;\n        \n        // display author\n        let currentAuthor = self._selector( self.el.trackAuthor );\n        \n        currentAuthor.innerHTML = self.album.tracks[num].author;\n        \n        // load author picture if the track author is different\n        if ( !self.album.sameAuthor ) {\n\n            self._loadAuthorPic( self.album.tracks[num] );\n            \n        }\n        \n        // load author picture once if same author\n        if ( self.album.sameAuthor && self.album.sameAuthorLoaded === false ) {\n                \n            self._loadAuthorPic( self.album.tracks[num] );\n            self.album.sameAuthorLoaded = true;\n            \n        }\n        \n        // if more than one track\n        if ( self.album.tracks.length > 1 ) {\n            \n            // display and get current track number\n            let currentTrack = self._selector( self.el.currentTrackNum );\n            currentTrack.innerHTML = num + 1;\n            \n            let totalTracks = self._selector( self.el.totalTracks );\n            totalTracks.innerHTML = self.album.tracks.length;\n            \n            // add active class to current track in list\n            const tracks = self._selector( self.el.trackListItem, true );\n            \n            Array.prototype.forEach.call( tracks, function( track ) {\n                track.parentNode.classList.remove( 'active' );\n            } );\n            \n            tracks[num].parentNode.classList.add( 'active' );\n            \n        }\n        \n        // display next track title\n        let upNextTrackTitle = self._selector( self.el.upNextTrack );\n        \n        if ( self.album.tracks.length > 1 && num < self.album.tracks.length - 1 ) {\n            \n            upNextTrackTitle.innerHTML = self.album.tracks[num + 1].title;\n            \n        }\n        \n        // play the audio if the player is ready after setting source\n        if ( self.player !== null ) {\n            \n            if ( self.player.playing ) {\n                \n                self.player.stop();\n                \n            }\n            \n            const captionUrl = 'assets/audio/' + self.album.tracks[num].src + '.vtt';\n            \n            self._fileExists( captionUrl, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    self.player.source = {\n                \n                        type: 'video',\n                        title: self.album.tracks[num].title,\n                        sources: [\n                            \n                            {\n                                \n                                src: 'assets/audio/' + self.album.tracks[num].src + '.mp3',\n                                type: 'audio/mp3'\n                                \n                            }\n                            \n                        ],\n                        tracks: [\n                            \n                            {\n                                kind: 'captions',\n                                label: 'English',\n                                srclang: 'en',\n                                src: 'assets/audio/' + self.album.tracks[num].src + '.vtt',\n                                default: true\n                            }\n                            \n                        ]\n                        \n                    };\n                    \n                    self._closeTrackList();\n                    self.album.hasCaption = true;\n                    \n                } else {\n                    \n                    self.player.source = {\n                \n                        type: 'video',\n                        title: self.album.tracks[num].title,\n                        sources: [\n                            \n                            {\n                                \n                                src: 'assets/audio/' + self.album.tracks[num].src + '.mp3',\n                                type: 'audio/mp3'\n                                \n                            }\n                            \n                        ]\n                        \n                    };\n                    \n                    self._openTrackList();\n                    self.album.hasCaption = false;\n                    \n                }\n                \n                self.player.on( 'ready', function() {\n                \n                    self._handlePlayerReady();\n                    \n                    self.player.play();\n                    \n                    if ( self.album.hasCaption ) {\n                        \n                        self.player.toggleCaptions( true );\n                        \n                    }\n                    \n                    if ( seektime > 0 ) {\n                        \n                        document.getElementsByTagName('video')[0].currentTime = seektime;\n                        \n                    } else {\n                        \n                        window.setTimeout( function() {\n                        \n                            if ( Modernizr.localstorage ) {\n                                \n                                window.localStorage.setItem( 'ap-player', JSON.stringify( {track: num, time: seektime } ) );\n                                \n                            }\n                            \n                        }, 3000 );\n                        \n                    }\n                    \n                } );\n                \n            } );\n            \n        }\n        \n        // scroll the track title is applicable\n        self._stopMarquee( currentTitle );\n        self._marqueeEl( currentTitle );\n        \n    }\n    \n     // \"private\" function to determind and load the author profile image\n    _loadAuthorPic( track ) {\n        \n        const self = this;\n        let currentPic = self._selector( self.el.currentPic );\n        let localPicUrl = 'assets/images/' + track.img;\n        let centralPicUrl = self.manifest.ap_author_directory + self._sanitize( track.author ) + self.album.settings.trackImgFormat;\n        let authorPic = new Image();\n        \n        authorPic.src = self.manifest.ap_root_directory + 'images/pic.png';\n        \n        self._fileExists( localPicUrl, function( exist ) {\n            \n            if ( exist ) {\n                \n                authorPic.src = localPicUrl;\n                \n            } else {\n                \n                self._fileExists( centralPicUrl, function( exist ) {\n    \n                    if ( exist ) {\n                        \n                        authorPic.src = centralPicUrl;\n                        \n                    }\n                    \n                } );\n                \n            }\n            \n        } );\n        \n        currentPic.innerHTML = '';\n        currentPic.appendChild( authorPic );\n        \n    }\n    \n    // function to set the album data to their respective UI elements\n    setData() {\n        \n        const self = this;\n        \n        // DOM head elements\n        let pageTitle = this._selector( 'title' );\n        \n        pageTitle.innerHTML = this.album.title;\n        \n        // splash screen\n        let title = this._selector( this.el.splashTitle );\n        let subtitle = this._selector( this.el.splashSubtitle );\n        let author = this._selector( this.el.splashAuthor );\n        let length = this._selector( this.el.splashLength );\n        \n        title.innerHTML = this.album.title;\n        subtitle.innerHTML = this.album.subtitle;\n        author.innerHTML = this.album.author;\n        length.innerHTML = this.album.length;\n        \n        // splash download menu list\n        if ( self.reference.names.length > 0 ) {\n            \n            this.reference.fileName = self.reference.names[self.reference.names.length - 1];\n            \n        }\n        \n        Array.prototype.forEach.call( this.manifest.ap_download_files, function( el ) {\n            \n            let file = self.reference.fileName + '.' + el.format;\n            \n            self._fileExists( file, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let link = document.createElement( 'a' );\n            \n                    link.href = file;\n                    link.setAttribute( 'role', 'menuitem' );\n                    link.setAttribute( 'download', file );\n                    link.innerHTML = el.label;\n                    \n                    link.addEventListener( 'click', function() {\n                        \n                        self.sendEventToGA( el.label + 'DwnldLink', 'click', self.reference.fileName );\n                        \n                    } );\n                    \n                    let dwnldMenu = self._selector( self.el.dwnldBtnMenu );\n                    dwnldMenu.appendChild( link );\n                    \n                    let dwnldBtn = self._selector( self.el.dwnldBtn );\n                    dwnldBtn.setAttribute( 'aria-hidden', false );\n                    dwnldBtn.style.display = 'block';\n                    \n                    let dwnldFile = {\n                        name: el.label,\n                        url: file\n                    };\n                    \n                    self.album.downloads.push( dwnldFile );\n                    \n                }\n                \n            } );\n            \n        } );\n        \n        // splash background image\n        if ( !this._isEmpty( this.album.program.name ) ) {\n            \n            let bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/default' + this.album.settings.splashFormat;\n            \n            if ( !this._isEmpty( self.album.program.course ) ) {\n                \n                bgUrl = this.manifest.ap_splash_directory + this.album.program.name + '/' + this.album.program.course + this.album.settings.splashFormat;\n                \n            }\n            \n            this._fileExists( bgUrl, function( exist ) {\n                \n                if ( exist ) {\n                    \n                    let splashBg = self._selector( self.el.splash );\n                    let head = self._selector( 'head' );\n                    let bgImg = 'url(\"' + bgUrl + '\")';\n                    \n                    splashBg.style.backgroundImage = bgImg;\n            \n                    // change the bg in the ap-main:before as well\n                    let style = document.createElement( 'style' );\n                    \n                    style.setAttribute( 'type', 'text/css' );\n                    style.innerHTML = '#ap-main:before{background-image: ' + bgImg + ' !important;}';\n                    \n                    head.appendChild( style );\n                    \n                }\n                \n            } );\n            \n        }\n        \n        // load accent\n        if ( !this._isEmpty( self.album.settings.accent ) ) {\n            \n            let textColor = self._colorContrast( self.album.settings.accent );\n            let accentUrl = this.manifest.ap_root_directory + 'script/templates/accent_css.tpl';\n            \n            this._requestFile( accentUrl, function( xhr ) {\n                \n                let accentStyle = xhr.response.replace( /\\{([accent)]+)\\}/ig, self.album.settings.accent );\n                \n                accentStyle = accentStyle.replace( /\\{([accentText)]+)\\}/ig, textColor );\n                \n                let head = self._selector( 'head' );\n                let style = document.createElement( 'style' );\n                \n                style.setAttribute( 'type', 'text/css' );\n                style.innerHTML = accentStyle;\n                \n                head.appendChild( style );\n                \n            } );\n            \n        }\n        \n        // set tracks\n        if ( this.album.tracks.length > 1 ) {\n            \n            let trackListDisplay = this._selector( this.el.trackList );\n            \n            Array.prototype.forEach.call( this.album.tracks, function( el, indx ) {\n                \n                let li = document.createElement( 'li' );\n                let a = document.createElement( 'a' );\n                \n                a.classList.add( 'ap-track' );\n                a.href = 'javascript:void(0);';\n                a.setAttribute( 'data-index', indx );\n                \n                let numSpan = document.createElement( 'span' );\n                \n                numSpan.classList.add( 'track-num' );\n                numSpan.innerHTML = indx + 1 + '.';\n                \n                let titleWrprSpan = document.createElement( 'span' );\n                \n                titleWrprSpan.classList.add( 'track-title-wrapper' );\n                \n                let titleSpan = document.createElement( 'span' );\n                \n                titleSpan.classList.add( 'track-title' );\n                titleSpan.setAttribute( 'title', el.title );\n                titleSpan.innerHTML = el.title;\n                \n                titleWrprSpan.appendChild( titleSpan );\n                \n                if ( !self.album.sameAuthor ) {\n                    \n                    let img = document.createElement( 'img' );\n                    let localPicUrl = 'assets/images/' + self.album.tracks[indx].img;\n                    let centralPicUrl = self.manifest.ap_author_directory + self._sanitize( self.album.tracks[indx].author ) + self.album.settings.trackImgFormat;\n                    \n                    img.classList.add( 'track-img' );\n                    img.src = self.manifest.ap_root_directory + 'images/pic.png';\n        \n                    self._fileExists( localPicUrl, function( exist ) {\n                        \n                        if ( exist ) {\n                            \n                            img.src = localPicUrl;\n                            \n                        } else {\n                            \n                            self._fileExists( centralPicUrl, function( exist ) {\n                \n                                if ( exist ) {\n                                    \n                                    img.src = centralPicUrl;\n                                    \n                                }\n                                \n                            } );\n                            \n                        }\n                        \n                    } );\n                    \n                    a.appendChild( img );\n                    \n                }\n                \n                a.appendChild( numSpan );\n                a.appendChild( titleWrprSpan );\n                \n                // download button\n                let button = document.createElement( 'a' );\n                \n                button.classList.add( 'track-download' );\n                button.setAttribute( 'download', el.src + '.mp3' );\n                button.href = 'assets/audio/' + el.src + '.mp3';\n                button.setAttribute( 'role', 'button' );\n                \n                button.addEventListener( 'click', function() {\n                        \n                    self.sendEventToGA( el.src + 'TrackDwnldLink', 'click', self.reference.fileName );\n                    \n                } );\n                \n                let svg = document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' );\n                \n                svg.classList.add( 'icon' );\n                svg.setAttribute( 'aria-hidden', true );\n                svg.setAttribute( 'viewbox', '0 0 30 30' );\n                \n                let use = document.createElementNS( 'http://www.w3.org/2000/svg', 'use' );\n                \n                use.setAttributeNS( 'http://www.w3.org/1999/xlink', 'href', self.manifest.ap_root_directory + 'images/icons.svg#icon-download' );\n                \n                svg.appendChild( use );\n                button.appendChild( svg );\n                a.appendChild( button );\n                \n                li.appendChild( a );\n                \n                trackListDisplay.appendChild( li );\n                \n            } );\n            \n            self._openTrackList();\n            self._trackListItemListener();\n            \n        } else {\n            \n            this._selector( this.el.main ).classList.add( 'single' );\n            \n        }\n    \n        // copyright\n        let copyright = this._selector( this.el.copyright );\n        let date = new Date();\n        let year = date.getFullYear();\n        \n        copyright.innerHTML += '&copy; ' + year + '. ' + this.manifest.ap_copyright;\n        \n        // program theme\n        this._setProgram();\n        \n    }\n    \n     // \"private\" function to setup the audio player settings\n    _setupAudioPlayer() {\n        \n        const self = this;\n        \n        let plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/single_plyr_controls.tpl';\n        \n        if ( self.album.tracks.length > 1 ) {\n            \n            plyrControlsUrl = self.manifest.ap_root_directory + 'script/templates/full_plyr_controls.tpl';\n            \n        }\n        \n        self._requestFile( plyrControlsUrl, function( xhr ) {\n            \n            const controls = xhr.response.replace( /\\{([source)]+)\\}/ig, self.manifest.ap_root_directory );\n            \n            let useLocalStorage = false;\n            \n            if ( Modernizr.localstorage ) {\n                useLocalStorage = true;\n            }\n                \n            self.player = new Plyr( self.el.playerId, {\n        \n                controls: controls,\n                hideControls: false,\n                autoplay: false,\n                volume: 0.8,\n                clickToPlay: false,\n                fullscreen: {\n                    enabled: false,\n                    fallback: false,\n                    iosNative: false\n                },\n                captions: {\n                    active: true,\n                    language: 'en',\n                    update: false\n                },\n                resetOnEnd: true,\n                storage: { enabled: useLocalStorage, key: 'plyr' }\n                            \n            } );\n            \n            self.player.on( 'ready', function() {\n                \n                let captionArea = self._selector( '.plyr__captions' );\n                let bodyAreaHeight = self._selector( self.el.mainBody ).offsetHeight;\n                \n                let top = ( bodyAreaHeight - 40 ) * -1;\n                \n                captionArea.style.top = top + 'px';\n                captionArea.style.height = bodyAreaHeight + 'px';\n                \n                const downloadBtn = self._selector( self.el.mainDwnldBtn );\n                \n                if ( self.album.tracks.length > 1 ) {\n                    \n                    const totalTracks = self.album.tracks.length - 1;\n                    const nextBtn = self._selector( self.el.next );\n                    const prevBtn = self._selector( self.el.previous );\n                    \n                    if ( self.album.currentTrack <= 0 ) {\n                    \n                        prevBtn.setAttribute( 'disabled', true );\n                        prevBtn.classList.add( 'disabled' );\n                    }\n                    \n                    if ( self.album.currentTrack >= totalTracks ) {\n                                \n                        nextBtn.setAttribute( 'disabled', true );\n                        nextBtn.classList.add( 'disabled' );\n                        \n                    }\n                    \n                    nextBtn.addEventListener( 'click', function() {\n                    \n                    \n                        if ( self.album.currentTrack < totalTracks ) {\n                            \n                            self.album.currentTrack++;\n                            self.setTrack( self.album.currentTrack );\n                            \n                        }\n                        \n                    } );\n                    \n                    prevBtn.addEventListener( 'click', function() {\n                        \n                        if ( self.album.currentTrack > 0 ) {\n                            \n                            self.album.currentTrack--;\n                            self.setTrack( self.album.currentTrack );\n                            \n                        }\n                        \n                    } );\n                    \n                }\n                \n                downloadBtn.addEventListener( 'click', function() {\n                    \n                    let overlayDisplay = self._selector( self.el.overlayDisplay );\n                    let overlayDisplayContent = self._selector( self.el.overlayDisplayContent );\n                    let closeBtn = self._selector( self.el.closeOverlayBtn );\n                    \n                    let h4 = document.createElement( 'h4' );\n                    \n                    h4.innerHTML = \"Downloads\";\n                    \n                    overlayDisplayContent.appendChild( h4 );\n                    \n                    let ul = document.createElement( 'ul' );\n                    \n                    ul.classList.add( 'dwnld-list' );\n                    \n                    Array.prototype.forEach.call( self.album.downloads, function( obj ) {\n                        \n                        let li = document.createElement( 'li' );\n                        let a = document.createElement( 'a' );\n                        \n                        a.href = obj.url;\n                        a.innerHTML = obj.name;\n                        a.setAttribute( 'download', obj.url );\n                        \n                        a.addEventListener( 'click', function() {\n                                \n                            self.sendEventToGA( obj.name + 'DwnldLink', 'click', self.reference.fileName );\n                            \n                        } );\n                        \n                        li.appendChild( a );\n                        ul.appendChild( li );\n                        \n                    } );\n                    \n                    overlayDisplayContent.appendChild( ul );\n                    \n                    overlayDisplay.classList.add( 'small-overlay' );\n                    overlayDisplay.style.display = 'block';\n                    self._fadeIn( overlayDisplay );\n                    \n                    closeBtn.addEventListener( 'click', function() {\n                        self.closeOverlay();\n                    }, {once: true} );\n                    \n                } );\n                \n            } );\n            \n        } );\n        \n    }\n    \n     // \"private\" function handle player ready event\n    _handlePlayerReady() {\n        \n        const self = this;\n           \n        const playpauseBtn = self._selector( '#ap-playpause' );\n        const muteUnmuteBtn = self._selector( '#ap-muteunmute' );\n        const playbackRateBtn = self._selector( '#ap-playbackRate' );\n        const captionBtn = self._selector( self.el.captionBtn );\n        \n        // check playback rate and update playback rate select element\n        for ( var i = 0; i < playbackRateBtn.options.length; i++ ) {\n\n            if ( Number( playbackRateBtn.options[i].value ) === self.player.speed ) {\n                \n                playbackRateBtn.selectedIndex = i;\n                break;\n                \n            }\n            \n        }\n        \n        // check caption\n        if ( self.player.currentTrack >= 0 ) {\n            \n            captionBtn.classList.add( 'plyr__control--pressed' );\n            \n        } else {\n            \n            captionBtn.classList.remove( 'plyr__control--pressed' );\n            \n        }\n        \n        self.player.on( 'captionsenabled', function() {\n            \n            captionBtn.classList.add( 'plyr__control--pressed' );\n            \n            if ( self.album.tracks.length > 1 ) {\n                \n                self._closeTrackList();\n                \n            }\n            \n        } );\n        \n        self.player.on( 'captionsdisabled', function() {\n            \n            captionBtn.classList.remove( 'plyr__control--pressed' );\n            if ( self.album.tracks.length > 1 ) {\n                \n                self._openTrackList();\n                \n            }\n            \n            if ( Modernizr.localstorage ) {\n                            \n                let plyrSettings = JSON.parse( window.localStorage.getItem( 'plyr' ) );\n                \n                delete plyrSettings.captions;\n                \n                window.localStorage.setItem( 'plyr', JSON.stringify( plyrSettings ) );\n                    \n            }\n            \n        } );\n        \n        self.player.on( 'playing', function() {\n            \n            playpauseBtn.classList.add( 'plyr__control--pressed' );\n            \n        } );\n        \n        self.player.on( 'pause', function() {\n            \n            playpauseBtn.classList.remove( 'plyr__control--pressed' );\n            \n            if ( Modernizr.localstorage ) {\n                            \n                    window.localStorage.setItem( 'ap-player', JSON.stringify( {track: self.album.currentTrack, time: self.player.currentTime } ) );\n                    \n            }\n            \n        } );\n        \n        if ( Modernizr.localstorage ) {\n            \n            self.player.on( 'timeupdate', function() {\n                \n                let trackNum = Number( self.album.currentTrack ) + 1;\n                let currentTime = self.player.currentTime;\n                let pTime = currentTime / self.player.duration;\n                \n                if ( currentTime >= 3 && currentTime <= 4 ) {\n                    \n                    self.sendEventToGA( 'Playback', 'start', self.reference.fileName + ':track' + trackNum );\n                    \n                }\n                \n                if ( pTime >= 0.45 && pTime <= 0.5 ) {\n                    \n                    window.localStorage.setItem( 'ap-player', JSON.stringify( {track: self.album.currentTrack, time: self.player.currentTime } ) );\n                    \n                    self.sendEventToGA( 'Playback', 'halfway', self.reference.fileName + ':track' + trackNum );\n                    \n                }\n                \n            } );\n        \n        }\n        \n        // on playback end\n        self.player.on( 'ended', function() {\n            \n            let trackNum = Number( self.album.currentTrack ) + 1;\n            \n            if ( playpauseBtn.classList.contains( 'plyr__control--pressed' ) ) {\n            \n                playpauseBtn.classList.add( 'plyr__control--pressed' );\n                \n            }\n            \n            if ( Modernizr.localstorage ) {\n                            \n                window.localStorage.setItem( 'ap-player', JSON.stringify( {track: self.album.currentTrack, time: 0 } ) );\n                \n            }\n            \n            self.sendEventToGA( 'Playback', 'completed', self.reference.fileName + ':track' + trackNum );\n            \n            self.player.restart();\n            \n        } );\n        \n        // change playback rate\n        playbackRateBtn.addEventListener( 'change', function( evt ) {\n            \n            self.player.speed = Number( evt.target.options[evt.target.selectedIndex].value );\n            \n        } );\n        \n        // toglle mute/unmute state\n        muteUnmuteBtn.addEventListener( 'click', function( evt ) {\n            \n            if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                \n                evt.target.classList.remove( 'plyr__control--pressed' );\n                \n            } else {\n                \n                evt.target.classList.add( 'plyr__control--pressed' );\n                \n            }\n            \n        } );\n            \n    } // end player ready event\n    \n    // \"private\" function to set program theme bar\n    _setProgram() {\n        \n        const self = this;\n        \n        if ( self.manifest.ap_custom_themes ) {\n            \n            self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                \n                return obj.name === self.album.program.name;\n                \n            } );\n            \n            if ( self.album.program === undefined ) {\n                \n                self.album.program = self.manifest.ap_custom_themes.find( function ( obj ) {\n                    \n                    return obj.name === self.manifest.ap_logo_default;\n                    \n                } );\n                \n            }\n            \n        }\n        \n        let decorationBar = self._selector( '.program-theme' );\n    \n        self.album.program.colors.forEach( function( hex ) {\n                        \n            let span = document.createElement( 'span' );\n            span.style.backgroundColor = hex;\n            decorationBar.appendChild( span );\n            \n        } );\n        \n    }\n    \n    // \"private\" function to check for core feature support from web browser\n    _checkSupport() {\n        \n        if ( this.hasCoreFeaturesSupport() ) {\n        \n            this.showError( '🙈', '', 'Your web browser does not support core audio player features.<br><a href=\"http://outdatedbrowser.com/en\" target=\"_blank\">Please update your web browser.</a>' );\n            return;\n            \n        }\n        \n        if ( this.hasAppearanceIusses() ) {\n        \n            this.showWarning( 'Your web browser does not support some of the player\\'s features. For better viewing experience, try a different web browser.' );\n            \n        }\n        \n    }\n    \n    // function to determine the core feature support\n    hasCoreFeaturesSupport() {\n    \n        if ( !Modernizr.audio && Modernizr.json && Modernizr.json\n             && Modernizr.csscalc && Modernizr.flexbox ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    // function to determine any appearance issues\n    hasAppearanceIusses() {\n    \n        if ( !Modernizr.svg ) {\n            return true;\n        }\n        \n        if ( !Modernizr.cssanimations ) {\n            return true;\n        }\n        \n        if ( !Modernizr.bgsizecover ) {\n            return true\n        }\n        \n        if ( !Modernizr.objectfit ) {\n            return true\n        }\n        \n        return false;\n        \n    }\n    \n    // function to show error\n    showError( iconStr, titleStr, bodyStr ) {\n    \n        let splash = this._selector( this.el.splash );\n        let main = this._selector( this.el.main );\n        let error = this._selector( this.el.error );\n        let icon = this._selector( this.el.errorIcon );\n        let title = this._selector( this.el.errorTitle );\n        let body = this._selector( this.el.errorBody );\n        \n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = false;\n        \n        icon.innerHTML = iconStr;\n        title.innerHTML = titleStr;\n        body.innerHTML = bodyStr;\n        \n        splash.style.display = 'none';\n        main.style.display = 'none';\n        \n        error.style.display = 'flex';\n        error.setAttributeNode( ariaHidden );\n        \n        this._fadeIn( error );\n        \n    }\n    \n    // function to show warning\n    showWarning( str ) {\n    \n        const self = this;\n        let warning = self._selector( self.el.warning );\n        let hideTime = 10000;\n        \n        warning.innerHTML = str;\n        warning.style.display = 'block';\n        \n        self._fadeIn( warning );\n        \n        window.setTimeout( function() {\n            \n            self._fadeOut( warning, function() {\n                \n                warning.innerHTML = '';\n                warning.style.display = 'none';\n                \n            } );\n            \n        }, hideTime );\n        \n    }\n    \n    // function to hide the splash screen\n    hideSplash() {\n    \n        let splash = this._selector( this.el.splash );\n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = true;\n        \n        splash.classList.add( 'hide-splash' );\n        splash.setAttributeNode( ariaHidden );\n        \n    }\n    \n    // function to show author profile\n    showProfile() {\n        \n        const self = this;\n        let authorOverlayDisplay = this._selector( this.el.overlayDisplay );\n        let closeBtn = this._selector( this.el.closeOverlayBtn );\n        let index = Number( self._selector( self.el.currentTrackNum ).innerHTML ) - 1;\n        \n        if ( self.album.tracks.length <= 1 ) {\n            index = 0;\n        }\n        \n        let currentAuthor = self.album.tracks[index].author;\n        let currentProfile = self.album.authorProfile;\n        \n        if ( !self._isEmpty( self.album.tracks[index].authorProfile) ) {\n            \n            currentProfile = self.album.tracks[index].authorProfile;\n            \n        }\n        \n        if ( self._isEmpty( currentProfile ) ) {\n            \n            let profileUrl = self.manifest.ap_author_directory + self._sanitize( currentAuthor ) + '.json?callback=author';\n        \n            let $jsonp = ( function() {\n                \n                let that = {};\n                let spinner = self._selector( self.el.overlayDisplaySpinner );\n                \n                that.send = function( src, options ) {\n            \n                    spinner.classList.add( 'spin' );\n                    \n                    let callback_name = options.callbackName || 'callback',\n                        on_success = options.onSuccess || function() {},\n                        on_timeout = options.onTimeout || function() {},\n                        timeout = options.timeout || 10; // sec\n                \n                    let timeout_trigger = window.setTimeout( function() {\n                        window[callback_name] = function() {};\n                        spinner.classList.remove( 'spin' );\n                        on_timeout();\n                    }, timeout * 1000);\n                    \n                    window[callback_name] = function( data ) {\n                        window.clearTimeout( timeout_trigger );\n                        spinner.classList.remove( 'spin' );\n                        on_success( data );\n                    }\n                    \n                    let script = document.createElement( 'script' );\n                    script.type = 'text/javascript';\n                    script.async = true;\n                    script.src = src;\n                    \n                    document.getElementsByTagName( 'head' )[0].appendChild( script );\n                \n                }\n                \n                return that;\n                \n            } )();\n            \n            $jsonp.send( profileUrl, {\n                \n                callbackName: 'author',\n                onSuccess: function( json ) {\n                    \n                    self._setProfile( json.name, json.profile );\n                },\n                onTimeout: function() {\n                    \n                    self._setProfile( currentAuthor, currentProfile );\n                    \n                },\n                timeout: 5\n                \n            } );\n            \n        } else {\n            \n            self._setProfile( currentAuthor, currentProfile );\n            \n        }\n        \n        authorOverlayDisplay.style.display = 'block';\n        this._fadeIn( authorOverlayDisplay );\n        \n        closeBtn.addEventListener( 'click', function() {\n            self.closeOverlay();\n        }, {once: true} );\n\n    }\n    \n    // \"private\" function to set the author profile\n    _setProfile( author, bio ) {\n        \n        let authoroverlayDisplayContent = this._selector( this.el.overlayDisplayContent );\n        \n        let name = document.createElement( 'h4' );\n                    \n        name.innerHTML = author;\n                        \n        let profile = document.createElement( 'div' );\n        \n        profile.innerHTML = bio;\n        \n        authoroverlayDisplayContent.appendChild( name );\n        authoroverlayDisplayContent.appendChild( profile );\n        \n    }\n    \n    // function to close the overlay screen\n    closeOverlay() {\n        \n        let overlayDisplay = this._selector( this.el.overlayDisplay );\n        let overlayDisplayContent = this._selector( this.el.overlayDisplayContent );\n        \n        this._fadeOut( overlayDisplay, function() {\n            \n            overlayDisplay.style.display = '';\n            \n            overlayDisplayContent.innerHTML = '';\n            overlayDisplay.classList.remove( 'small-overlay' );\n            \n        } );\n\n    }\n    \n    // function to add event listener to show the profile\n    _setShowProfileListener() {\n        \n        const self = this;\n        let showProfileBtn = this._selector( this.el.showProfileBtn );\n        \n        showProfileBtn.addEventListener( 'click', function() {\n            \n            self.showProfile();\n            \n        } );\n        \n    }\n    \n    // function to expand and close the track list\n    expandTracksToggle() {\n        \n        const self = this;\n        const expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        expandTracksBtn.addEventListener( 'click', function() {\n            \n            const trackList = self._selector( self.el.trackList );\n            \n            if ( trackList.style.display == 'none' || trackList.style.display == '' ) {\n                \n                self._openTrackList();\n                \n            } else {\n                \n                self._closeTrackList();\n                \n            }\n            \n        } );\n        \n    }\n    \n    // \"private\" functiont to open the track list\n    _openTrackList() {\n        \n        const self = this;\n        const trackList = self._selector( self.el.trackList );\n        const minDisplay = self._selector( self.el.miniDisplay );\n        const expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        trackList.style.display = 'block';\n        minDisplay.style.display = 'none';\n        \n        self._slideDown( expandTracksBtn.parentNode, function() {\n            \n            expandTracksBtn.classList.add( 'rotate' );\n            trackList.style.setProperty( 'overflow-y', 'auto' );\n            \n        } );\n        \n    }\n    \n    // \"private\" functiont to close the track list\n    _closeTrackList() {\n        \n        const self = this;\n        const trackList = self._selector( self.el.trackList );\n        const minDisplay = self._selector( self.el.miniDisplay );\n        const expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        trackList.style.display = 'none';\n        trackList.style.setProperty( 'overflow-y', 'hidden' );\n        minDisplay.style.display = 'flex';\n        \n        self._slideUp( expandTracksBtn.parentNode, function() {\n            \n            expandTracksBtn.classList.remove( 'rotate' );\n            \n        } );\n        \n    }\n    \n    /*** HELPER FUNCTIONS ***/\n    \n    _selector( str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return document.querySelectorAll( str );\n            \n        } else {\n            \n            return document.querySelector( str );\n            \n        }\n        \n    }\n    \n    _xmlSelector( xml, str, all ) {\n        \n        all = typeof all === 'boolean' ? all : false;\n        \n        if ( all ) {\n            \n            return xml.querySelectorAll( str );\n            \n        } else {\n            \n            return xml.querySelector( str );\n            \n        }\n        \n    }\n    \n    _sanitize( str ) {\n        \n        return str.replace(/[^\\w]/gi, '').toLowerCase();\n    \n    }\n    \n    _isEmpty( str ) {\n        \n        if ( typeof str === 'string' && str.trim() === '' ) {\n            return true;\n        }\n        \n        if ( str === undefined ) {\n            return true;\n        }\n        \n        if ( str ===  null ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    _requestFile( url, callback ) {\n        \n        const self = this;\n        let body = self._selector( 'body' );\n        let request = new XMLHttpRequest();\n        \n        request.open( 'GET', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                callback( this );\n                \n            } else {\n                \n                body.innerHTML += '<div class=\"error\">Error ' + this.status + ' while loading <code>' + url + '</code></div>';\n                \n            }\n            \n            request.abort();\n            \n        };\n        \n        request.onerror = function() {\n            \n            body.innerHTML += '<div class=\"error\">Connection Error. Check your network.</div>';\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _fileExists( url, callback ) {\n        \n        let request = new XMLHttpRequest();\n        let found = false;\n        \n        request.open( 'HEAD', url, true );\n        \n        request.onload = function() {\n            \n            if ( this.status >= 200 && this.status < 400 ) {\n                \n                found = true;\n                \n            } else {\n                \n                found = false;\n                \n            }\n            \n            callback( found );\n            \n        };\n        \n        request.send();\n        \n    }\n    \n    _cleanArray( arr ) {\n    \n        arr.forEach( function( value, index ) {\n            \n            if ( value === '' ) {\n                arr.splice( index, 1 );\n            }\n            \n        } );\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\.\\w*/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        if ( ( /(\\w*|(\\w*\\-\\w*)*)\\:/ig ).test( arr[arr.length-1] ) ) {\n            arr.pop();\n        }\n        \n        return arr;\n        \n    }\n    \n    _parseUri( str ) {\n        \n        let parts =  str.split( '?' );\n        let target = parts[0];\n        \n        if ( target.lastIndexOf( '/' ) !== target.length - 1 ) {\n    \t\ttarget += '/';\n    \t}\n    \t\n    \treturn this._cleanArray( target.split( '/' ) );\n        \n    }\n    \n    _colorContrast( hex ) {\n        \n        let rgb = this._hexToRGB( hex ).split( ',' );\n        let contrast = Math.round( ( ( parseInt( rgb[0] ) * 299 ) +\n                      ( parseInt( rgb[1] ) * 587 ) +\n                      ( parseInt( rgb[2] ) * 114 ) ) / 1000 );\n                      \n        return contrast > 125 ? '#000' : '#fff';\n        \n    }\n    \n    _hexToRGB( hex ) {\n        \n        hex = hex.replace( /[^0-9A-F]/gi, '' );\n        \n        let bigint = parseInt( hex, 16 );\n        let r = ( bigint >> 16 ) & 255;\n        let g = ( bigint >> 8 ) & 255;\n        let b = bigint & 255;\n    \n        return [r, g, b].join();\n        \n    }\n    \n    /*** GOOGLE ANALYTICS METHODS ***/\n    \n    // function to add google analytics tracking\n    addGATracking( id, version ) {\n        \n        this.album.analyticsOn = true;\n        \n        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n        \n        ga( 'create', id, 'auto' );\n        ga( 'set', { 'appName': 'Audio Player', 'appVersion': version } );\n        ga( 'send', 'screenview', { screenName: this.reference.fileName } );\n        \n    }\n    \n    sendEventToGA( category, action, label ) {\n        \n        if ( this.album.analyticsOn ) {\n            \n            ga( 'send', 'event', category, action, label, 1, { screenName: this.reference.fileName } );\n            \n        }\n        \n    }\n    \n    /*** ANIMATION METHODS ***/\n    \n    _marqueeEl( el ) {\n        \n        const self = this;\n        \n        if ( el.offsetWidth < el.scrollWidth ) {\n            \n            let runTime = 15500;\n            let startTime = 5000;\n            \n            self.marquee.start = window.setInterval( function() {\n                \n                el.parentNode.classList.remove( 'stop-marquee' );\n                el.parentNode.classList.add( 'marquee' );\n                \n                el.style.width = el.scrollWidth + 'px';\n                \n                window.clearInterval( self.marquee.start );\n                \n                self.marquee.stop = window.setTimeout( function() {\n                     \n                    el.style.width = 'initial';\n                    el.parentNode.classList.remove( 'marquee' );\n                    window.clearTimeout( self.marquee.stop );\n                    \n                    self._fadeIn( el );\n                    self._marqueeEl( el );\n                    \n                }, runTime );\n                \n            }, startTime );\n            \n        }\n        \n    }\n    \n    _stopMarquee( el ) {\n        \n        el.style.width = '';\n        el.parentNode.classList.remove( 'marquee' );\n        el.parentNode.classList.add( 'stop-marquee' );\n        \n        if ( this.marquee.stop !== null ) {\n            window.clearTimeout( this.marquee.stop );\n        }\n        \n        if ( this.marquee.start !== null ) {\n            window.clearInterval( this.marquee.start );\n        }\n        \n    }\n    \n    _fadeIn( el, callback ) {\n        \n        el.classList.remove( 'fadeOut' );\n        el.classList.add( 'fadeIn' );\n        \n        if ( callback !== undefined ) {\n            \n            let animationEvt = this._whichAnimationEvent();\n        \n            el.params = {\n                _event: animationEvt,\n                _callback: callback\n            };\n            \n            el.addEventListener( animationEvt, this._fadeCallback );\n            \n        }\n        \n    }\n    \n    _fadeOut( el, callback ) {\n\n        el.classList.remove( 'fadeIn' );\n        el.classList.add( 'fadeOut' );\n        \n        if ( callback !== undefined ) {\n            \n            let animationEvt = this._whichAnimationEvent();\n        \n            el.params = {\n                _event: animationEvt,\n                _callback: callback\n            };\n            \n            el.addEventListener( animationEvt, this._fadeCallback );\n            \n        }\n        \n    }\n    \n    _fadeCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.classList.remove( 'fadeIn' );\n        evt.target.classList.remove( 'fadeOut' );\n        evt.target.removeEventListener( evt.target.params._event, this._fadeCallback );\n        \n        evt.target.params = {\n            _event: '',\n            _callback: ''\n        };\n        \n    }\n    \n    _slideDown( el, callback ) {\n        \n        el.classList.add( 'slideDown' );\n        el.classList.remove( 'slideUp' );\n        \n        if ( callback !== undefined ) {\n            \n            let animationEvt = this._whichAnimationEvent();\n        \n            el.params = {\n                _event: animationEvt,\n                _callback: callback\n            };\n            \n            el.addEventListener( animationEvt, this._slideCallback );\n            \n        }\n        \n    }\n    \n    _slideUp( el, callback ) {\n        \n        el.classList.add( 'slideUp' );\n        el.classList.remove( 'slideDown' );\n        \n        if ( callback !== undefined ) {\n            \n            let animationEvt = this._whichAnimationEvent();\n        \n            el.params = {\n                _event: animationEvt,\n                _callback: callback\n            };\n            \n            el.addEventListener( animationEvt, this._slideCallback );\n            \n        }\n        \n    }\n    \n    _slideCallback( evt ) {\n        \n        if ( evt.target.params !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n            evt.target.removeEventListener( evt.target.params._event, this._slideCallback );\n            \n        }\n        \n    } \n    \n    _whichAnimationEvent() {\n        \n        let ani;\n        let el = document.createElement( 'fakeelement' );\n        let animations = {\n            'animation': 'animationend',\n            'OAnimation': 'oAnimationEnd',\n            'MozAnimation': 'animationend',\n            'WebkitAnimation': 'webkitAnimationEnd'\n        }\n        \n        for ( ani in animations ) {\n            \n            if ( el.style[ani] !== undefined ) {\n                \n                return animations[ani];\n                \n            }\n            \n        }\n        \n    }\n    \n} // end APlayer class\n\n// ON DOM READY\n\n( function ready( fn ) {\n    \n    if ( document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading' ) {\n        \n        fn();\n        \n    } else {\n        \n        document.addEventListener( 'DOMContentLoaded', fn );\n        \n    }\n    \n} )( function() {\n    \n    new APlayer();\n    \n} );\n"]}