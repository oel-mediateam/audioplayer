{"version":3,"sources":["../../../source/script/audio-dev.js"],"names":["APlayer","_classCallCheck","this","el","splash","main","showProfileBtn","closeProfileBtn","profileDisplay","trackTitle","miniDisplay","trackList","expandTracksBtn","ccSpecDisplay","spectrumDisplay","captionDisplay","bodyControls","ccToggle","spectrumToggle","warning","error","errorIcon","errorTitle","errorBody","playerId","player","self","hasCoreFeaturesSupport","showError","hasAppearanceIusses","showWarning","setUIs","devOnly","Modernizr","audio","json","svg","csscalc","flexbox","canvas","cssanimations","bgsizecover","objectfit","iconStr","titleStr","bodyStr","_selector","icon","title","body","ariaHidden","document","createAttribute","value","innerHTML","style","display","setAttributeNode","_fadeIn","str","hideTime","window","setTimeout","_fadeOut","_marqueeEl","_CCSpectrumDisplays","_expandTracksToggle","_setShowProfileListener","_setupAudioPlayer","classList","add","authorProfile","closeBtn","addEventListener","closeProfile","once","showProfile","minDisplay","_hideCCSpectrum","_slideDown","parentNode","_slideUp","remove","Plyr","controls","autoplay","volume","clickToPlay","fullscreen","enabled","fallback","iosNative","resetOnEnd","on","event","instance","detail","plyr","playpauseBtn","muteUnmuteBtn","play","playing","contains","evt","target","toggles","displays","toggleCC","toggleSpectrum","querySelector","offsetWidth","scrollWidth","runTime","startTime","start","setInterval","width","clearInterval","stop","clearTimeout","callback","animationEvt","_whichAnimationEvent","params","_event","_callback","_fadeCallback","undefined","removeEventListener","_slideCallback","ani","createElement","animations","animation","OAnimation","MozAnimation","WebkitAnimation","errorDisplay","preventDefault","hideSplash","AP","ready","fn","attachEvent","readyState","go"],"mappings":"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","file":"audio.js","sourcesContent":["/*\n * Audio Player\n *\n * @author: Ethan Lin\n * @url: https://github.com/oel-mediateam/audioplayer\n * @version: 2.0.0\n *\n * @license: The MIT License (MIT)\n * Copyright (c) 2014 - 2018 Media Serivces\n *\n */\n\n'use strict';\n\nclass APlayer {\n    \n    constructor() {\n        \n        this.el = {\n            splash: '#ap-splash',\n            main: '#ap-main',\n            showProfileBtn: '#show-profile',\n            closeProfileBtn: '#author-close-btn',\n            profileDisplay: '#author-overlay',\n            trackTitle: '.track-info .title-wrapper .title',\n            miniDisplay: '.track-list .minimized-display',\n            trackList: '.track-list .tracks',\n            expandTracksBtn: '.track-list .expand-btn',\n            ccSpecDisplay: '.body .cc-spec-display',\n            spectrumDisplay: '.body .cc-spec-display .spectrum',\n            captionDisplay: '.body .cc-spec-display .caption',\n            bodyControls: '.body .controls',\n            ccToggle: '#cc-toggle',\n            spectrumToggle: '#spectrum-toggle',\n            warning: '.body .warning-msg',\n            error: '#ap-error',\n            errorIcon: '#ap-error .icon',\n            errorTitle: '#ap-error .title',\n            errorBody: '#ap-error .body',\n            playerId: '#player',\n            player: null\n        }\n        \n    }\n         \n    go() {\n        \n        let self = this;\n        \n        if ( self.hasCoreFeaturesSupport() ) {\n        \n            self.showError( '🙈', '', 'Your web browser does not support core audio player features.<br><a href=\"http://outdatedbrowser.com/en\" target=\"_blank\">Please update your web browser.</a>' );\n            return;\n            \n        }\n        \n        if ( self.hasAppearanceIusses() ) {\n        \n            self.showWarning( 'For better viewing, try a different web browser.' );\n            \n        }\n        \n        self.setUIs();\n        \n        /************ DEV ONLY (remove later) ***********/\n        \n        self.devOnly();\n        \n        /************** END DEV ONLY ********************/\n        \n    }\n    \n    hasCoreFeaturesSupport() {\n    \n        if ( !Modernizr.audio && Modernizr.json && Modernizr.svg\n             && Modernizr.csscalc && Modernizr.flexbox ) {\n            return true;\n        }\n        \n        return false;\n        \n    }\n    \n    hasAppearanceIusses() {\n    \n        if ( !Modernizr.canvas ) {\n            return true;\n        }\n        \n        if ( !Modernizr.cssanimations ) {\n            return true;\n        }\n        \n        if ( !Modernizr.bgsizecover ) {\n            return true\n        }\n        \n        if ( !Modernizr.objectfit ) {\n            return true\n        }\n        \n        return false;\n        \n    }\n    \n    showError( iconStr, titleStr, bodyStr ) {\n    \n        let splash = this._selector( this.el.splash );\n        let main = this._selector( this.el.main );\n        let error = this._selector( this.el.error );\n        let icon = this._selector( this.el.errorIcon );\n        let title = this._selector( this.el.errorTitle );\n        let body = this._selector( this.el.errorBody );\n        \n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = false;\n        \n        icon.innerHTML = iconStr;\n        title.innerHTML = titleStr;\n        body.innerHTML = bodyStr;\n        \n        splash.style.display = 'none';\n        main.style.display = 'none';\n        \n        error.style.display = 'flex';\n        error.setAttributeNode( ariaHidden );\n        \n        this._fadeIn( error );\n        \n    }\n    \n    showWarning( str ) {\n    \n        let self = this;\n        let warning = self._selector( self.el.warning );\n        let hideTime = 6000;\n        \n        warning.innerHTML = str;\n        warning.style.display = 'block';\n        \n        self._fadeIn( warning );\n        \n        window.setTimeout( function() {\n            \n            self._fadeOut( warning, function() {\n                \n                warning.innerHTML = '';\n                warning.style.display = 'none';\n                \n            } );\n            \n        }, hideTime );\n        \n    }\n    \n    setUIs() {\n        \n        let self = this;\n        let trackTitle = self._selector( this.el.trackTitle );\n        \n        this._marqueeEl( trackTitle );\n        this._CCSpectrumDisplays();\n        this._expandTracksToggle();\n        this._setShowProfileListener();\n        this._setupAudioPlayer();\n        \n    }\n    \n    hideSplash() {\n    \n        let splash = this._selector( this.el.splash );\n        let ariaHidden = document.createAttribute( 'aria-hidden' );\n        \n        ariaHidden.value = true;\n        \n        splash.classList.add( 'hide-splash' );\n        splash.setAttributeNode( ariaHidden );\n        \n    }\n    \n    showProfile() {\n        \n        let self = this;\n        let authorProfile = this._selector( this.el.profileDisplay );\n        let closeBtn = this._selector( this.el.closeProfileBtn );\n        \n        authorProfile.style.display = 'block';\n        this._fadeIn( authorProfile );\n        \n        closeBtn.addEventListener( 'click', function() {\n            self.closeProfile();\n        }, {once: true} );\n\n    }\n    \n    closeProfile() {\n        \n        let authorProfile = this._selector( this.el.profileDisplay );\n        \n        this._fadeOut( authorProfile, function() {\n            \n            authorProfile.style.display = '';\n            \n        } );\n\n    }\n    \n    _setShowProfileListener() {\n        \n        let self = this;\n        let showProfileBtn = this._selector( this.el.showProfileBtn );\n        \n        showProfileBtn.addEventListener( 'click', function() {\n            \n            self.showProfile();\n            \n        } );\n        \n    }\n    \n    _expandTracksToggle() {\n        \n        let self = this;\n        let expandTracksBtn = self._selector( this.el.expandTracksBtn );\n        \n        expandTracksBtn.addEventListener( 'click', function() {\n            \n            let trackList = self._selector( self.el.trackList );\n            let minDisplay = self._selector( self.el.miniDisplay );\n            \n            if ( trackList.style.display == 'none' || trackList.style.display == '' ) {\n                \n                trackList.style.display = 'block';\n                minDisplay.style.display = 'none';\n                \n                self._hideCCSpectrum();\n                \n                self._slideDown( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.add( 'rotate' );\n                    \n                } );\n                \n            } else {\n                \n                trackList.style.display = 'none';\n                minDisplay.style.display = 'flex';\n                \n                self._slideUp( expandTracksBtn.parentNode, function() {\n                    \n                    expandTracksBtn.classList.remove( 'rotate' );\n                    self._CCSpectrumDisplays();\n                    \n                } );\n                \n            }\n            \n        } );\n        \n    }\n    \n    _setupAudioPlayer() {\n        // https://github.com/sampotts/plyr\n        \n        var self = this;\n        \n        const controls = `\n        <div class=\"plyr__controls\">\n            \n            <div class=\"top-controls\">\n            \n                <div class=\"plyr__time plyr__time--current\" aria-label=\"Current time\">00:00</div>\n                \n                <div class=\"plyr__progress\">\n                    <input id=\"plyr-seek-{id}\" data-plyr=\"seek\" type=\"range\" min=\"0\" max=\"100\" step=\"0.01\" value=\"0\" aria-label=\"Seek\">\n                    <progress class=\"plyr__progress__buffer\" min=\"0\" max=\"100\" value=\"0\" role=\"presentation\" aria-hidden=\"true\">% buffered</progress>\n                    <span role=\"tooltip\" class=\"plyr__tooltip\">00:00</span>\n                </div>\n                \n                <div class=\"plyr__time plyr__time--duration\" aria-label=\"Duration\">00:00</div>\n            \n            </div>\n            \n            <div class=\"middle-controls\">\n                \n                <button type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"source/images/icons.svg#icon-previous\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Previous</span>\n                </button>\n                \n                <button type=\"button\" class=\"plyr__control\" data-plyr=\"rewind\">\n                    <svg role=\"presentation\"><use xlink:href=\"source/images/icons.svg#icon-backward\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Rewind {seektime} secs</span>\n                </button>\n                \n                <button type=\"button\" id=\"ap-playpause\" class=\"plyr__control\" aria-label=\"Play, {title}\" data-plyr=\"play\">\n                    <svg class=\"icon--pressed\" role=\"presentation\"><use xlink:href=\"source/images/icons.svg#icon-play\"></use></svg>\n                    <svg class=\"icon--not-pressed\" role=\"presentation\"><use xlink:href=\"source/images/icons.svg#icon-pause\"></use></svg>\n                    <span class=\"label--pressed plyr__tooltip\" role=\"tooltip\">Play</span>\n                    <span class=\"label--not-pressed plyr__tooltip\" role=\"tooltip\">Pause</span>\n                </button>\n                \n                <button type=\"button\" class=\"plyr__control\" data-plyr=\"fast-forward\">\n                    <svg role=\"presentation\"><use xlink:href=\"source/images/icons.svg#icon-forward\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Forward {seektime} secs</span>\n                </button>\n                \n                <button type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"source/images/icons.svg#icon-next\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Next</span>\n                </button>\n            \n            </div>\n            \n            <div class=\"bottom-controls\">\n                \n                <button type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"source/images/icons.svg#icon-loop\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Loop</span>\n                </button>\n                \n                <button id=\"ap-playbackRate\" type=\"button\" class=\"plyr__control\">1x</button>\n                \n                <div class=\"ap-volcontrols\">\n                \n                    <button type=\"button\" id=\"ap-muteunmute\" class=\"plyr__control\" aria-label=\"Mute\" data-plyr=\"mute\">\n                        <svg class=\"icon--pressed\" role=\"presentation\"><use xlink:href=\"#plyr-muted\"></use></svg>\n                        <svg class=\"icon--not-pressed\" role=\"presentation\"><use xlink:href=\"#plyr-volume\"></use></svg>\n                        <span class=\"label--pressed plyr__tooltip\" role=\"tooltip\">Unmute</span>\n                        <span class=\"label--not-pressed plyr__tooltip\" role=\"tooltip\">Mute</span>\n                    </button>\n                    \n                    <div class=\"plyr__volume\">\n                        <input data-plyr=\"volume\" type=\"range\" min=\"0\" max=\"1\" step=\"0.05\" value=\"1\" autocomplete=\"off\" aria-label=\"Volume\">\n                    </div>\n                \n                </div>\n                \n                <button type=\"button\" class=\"plyr__control\">\n                    <svg role=\"presentation\"><use xlink:href=\"source/images/icons.svg#icon-download\"></use></svg>\n                    <span class=\"plyr__tooltip\" role=\"tooltip\">Download</span>\n                </button>\n            \n            </div>\n            \n        </div>\n        `;\n        \n        self.el.player = new Plyr( this.el.playerId, {\n            \n            controls: controls,\n            autoplay: false,\n            volume: 0.8,\n            clickToPlay: false,\n            fullscreen: {\n                enabled: false,\n                fallback: false,\n                iosNative: false\n            },\n            resetOnEnd: true\n                        \n        } );\n        \n        self.el.player.on( 'ready', event => {\n            \n            \n            const instance = event.detail.plyr;\n            const playpauseBtn = self._selector( '#ap-playpause' );\n            const muteUnmuteBtn = self._selector( '#ap-muteunmute' );\n            \n            instance.play();\n            instance.playing;\n            \n            instance.on( 'ended', function() {\n                \n                if ( !playpauseBtn.classList.contains( 'plyr__control--pressed' ) ) {\n                \n                    playpauseBtn.classList.add( 'plyr__control--pressed' );\n                    \n                }\n                \n            } );\n            \n            playpauseBtn.addEventListener( 'click', function( evt ) {\n            \n                if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                    evt.target.classList.remove( 'plyr__control--pressed' );\n                    \n                } else {\n                    \n                    evt.target.classList.add( 'plyr__control--pressed' );\n                    \n                }\n                \n            } );\n            \n            muteUnmuteBtn.addEventListener( 'click', function( evt ) {\n                \n                if ( evt.target.classList.contains( 'plyr__control--pressed' ) ) {\n                    \n                    evt.target.classList.remove( 'plyr__control--pressed' );\n                    \n                } else {\n                    \n                    evt.target.classList.add( 'plyr__control--pressed' );\n                    \n                }\n                \n            } );\n                \n        } );\n        \n    }\n    \n    toggleCC() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        ccToggle.classList.add( 'disabled' );\n        spectrumToggle.classList.remove( 'disabled' );\n        \n        captionDisplay.classList.add( 'active' );\n        spectrumDisplay.classList.remove( 'active' );\n        \n    }\n    \n    toggleSpectrum() {\n        \n        let captionDisplay = this._selector( this.el.captionDisplay );\n        let spectrumDisplay = this._selector( this.el.spectrumDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        spectrumToggle.classList.add( 'disabled' );\n        ccToggle.classList.remove( 'disabled' );\n        \n        spectrumDisplay.classList.add( 'active' );\n        captionDisplay.classList.remove( 'active' );\n        \n    }\n    \n    _CCSpectrumDisplays() {\n        \n        let self = this;\n        let toggles = this._selector( this.el.bodyControls );\n        let displays = this._selector( this.el.ccSpecDisplay );\n        let ccToggle = this._selector( this.el.ccToggle );\n        let spectrumToggle = this._selector( this.el.spectrumToggle );\n        \n        if ( toggles.style.display === 'none' ) {\n            \n            toggles.style.display = '';\n            displays.style.display = '';\n            \n        } else {\n\n            self.toggleCC();\n            \n        }\n        \n        ccToggle.addEventListener( 'click', function() {\n            self.toggleCC();\n        } );\n        \n        spectrumToggle.addEventListener( 'click', function() {\n            self.toggleSpectrum();\n        } );\n        \n    }\n    \n    _hideCCSpectrum() {\n        \n        let displays = this._selector( this.el.ccSpecDisplay );\n        let toggles = this._selector( this.el.bodyControls );\n        \n        toggles.style.display = 'none';\n        displays.style.display = 'none';\n        \n    }\n    \n    /*** HELPER METHODS ***/\n    \n    _selector( str ) {\n        return document.querySelector( str );\n    }\n    \n    /*** ANIMATION METHODS ***/\n    \n    _marqueeEl( el ) {\n        \n        let self = this;\n        \n        if ( el.offsetWidth < el.scrollWidth ) {\n            \n            let runTime = 15500;\n            let startTime = 5000;\n            \n            let start = window.setInterval( function() {\n                \n                el.parentNode.classList.add( 'marquee' );\n                \n                el.style.width = el.scrollWidth + 'px';\n                \n                window.clearInterval( start );\n                \n                let stop = window.setTimeout( function() {\n                    \n                    el.style.width = 'initial';\n                    \n                    self._fadeIn( el );\n                    \n                    el.parentNode.classList.remove( 'marquee' );\n                    window.clearTimeout( stop );\n                    self._marqueeEl( el );\n                    \n                }, runTime );\n                \n            }, startTime );\n            \n        }\n        \n    }\n    \n    _fadeIn( el, callback ) {\n        \n        el.classList.remove( 'fadeOut' );\n        el.classList.add( 'fadeIn' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeOut( el, callback ) {\n\n        el.classList.remove( 'fadeIn' );\n        el.classList.add( 'fadeOut' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._fadeCallback );\n        \n    }\n    \n    _fadeCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.classList.remove( 'fadeIn' );\n        evt.target.classList.remove( 'fadeOut' );\n        evt.target.removeEventListener( evt.target.params._event, this._fadeCallback );\n        \n    }\n    \n    _slideDown( el, callback ) {\n        \n        el.classList.add( 'slideDown' );\n        el.classList.remove( 'slideUp' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideUp( el, callback ) {\n        \n        el.classList.add( 'slideUp' );\n        el.classList.remove( 'slideDown' );\n        \n        let animationEvt = this._whichAnimationEvent();\n        \n        el.params = {\n            _event: animationEvt,\n            _callback: callback\n        };\n        \n        el.addEventListener( animationEvt, this._slideCallback );\n        \n    }\n    \n    _slideCallback( evt ) {\n        \n        if ( evt.target.params._callback !== undefined ) {\n            \n            if ( typeof evt.target.params._callback === 'function' ) {\n                \n                evt.target.params._callback();\n                \n            }\n            \n        }\n        \n        evt.target.removeEventListener( evt.target.params._event, this._slideCallback );\n        \n    } \n    \n    _whichAnimationEvent() {\n        \n        let ani;\n        let el = document.createElement( 'fakeelement' );\n        let animations = {\n            'animation': 'animationend',\n            'OAnimation': 'oAnimationEnd',\n            'MozAnimation': 'animationend',\n            'WebkitAnimation': 'webkitAnimationEnd'\n        }\n        \n        for ( ani in animations ) {\n            \n            if ( el.style[ani] !== undefined ) {\n                \n                return animations[ani];\n                \n            }\n            \n        }\n        \n    }\n    \n    /*** DEV ONLY (remove later) ***/\n    devOnly() {\n        \n        let self = this;\n        let errToggle = self._selector( '#dev-error-toggle' );\n        \n        errToggle.addEventListener('click', function(evt) {\n            \n            let errorDisplay = self._selector( self.el.error );\n            \n            if ( errorDisplay.style.display == '' || \n                errorDisplay.style.display == 'none' ) {\n                self.showError('👾', 'Error Title', 'Error message goes here with <a href=\"#\">link</a>.');      \n            } else {\n                \n                let splash = self._selector( self.el.splash );\n                let main = self._selector( self.el.main );\n                let icon = self._selector( self.el.errorIcon );\n                let title = self._selector( self.el.errorTitle );\n                let body = self._selector( self.el.errorBody );\n                \n                splash.style.display = '';\n                main.style.display = '';\n                \n                self._fadeOut( errorDisplay, function() {\n                    \n                    errorDisplay.style.display = 'none';\n                    icon.innerHTML = '';\n                    title.innerHTML = '';\n                    body.innerHTML = '';\n                    \n                } );\n                \n            }\n            \n            evt.preventDefault();\n            \n        } );\n        \n        let warningToggle = self._selector( '#dev-warning-toggle' );\n        \n        warningToggle.addEventListener('click', function(evt) {\n            \n            self.showWarning( 'This is a warning message. Will disappear on its own.' );\n            \n            evt.preventDefault();\n            \n        } );\n        \n        let splashToggle = self._selector( '#dev-splash-toggle' );\n        \n        splashToggle.addEventListener('click', function(evt) {\n            \n            if ( self._selector( self.el.splash ).classList.contains( 'hide-splash' ) ) {\n                self._selector( self.el.splash ).classList.remove('hide-splash');\n            } else {\n                self.hideSplash();\n            }\n            \n            evt.preventDefault();\n            \n        } );\n        \n    } /*** DEV ONLY ***/\n    \n} // end APlayer class\n\nlet AP = null;\n\n/**** ON DOM READY ****/\n( function ready( fn ) {\n    \n    if ( document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading' ) {\n        \n        fn();\n        \n    } else {\n        \n        document.addEventListener( 'DOMContentLoaded', fn );\n        \n    }\n    \n} )( function() {\n    \n    AP = new APlayer();\n    AP.go();\n    \n} );\n"]}